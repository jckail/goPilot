
function loadScript(src, mod = true) {
let s = document.createElement('script');
s.src = src;
if (mod) {
s.type = 'module';
s.async = true;
s.defer = true
}
document.head.appendChild(s);
}
loadScript("/third_party/dialog-polyfill/dialog-polyfill.js", false)
loadScript("/static/frontend/frontend.js");

Skip to Main Content

Why Go
Case Studies
Common problems companies solve with Go
Use Cases
Stories about how and why companies use Go
Security Policy
How Go can help keep you secure by default      Learn    Docs
Effective Go
Tips for writing clear, performant, and idiomatic Go code
Go User Manual
A complete introduction to building software with Go
Standard library
Reference documentation for Go's standard library
Release Notes
Learn what's new in each Go release      Packages    Community
Recorded Talks
Videos from prior events
Meetups
Meet other local Go developers
Conferences
Learn and network with Go developers from around the world
Go blog
The Go project's official blog.
Go project
Get help and stay informed from Go
Get connected


Why Go


Why Go     Case Studies    Use Cases    Security Policy        Learn     Docs


Docs     Effective Go    Go User Manual    Standard library    Release Notes        Packages     Community


Community     Recorded Talks    Meetups       Conferences       Go blog    Go project
Get connected


Discover Packages    github.com/aws/aws-sdk-go    service    s3

s3  package
Version: v1.47.5   Latest  Latest
This package is not in the latest version of its module.     Go to latest     Published: Nov  7, 2023  License: Apache-2.0     Imports: 36     Imported by: 6,874
Main  Versions  Licenses  Imports  Imported By
Details      Valid go.mod file
The Go module system was introduced in Go 1.11 and is the official dependency management
solution for Go.       Redistributable license
Redistributable licenses place minimal restrictions on how software can be used,
modified, and redistributed.       Tagged version
Modules with tagged versions give importers more predictable builds.       Stable version
When a project reaches major version v1 it is considered stable.     Learn more about best practices    Repository
github.com/aws/aws-sdk-go   Links     Open Source Insights


Documentation

Overview
Using the Client    Upload Managers    Download Manager    Automatic URI cleaning    Get Bucket Region    S3 Crypto Client
Package s3 provides the client and types for making API
requests to Amazon Simple Storage Service.
See https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01 for more information on this service.
See s3 package documentation for more information. https://docs.aws.amazon.com/sdk-for-go/api/service/s3/  Using the Client
To contact Amazon Simple Storage Service with the SDK use the New function to create
a new service client. With that client you can make API requests to the service.
These clients are safe to use concurrently.
See the SDK's documentation for more information on how to use the SDK. https://docs.aws.amazon.com/sdk-for-go/api/
See aws.Config documentation for more information on configuring SDK clients. https://docs.aws.amazon.com/sdk-for-go/api/aws/#Config
See the Amazon Simple Storage Service client S3 for more
information on creating client for this service. https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#New  Upload Managers
The s3manager package's Uploader provides concurrent upload of content to S3
by taking advantage of S3's Multipart APIs. The Uploader also supports both
io.Reader for streaming uploads, and will also take advantage of io.ReadSeeker
for optimizations if the Body satisfies that type. Once the Uploader instance
is created you can call Upload concurrently from multiple goroutines safely. // The session the S3 Uploader will use
sess := session.Must(session.NewSession())

// Create an uploader with the session and default options
uploader := s3manager.NewUploader(sess)

f, err  := os.Open(filename)
if err != nil {
return fmt.Errorf("failed to open file %q, %v", filename, err)
}

// Upload the file to S3.
result, err := uploader.Upload(&s3manager.UploadInput{
Bucket: aws.String(myBucket),
Key:    aws.String(myString),
Body:   f,
})
if err != nil {
return fmt.Errorf("failed to upload file, %v", err)
}
fmt.Printf("file uploaded to, %s\n", aws.StringValue(result.Location))
See the s3manager package's Uploader type documentation for more information. https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#Uploader  Download Manager
The s3manager package's Downloader provides concurrently downloading of Objects
from S3. The Downloader will write S3 Object content with an io.WriterAt.
Once the Downloader instance is created you can call Download concurrently from
multiple goroutines safely. // The session the S3 Downloader will use
sess := session.Must(session.NewSession())

// Create a downloader with the session and default options
downloader := s3manager.NewDownloader(sess)

// Create a file to write the S3 Object contents to.
f, err := os.Create(filename)
if err != nil {
return fmt.Errorf("failed to create file %q, %v", filename, err)
}

// Write the contents of S3 Object to the file
n, err := downloader.Download(f, &s3.GetObjectInput{
Bucket: aws.String(myBucket),
Key:    aws.String(myString),
})
if err != nil {
return fmt.Errorf("failed to download file, %v", err)
}
fmt.Printf("file downloaded, %d bytes\n", n)
See the s3manager package's Downloader type documentation for more information. https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#Downloader  Automatic URI cleaning
Interacting with objects whose keys contain adjacent slashes (e.g. bucketname/foo//bar/objectname)
requires setting DisableRestProtocolURICleaning to true in the aws.Config struct
used by the service client. svc := s3.New(sess, &aws.Config{
DisableRestProtocolURICleaning: aws.Bool(true),
})
out, err := svc.GetObject(&s3.GetObjectInput {
Bucket: aws.String("bucketname"),
Key: aws.String("//foo//bar//moo"),
}) Get Bucket Region
GetBucketRegion will attempt to get the region for a bucket using a region
hint to determine which AWS partition to perform the query on. Use this utility
to determine the region a bucket is in. sess := session.Must(session.NewSession())

bucket := "my-bucket"
region, err := s3manager.GetBucketRegion(ctx, sess, bucket, "us-west-2")
if err != nil {
if aerr, ok := err.(awserr.Error); ok && aerr.Code() == "NotFound" {
fmt.Fprintf(os.Stderr, "unable to find bucket %s's region not found\n", bucket)
}
return err
}
fmt.Printf("Bucket %s is in %s region\n", bucket, region)
See the s3manager package's GetBucketRegion function documentation for more information https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#GetBucketRegion  S3 Crypto Client
The s3crypto package provides the tools to upload and download encrypted
content from S3. The Encryption and Decryption clients can be used concurrently
once the client is created.
See the s3crypto package documentation for more information. https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3crypto/    Examples   S3.AbortMultipartUpload (Shared00)  S3.CompleteMultipartUpload (Shared00)  S3.CopyObject (Shared00)  S3.CreateBucket (Shared00)  S3.CreateBucket (Shared01)  S3.CreateMultipartUpload (Shared00)  S3.DeleteBucket (Shared00)  S3.DeleteBucketCors (Shared00)  S3.DeleteBucketLifecycle (Shared00)  S3.DeleteBucketPolicy (Shared00)  S3.DeleteBucketReplication (Shared00)  S3.DeleteBucketTagging (Shared00)  S3.DeleteBucketWebsite (Shared00)  S3.DeleteObject (Shared00)  S3.DeleteObject (Shared01)  S3.DeleteObjectTagging (Shared00)  S3.DeleteObjectTagging (Shared01)  S3.DeleteObjects (Shared00)  S3.DeleteObjects (Shared01)  S3.GetBucketCors (Shared00)  S3.GetBucketLifecycle (Shared00)  S3.GetBucketLifecycleConfiguration (Shared00)  S3.GetBucketLocation (Shared00)  S3.GetBucketNotification (Shared00)  S3.GetBucketNotification (Shared01)  S3.GetBucketPolicy (Shared00)  S3.GetBucketReplication (Shared00)  S3.GetBucketRequestPayment (Shared00)  S3.GetBucketTagging (Shared00)  S3.GetBucketVersioning (Shared00)  S3.GetBucketWebsite (Shared00)  S3.GetObject (Shared00)  S3.GetObject (Shared01)  S3.GetObjectAcl (Shared00)  S3.GetObjectTagging (Shared00)  S3.GetObjectTagging (Shared01)  S3.GetObjectTorrent (Shared00)  S3.HeadBucket (Shared00)  S3.HeadObject (Shared00)  S3.ListBuckets (Shared00)  S3.ListMultipartUploads (Shared00)  S3.ListMultipartUploads (Shared01)  S3.ListObjectVersions (Shared00)  S3.ListObjects (Shared00)  S3.ListObjectsV2 (Shared00)  S3.ListParts (Shared00)  S3.PutBucketAcl (Shared00)  S3.PutBucketCors (Shared00)  S3.PutBucketLifecycleConfiguration (Shared00)  S3.PutBucketLogging (Shared00)  S3.PutBucketNotificationConfiguration (Shared00)  S3.PutBucketPolicy (Shared00)  S3.PutBucketReplication (Shared00)  S3.PutBucketRequestPayment (Shared00)  S3.PutBucketTagging (Shared00)  S3.PutBucketVersioning (Shared00)  S3.PutBucketWebsite (Shared00)  S3.PutObject (Shared00)  S3.PutObject (Shared01)  S3.PutObject (Shared02)  S3.PutObject (Shared03)  S3.PutObject (Shared04)  S3.PutObject (Shared05)  S3.PutObject (Shared06)  S3.PutObjectAcl (Shared00)  S3.PutObjectTagging (Shared00)  S3.RestoreObject (Shared00)  S3.SelectObjectContent  S3.UploadPart (Shared00)  S3.UploadPartCopy (Shared00)  S3.UploadPartCopy (Shared01)   Constants
View Source  const (  // ArchiveStatusArchiveAccess is a ArchiveStatus enum value  ArchiveStatusArchiveAccess = "ARCHIVE_ACCESS"  // ArchiveStatusDeepArchiveAccess is a ArchiveStatus enum value  ArchiveStatusDeepArchiveAccess = "DEEP_ARCHIVE_ACCESS"
)
View Source  const (  // BucketAccelerateStatusEnabled is a BucketAccelerateStatus enum value  BucketAccelerateStatusEnabled = "Enabled"  // BucketAccelerateStatusSuspended is a BucketAccelerateStatus enum value  BucketAccelerateStatusSuspended = "Suspended"
)
View Source  const (  // BucketCannedACLPrivate is a BucketCannedACL enum value  BucketCannedACLPrivate = "private"  // BucketCannedACLPublicRead is a BucketCannedACL enum value  BucketCannedACLPublicRead = "public-read"  // BucketCannedACLPublicReadWrite is a BucketCannedACL enum value  BucketCannedACLPublicReadWrite = "public-read-write"  // BucketCannedACLAuthenticatedRead is a BucketCannedACL enum value  BucketCannedACLAuthenticatedRead = "authenticated-read"
)
View Source  const (  // BucketLocationConstraintAfSouth1 is a BucketLocationConstraint enum value  BucketLocationConstraintAfSouth1 = "af-south-1"  // BucketLocationConstraintApEast1 is a BucketLocationConstraint enum value  BucketLocationConstraintApEast1 = "ap-east-1"  // BucketLocationConstraintApNortheast1 is a BucketLocationConstraint enum value  BucketLocationConstraintApNortheast1 = "ap-northeast-1"  // BucketLocationConstraintApNortheast2 is a BucketLocationConstraint enum value  BucketLocationConstraintApNortheast2 = "ap-northeast-2"  // BucketLocationConstraintApNortheast3 is a BucketLocationConstraint enum value  BucketLocationConstraintApNortheast3 = "ap-northeast-3"  // BucketLocationConstraintApSouth1 is a BucketLocationConstraint enum value  BucketLocationConstraintApSouth1 = "ap-south-1"  // BucketLocationConstraintApSoutheast1 is a BucketLocationConstraint enum value  BucketLocationConstraintApSoutheast1 = "ap-southeast-1"  // BucketLocationConstraintApSoutheast2 is a BucketLocationConstraint enum value  BucketLocationConstraintApSoutheast2 = "ap-southeast-2"  // BucketLocationConstraintApSoutheast3 is a BucketLocationConstraint enum value  BucketLocationConstraintApSoutheast3 = "ap-southeast-3"  // BucketLocationConstraintCaCentral1 is a BucketLocationConstraint enum value  BucketLocationConstraintCaCentral1 = "ca-central-1"  // BucketLocationConstraintCnNorth1 is a BucketLocationConstraint enum value  BucketLocationConstraintCnNorth1 = "cn-north-1"  // BucketLocationConstraintCnNorthwest1 is a BucketLocationConstraint enum value  BucketLocationConstraintCnNorthwest1 = "cn-northwest-1"  // BucketLocationConstraintEu is a BucketLocationConstraint enum value  BucketLocationConstraintEu = "EU"  // BucketLocationConstraintEuCentral1 is a BucketLocationConstraint enum value  BucketLocationConstraintEuCentral1 = "eu-central-1"  // BucketLocationConstraintEuNorth1 is a BucketLocationConstraint enum value  BucketLocationConstraintEuNorth1 = "eu-north-1"  // BucketLocationConstraintEuSouth1 is a BucketLocationConstraint enum value  BucketLocationConstraintEuSouth1 = "eu-south-1"  // BucketLocationConstraintEuWest1 is a BucketLocationConstraint enum value  BucketLocationConstraintEuWest1 = "eu-west-1"  // BucketLocationConstraintEuWest2 is a BucketLocationConstraint enum value  BucketLocationConstraintEuWest2 = "eu-west-2"  // BucketLocationConstraintEuWest3 is a BucketLocationConstraint enum value  BucketLocationConstraintEuWest3 = "eu-west-3"  // BucketLocationConstraintMeSouth1 is a BucketLocationConstraint enum value  BucketLocationConstraintMeSouth1 = "me-south-1"  // BucketLocationConstraintSaEast1 is a BucketLocationConstraint enum value  BucketLocationConstraintSaEast1 = "sa-east-1"  // BucketLocationConstraintUsEast2 is a BucketLocationConstraint enum value  BucketLocationConstraintUsEast2 = "us-east-2"  // BucketLocationConstraintUsGovEast1 is a BucketLocationConstraint enum value  BucketLocationConstraintUsGovEast1 = "us-gov-east-1"  // BucketLocationConstraintUsGovWest1 is a BucketLocationConstraint enum value  BucketLocationConstraintUsGovWest1 = "us-gov-west-1"  // BucketLocationConstraintUsWest1 is a BucketLocationConstraint enum value  BucketLocationConstraintUsWest1 = "us-west-1"  // BucketLocationConstraintUsWest2 is a BucketLocationConstraint enum value  BucketLocationConstraintUsWest2 = "us-west-2"  // BucketLocationConstraintApSouth2 is a BucketLocationConstraint enum value  BucketLocationConstraintApSouth2 = "ap-south-2"  // BucketLocationConstraintEuSouth2 is a BucketLocationConstraint enum value  BucketLocationConstraintEuSouth2 = "eu-south-2"
)
View Source  const (  // BucketLogsPermissionFullControl is a BucketLogsPermission enum value  BucketLogsPermissionFullControl = "FULL_CONTROL"  // BucketLogsPermissionRead is a BucketLogsPermission enum value  BucketLogsPermissionRead = "READ"  // BucketLogsPermissionWrite is a BucketLogsPermission enum value  BucketLogsPermissionWrite = "WRITE"
)
View Source  const (  // BucketVersioningStatusEnabled is a BucketVersioningStatus enum value  BucketVersioningStatusEnabled = "Enabled"  // BucketVersioningStatusSuspended is a BucketVersioningStatus enum value  BucketVersioningStatusSuspended = "Suspended"
)
View Source  const (  // ChecksumAlgorithmCrc32 is a ChecksumAlgorithm enum value  ChecksumAlgorithmCrc32 = "CRC32"  // ChecksumAlgorithmCrc32c is a ChecksumAlgorithm enum value  ChecksumAlgorithmCrc32c = "CRC32C"  // ChecksumAlgorithmSha1 is a ChecksumAlgorithm enum value  ChecksumAlgorithmSha1 = "SHA1"  // ChecksumAlgorithmSha256 is a ChecksumAlgorithm enum value  ChecksumAlgorithmSha256 = "SHA256"
)
View Source  const (  // CompressionTypeNone is a CompressionType enum value  CompressionTypeNone = "NONE"  // CompressionTypeGzip is a CompressionType enum value  CompressionTypeGzip = "GZIP"  // CompressionTypeBzip2 is a CompressionType enum value  CompressionTypeBzip2 = "BZIP2"
)
View Source  const (  // DeleteMarkerReplicationStatusEnabled is a DeleteMarkerReplicationStatus enum value  DeleteMarkerReplicationStatusEnabled = "Enabled"  // DeleteMarkerReplicationStatusDisabled is a DeleteMarkerReplicationStatus enum value  DeleteMarkerReplicationStatusDisabled = "Disabled"
)
View Source  const (  // EventS3ReducedRedundancyLostObject is a Event enum value  EventS3ReducedRedundancyLostObject = "s3:ReducedRedundancyLostObject"  // EventS3ObjectCreated is a Event enum value  EventS3ObjectCreated = "s3:ObjectCreated:*"  // EventS3ObjectCreatedPut is a Event enum value  EventS3ObjectCreatedPut = "s3:ObjectCreated:Put"  // EventS3ObjectCreatedPost is a Event enum value  EventS3ObjectCreatedPost = "s3:ObjectCreated:Post"  // EventS3ObjectCreatedCopy is a Event enum value  EventS3ObjectCreatedCopy = "s3:ObjectCreated:Copy"  // EventS3ObjectCreatedCompleteMultipartUpload is a Event enum value  EventS3ObjectCreatedCompleteMultipartUpload = "s3:ObjectCreated:CompleteMultipartUpload"  // EventS3ObjectRemoved is a Event enum value  EventS3ObjectRemoved = "s3:ObjectRemoved:*"  // EventS3ObjectRemovedDelete is a Event enum value  EventS3ObjectRemovedDelete = "s3:ObjectRemoved:Delete"  // EventS3ObjectRemovedDeleteMarkerCreated is a Event enum value  EventS3ObjectRemovedDeleteMarkerCreated = "s3:ObjectRemoved:DeleteMarkerCreated"  // EventS3ObjectRestore is a Event enum value  EventS3ObjectRestore = "s3:ObjectRestore:*"  // EventS3ObjectRestorePost is a Event enum value  EventS3ObjectRestorePost = "s3:ObjectRestore:Post"  // EventS3ObjectRestoreCompleted is a Event enum value  EventS3ObjectRestoreCompleted = "s3:ObjectRestore:Completed"  // EventS3Replication is a Event enum value  EventS3Replication = "s3:Replication:*"  // EventS3ReplicationOperationFailedReplication is a Event enum value  EventS3ReplicationOperationFailedReplication = "s3:Replication:OperationFailedReplication"  // EventS3ReplicationOperationNotTracked is a Event enum value  EventS3ReplicationOperationNotTracked = "s3:Replication:OperationNotTracked"  // EventS3ReplicationOperationMissedThreshold is a Event enum value  EventS3ReplicationOperationMissedThreshold = "s3:Replication:OperationMissedThreshold"  // EventS3ReplicationOperationReplicatedAfterThreshold is a Event enum value  EventS3ReplicationOperationReplicatedAfterThreshold = "s3:Replication:OperationReplicatedAfterThreshold"  // EventS3ObjectRestoreDelete is a Event enum value  EventS3ObjectRestoreDelete = "s3:ObjectRestore:Delete"  // EventS3LifecycleTransition is a Event enum value  EventS3LifecycleTransition = "s3:LifecycleTransition"  // EventS3IntelligentTiering is a Event enum value  EventS3IntelligentTiering = "s3:IntelligentTiering"  // EventS3ObjectAclPut is a Event enum value  EventS3ObjectAclPut = "s3:ObjectAcl:Put"  // EventS3LifecycleExpiration is a Event enum value  EventS3LifecycleExpiration = "s3:LifecycleExpiration:*"  // EventS3LifecycleExpirationDelete is a Event enum value  EventS3LifecycleExpirationDelete = "s3:LifecycleExpiration:Delete"  // EventS3LifecycleExpirationDeleteMarkerCreated is a Event enum value  EventS3LifecycleExpirationDeleteMarkerCreated = "s3:LifecycleExpiration:DeleteMarkerCreated"  // EventS3ObjectTagging is a Event enum value  EventS3ObjectTagging = "s3:ObjectTagging:*"  // EventS3ObjectTaggingPut is a Event enum value  EventS3ObjectTaggingPut = "s3:ObjectTagging:Put"  // EventS3ObjectTaggingDelete is a Event enum value  EventS3ObjectTaggingDelete = "s3:ObjectTagging:Delete"
)
The bucket event for which to send notifications.
View Source  const (  // ExistingObjectReplicationStatusEnabled is a ExistingObjectReplicationStatus enum value  ExistingObjectReplicationStatusEnabled = "Enabled"  // ExistingObjectReplicationStatusDisabled is a ExistingObjectReplicationStatus enum value  ExistingObjectReplicationStatusDisabled = "Disabled"
)
View Source  const (  // ExpirationStatusEnabled is a ExpirationStatus enum value  ExpirationStatusEnabled = "Enabled"  // ExpirationStatusDisabled is a ExpirationStatus enum value  ExpirationStatusDisabled = "Disabled"
)
View Source  const (  // FileHeaderInfoUse is a FileHeaderInfo enum value  FileHeaderInfoUse = "USE"  // FileHeaderInfoIgnore is a FileHeaderInfo enum value  FileHeaderInfoIgnore = "IGNORE"  // FileHeaderInfoNone is a FileHeaderInfo enum value  FileHeaderInfoNone = "NONE"
)
View Source  const (  // FilterRuleNamePrefix is a FilterRuleName enum value  FilterRuleNamePrefix = "prefix"  // FilterRuleNameSuffix is a FilterRuleName enum value  FilterRuleNameSuffix = "suffix"
)
View Source  const (  // IntelligentTieringAccessTierArchiveAccess is a IntelligentTieringAccessTier enum value  IntelligentTieringAccessTierArchiveAccess = "ARCHIVE_ACCESS"  // IntelligentTieringAccessTierDeepArchiveAccess is a IntelligentTieringAccessTier enum value  IntelligentTieringAccessTierDeepArchiveAccess = "DEEP_ARCHIVE_ACCESS"
)
View Source  const (  // IntelligentTieringStatusEnabled is a IntelligentTieringStatus enum value  IntelligentTieringStatusEnabled = "Enabled"  // IntelligentTieringStatusDisabled is a IntelligentTieringStatus enum value  IntelligentTieringStatusDisabled = "Disabled"
)
View Source  const (  // InventoryFormatCsv is a InventoryFormat enum value  InventoryFormatCsv = "CSV"  // InventoryFormatOrc is a InventoryFormat enum value  InventoryFormatOrc = "ORC"  // InventoryFormatParquet is a InventoryFormat enum value  InventoryFormatParquet = "Parquet"
)
View Source  const (  // InventoryFrequencyDaily is a InventoryFrequency enum value  InventoryFrequencyDaily = "Daily"  // InventoryFrequencyWeekly is a InventoryFrequency enum value  InventoryFrequencyWeekly = "Weekly"
)
View Source  const (  // InventoryIncludedObjectVersionsAll is a InventoryIncludedObjectVersions enum value  InventoryIncludedObjectVersionsAll = "All"  // InventoryIncludedObjectVersionsCurrent is a InventoryIncludedObjectVersions enum value  InventoryIncludedObjectVersionsCurrent = "Current"
)
View Source  const (  // InventoryOptionalFieldSize is a InventoryOptionalField enum value  InventoryOptionalFieldSize = "Size"  // InventoryOptionalFieldLastModifiedDate is a InventoryOptionalField enum value  InventoryOptionalFieldLastModifiedDate = "LastModifiedDate"  // InventoryOptionalFieldStorageClass is a InventoryOptionalField enum value  InventoryOptionalFieldStorageClass = "StorageClass"  // InventoryOptionalFieldEtag is a InventoryOptionalField enum value  InventoryOptionalFieldEtag = "ETag"  // InventoryOptionalFieldIsMultipartUploaded is a InventoryOptionalField enum value  InventoryOptionalFieldIsMultipartUploaded = "IsMultipartUploaded"  // InventoryOptionalFieldReplicationStatus is a InventoryOptionalField enum value  InventoryOptionalFieldReplicationStatus = "ReplicationStatus"  // InventoryOptionalFieldEncryptionStatus is a InventoryOptionalField enum value  InventoryOptionalFieldEncryptionStatus = "EncryptionStatus"  // InventoryOptionalFieldObjectLockRetainUntilDate is a InventoryOptionalField enum value  InventoryOptionalFieldObjectLockRetainUntilDate = "ObjectLockRetainUntilDate"  // InventoryOptionalFieldObjectLockMode is a InventoryOptionalField enum value  InventoryOptionalFieldObjectLockMode = "ObjectLockMode"  // InventoryOptionalFieldObjectLockLegalHoldStatus is a InventoryOptionalField enum value  InventoryOptionalFieldObjectLockLegalHoldStatus = "ObjectLockLegalHoldStatus"  // InventoryOptionalFieldIntelligentTieringAccessTier is a InventoryOptionalField enum value  InventoryOptionalFieldIntelligentTieringAccessTier = "IntelligentTieringAccessTier"  // InventoryOptionalFieldBucketKeyStatus is a InventoryOptionalField enum value  InventoryOptionalFieldBucketKeyStatus = "BucketKeyStatus"  // InventoryOptionalFieldChecksumAlgorithm is a InventoryOptionalField enum value  InventoryOptionalFieldChecksumAlgorithm = "ChecksumAlgorithm"  // InventoryOptionalFieldObjectAccessControlList is a InventoryOptionalField enum value  InventoryOptionalFieldObjectAccessControlList = "ObjectAccessControlList"  // InventoryOptionalFieldObjectOwner is a InventoryOptionalField enum value  InventoryOptionalFieldObjectOwner = "ObjectOwner"
)
View Source  const (  // JSONTypeDocument is a JSONType enum value  JSONTypeDocument = "DOCUMENT"  // JSONTypeLines is a JSONType enum value  JSONTypeLines = "LINES"
)
View Source  const (  // MFADeleteEnabled is a MFADelete enum value  MFADeleteEnabled = "Enabled"  // MFADeleteDisabled is a MFADelete enum value  MFADeleteDisabled = "Disabled"
)
View Source  const (  // MFADeleteStatusEnabled is a MFADeleteStatus enum value  MFADeleteStatusEnabled = "Enabled"  // MFADeleteStatusDisabled is a MFADeleteStatus enum value  MFADeleteStatusDisabled = "Disabled"
)
View Source  const (  // MetadataDirectiveCopy is a MetadataDirective enum value  MetadataDirectiveCopy = "COPY"  // MetadataDirectiveReplace is a MetadataDirective enum value  MetadataDirectiveReplace = "REPLACE"
)
View Source  const (  // MetricsStatusEnabled is a MetricsStatus enum value  MetricsStatusEnabled = "Enabled"  // MetricsStatusDisabled is a MetricsStatus enum value  MetricsStatusDisabled = "Disabled"
)
View Source  const (  // ObjectAttributesEtag is a ObjectAttributes enum value  ObjectAttributesEtag = "ETag"  // ObjectAttributesChecksum is a ObjectAttributes enum value  ObjectAttributesChecksum = "Checksum"  // ObjectAttributesObjectParts is a ObjectAttributes enum value  ObjectAttributesObjectParts = "ObjectParts"  // ObjectAttributesStorageClass is a ObjectAttributes enum value  ObjectAttributesStorageClass = "StorageClass"  // ObjectAttributesObjectSize is a ObjectAttributes enum value  ObjectAttributesObjectSize = "ObjectSize"
)
View Source  const (  // ObjectCannedACLPrivate is a ObjectCannedACL enum value  ObjectCannedACLPrivate = "private"  // ObjectCannedACLPublicRead is a ObjectCannedACL enum value  ObjectCannedACLPublicRead = "public-read"  // ObjectCannedACLPublicReadWrite is a ObjectCannedACL enum value  ObjectCannedACLPublicReadWrite = "public-read-write"  // ObjectCannedACLAuthenticatedRead is a ObjectCannedACL enum value  ObjectCannedACLAuthenticatedRead = "authenticated-read"  // ObjectCannedACLAwsExecRead is a ObjectCannedACL enum value  ObjectCannedACLAwsExecRead = "aws-exec-read"  // ObjectCannedACLBucketOwnerRead is a ObjectCannedACL enum value  ObjectCannedACLBucketOwnerRead = "bucket-owner-read"  // ObjectCannedACLBucketOwnerFullControl is a ObjectCannedACL enum value  ObjectCannedACLBucketOwnerFullControl = "bucket-owner-full-control"
)
View Source  const (  // ObjectLockLegalHoldStatusOn is a ObjectLockLegalHoldStatus enum value  ObjectLockLegalHoldStatusOn = "ON"  // ObjectLockLegalHoldStatusOff is a ObjectLockLegalHoldStatus enum value  ObjectLockLegalHoldStatusOff = "OFF"
)
View Source  const (  // ObjectLockModeGovernance is a ObjectLockMode enum value  ObjectLockModeGovernance = "GOVERNANCE"  // ObjectLockModeCompliance is a ObjectLockMode enum value  ObjectLockModeCompliance = "COMPLIANCE"
)
View Source  const (  // ObjectLockRetentionModeGovernance is a ObjectLockRetentionMode enum value  ObjectLockRetentionModeGovernance = "GOVERNANCE"  // ObjectLockRetentionModeCompliance is a ObjectLockRetentionMode enum value  ObjectLockRetentionModeCompliance = "COMPLIANCE"
)
View Source  const (  // ObjectOwnershipBucketOwnerPreferred is a ObjectOwnership enum value  ObjectOwnershipBucketOwnerPreferred = "BucketOwnerPreferred"  // ObjectOwnershipObjectWriter is a ObjectOwnership enum value  ObjectOwnershipObjectWriter = "ObjectWriter"  // ObjectOwnershipBucketOwnerEnforced is a ObjectOwnership enum value  ObjectOwnershipBucketOwnerEnforced = "BucketOwnerEnforced"
)
The container element for object ownership for a bucket's ownership controls.
BucketOwnerPreferred - Objects uploaded to the bucket change ownership to
the bucket owner if the objects are uploaded with the bucket-owner-full-control
canned ACL.
ObjectWriter - The uploading account will own the object if the object is
uploaded with the bucket-owner-full-control canned ACL.
BucketOwnerEnforced - Access control lists (ACLs) are disabled and no longer
affect permissions. The bucket owner automatically owns and has full control
over every object in the bucket. The bucket only accepts PUT requests that
don't specify an ACL or bucket owner full control ACLs, such as the bucket-owner-full-control
canned ACL or an equivalent form of this ACL expressed in the XML format.
View Source  const (  // ObjectStorageClassStandard is a ObjectStorageClass enum value  ObjectStorageClassStandard = "STANDARD"  // ObjectStorageClassReducedRedundancy is a ObjectStorageClass enum value  ObjectStorageClassReducedRedundancy = "REDUCED_REDUNDANCY"  // ObjectStorageClassGlacier is a ObjectStorageClass enum value  ObjectStorageClassGlacier = "GLACIER"  // ObjectStorageClassStandardIa is a ObjectStorageClass enum value  ObjectStorageClassStandardIa = "STANDARD_IA"  // ObjectStorageClassOnezoneIa is a ObjectStorageClass enum value  ObjectStorageClassOnezoneIa = "ONEZONE_IA"  // ObjectStorageClassIntelligentTiering is a ObjectStorageClass enum value  ObjectStorageClassIntelligentTiering = "INTELLIGENT_TIERING"  // ObjectStorageClassDeepArchive is a ObjectStorageClass enum value  ObjectStorageClassDeepArchive = "DEEP_ARCHIVE"  // ObjectStorageClassOutposts is a ObjectStorageClass enum value  ObjectStorageClassOutposts = "OUTPOSTS"  // ObjectStorageClassGlacierIr is a ObjectStorageClass enum value  ObjectStorageClassGlacierIr = "GLACIER_IR"  // ObjectStorageClassSnow is a ObjectStorageClass enum value  ObjectStorageClassSnow = "SNOW"
)
View Source  const (  // PayerRequester is a Payer enum value  PayerRequester = "Requester"  // PayerBucketOwner is a Payer enum value  PayerBucketOwner = "BucketOwner"
)
View Source  const (  // PermissionFullControl is a Permission enum value  PermissionFullControl = "FULL_CONTROL"  // PermissionWrite is a Permission enum value  PermissionWrite = "WRITE"  // PermissionWriteAcp is a Permission enum value  PermissionWriteAcp = "WRITE_ACP"  // PermissionRead is a Permission enum value  PermissionRead = "READ"  // PermissionReadAcp is a Permission enum value  PermissionReadAcp = "READ_ACP"
)
View Source  const (  // ProtocolHttp is a Protocol enum value  ProtocolHttp = "http"  // ProtocolHttps is a Protocol enum value  ProtocolHttps = "https"
)
View Source  const (  // QuoteFieldsAlways is a QuoteFields enum value  QuoteFieldsAlways = "ALWAYS"  // QuoteFieldsAsneeded is a QuoteFields enum value  QuoteFieldsAsneeded = "ASNEEDED"
)
View Source  const (  // ReplicaModificationsStatusEnabled is a ReplicaModificationsStatus enum value  ReplicaModificationsStatusEnabled = "Enabled"  // ReplicaModificationsStatusDisabled is a ReplicaModificationsStatus enum value  ReplicaModificationsStatusDisabled = "Disabled"
)
View Source  const (  // ReplicationRuleStatusEnabled is a ReplicationRuleStatus enum value  ReplicationRuleStatusEnabled = "Enabled"  // ReplicationRuleStatusDisabled is a ReplicationRuleStatus enum value  ReplicationRuleStatusDisabled = "Disabled"
)
View Source  const (  // ReplicationStatusComplete is a ReplicationStatus enum value  ReplicationStatusComplete = "COMPLETE"  // ReplicationStatusPending is a ReplicationStatus enum value  ReplicationStatusPending = "PENDING"  // ReplicationStatusFailed is a ReplicationStatus enum value  ReplicationStatusFailed = "FAILED"  // ReplicationStatusReplica is a ReplicationStatus enum value  ReplicationStatusReplica = "REPLICA"  // ReplicationStatusCompleted is a ReplicationStatus enum value  ReplicationStatusCompleted = "COMPLETED"
)
View Source  const (  // ReplicationTimeStatusEnabled is a ReplicationTimeStatus enum value  ReplicationTimeStatusEnabled = "Enabled"  // ReplicationTimeStatusDisabled is a ReplicationTimeStatus enum value  ReplicationTimeStatusDisabled = "Disabled"
)
View Source  const (  // ServerSideEncryptionAes256 is a ServerSideEncryption enum value  ServerSideEncryptionAes256 = "AES256"  // ServerSideEncryptionAwsKms is a ServerSideEncryption enum value  ServerSideEncryptionAwsKms = "aws:kms"  // ServerSideEncryptionAwsKmsDsse is a ServerSideEncryption enum value  ServerSideEncryptionAwsKmsDsse = "aws:kms:dsse"
)
View Source  const (  // SseKmsEncryptedObjectsStatusEnabled is a SseKmsEncryptedObjectsStatus enum value  SseKmsEncryptedObjectsStatusEnabled = "Enabled"  // SseKmsEncryptedObjectsStatusDisabled is a SseKmsEncryptedObjectsStatus enum value  SseKmsEncryptedObjectsStatusDisabled = "Disabled"
)
View Source  const (  // StorageClassStandard is a StorageClass enum value  StorageClassStandard = "STANDARD"  // StorageClassReducedRedundancy is a StorageClass enum value  StorageClassReducedRedundancy = "REDUCED_REDUNDANCY"  // StorageClassStandardIa is a StorageClass enum value  StorageClassStandardIa = "STANDARD_IA"  // StorageClassOnezoneIa is a StorageClass enum value  StorageClassOnezoneIa = "ONEZONE_IA"  // StorageClassIntelligentTiering is a StorageClass enum value  StorageClassIntelligentTiering = "INTELLIGENT_TIERING"  // StorageClassGlacier is a StorageClass enum value  StorageClassGlacier = "GLACIER"  // StorageClassDeepArchive is a StorageClass enum value  StorageClassDeepArchive = "DEEP_ARCHIVE"  // StorageClassOutposts is a StorageClass enum value  StorageClassOutposts = "OUTPOSTS"  // StorageClassGlacierIr is a StorageClass enum value  StorageClassGlacierIr = "GLACIER_IR"  // StorageClassSnow is a StorageClass enum value  StorageClassSnow = "SNOW"
)
View Source  const (  // TaggingDirectiveCopy is a TaggingDirective enum value  TaggingDirectiveCopy = "COPY"  // TaggingDirectiveReplace is a TaggingDirective enum value  TaggingDirectiveReplace = "REPLACE"
)
View Source  const (  // TierStandard is a Tier enum value  TierStandard = "Standard"  // TierBulk is a Tier enum value  TierBulk = "Bulk"  // TierExpedited is a Tier enum value  TierExpedited = "Expedited"
)
View Source  const (  // TransitionStorageClassGlacier is a TransitionStorageClass enum value  TransitionStorageClassGlacier = "GLACIER"  // TransitionStorageClassStandardIa is a TransitionStorageClass enum value  TransitionStorageClassStandardIa = "STANDARD_IA"  // TransitionStorageClassOnezoneIa is a TransitionStorageClass enum value  TransitionStorageClassOnezoneIa = "ONEZONE_IA"  // TransitionStorageClassIntelligentTiering is a TransitionStorageClass enum value  TransitionStorageClassIntelligentTiering = "INTELLIGENT_TIERING"  // TransitionStorageClassDeepArchive is a TransitionStorageClass enum value  TransitionStorageClassDeepArchive = "DEEP_ARCHIVE"  // TransitionStorageClassGlacierIr is a TransitionStorageClass enum value  TransitionStorageClassGlacierIr = "GLACIER_IR"
)
View Source  const (  // TypeCanonicalUser is a Type enum value  TypeCanonicalUser = "CanonicalUser"  // TypeAmazonCustomerByEmail is a Type enum value  TypeAmazonCustomerByEmail = "AmazonCustomerByEmail"  // TypeGroup is a Type enum value  TypeGroup = "Group"
)
View Source  const (  // ErrCodeBucketAlreadyExists for service response error code   // "BucketAlreadyExists".  //  // The requested bucket name is not available. The bucket namespace is shared  // by all users of the system. Select a different name and try again. ErrCodeBucketAlreadyExists = "BucketAlreadyExists"  // ErrCodeBucketAlreadyOwnedByYou for service response error code   // "BucketAlreadyOwnedByYou".  //  // The bucket you tried to create already exists, and you own it. Amazon S3  // returns this error in all Amazon Web Services Regions except in the North  // Virginia Region. For legacy compatibility, if you re-create an existing bucket  // that you already own in the North Virginia Region, Amazon S3 returns 200  // OK and resets the bucket access control lists (ACLs). ErrCodeBucketAlreadyOwnedByYou = "BucketAlreadyOwnedByYou"  // ErrCodeInvalidObjectState for service response error code   // "InvalidObjectState".  //  // Object is archived and inaccessible until restored. ErrCodeInvalidObjectState = "InvalidObjectState"  // ErrCodeNoSuchBucket for service response error code   // "NoSuchBucket".  //  // The specified bucket does not exist. ErrCodeNoSuchBucket = "NoSuchBucket"  // ErrCodeNoSuchKey for service response error code   // "NoSuchKey".  //  // The specified key does not exist. ErrCodeNoSuchKey = "NoSuchKey"  // ErrCodeNoSuchUpload for service response error code   // "NoSuchUpload".  //  // The specified multipart upload does not exist. ErrCodeNoSuchUpload = "NoSuchUpload"  // ErrCodeObjectAlreadyInActiveTierError for service response error code   // "ObjectAlreadyInActiveTierError".  //  // This action is not allowed against this storage tier. ErrCodeObjectAlreadyInActiveTierError = "ObjectAlreadyInActiveTierError"  // ErrCodeObjectNotInActiveTierError for service response error code   // "ObjectNotInActiveTierError".  //  // The source object of the COPY action is not in the active tier and is only  // stored in Amazon S3 Glacier. ErrCodeObjectNotInActiveTierError = "ObjectNotInActiveTierError"
)
View Source  const ( ServiceName = "s3" // Name of service.  EndpointsID = ServiceName  // ID to lookup a service endpoint with.  ServiceID   = "S3" // ServiceID is a unique identifier of a specific service.  )
Service information constants
View Source  const (  // AnalyticsS3ExportFileFormatCsv is a AnalyticsS3ExportFileFormat enum value  AnalyticsS3ExportFileFormatCsv = "CSV"
)
View Source  const (  // ChecksumModeEnabled is a ChecksumMode enum value  ChecksumModeEnabled = "ENABLED"
)
View Source  const (  // EncodingTypeUrl is a EncodingType enum value  EncodingTypeUrl = "url"
)
Requests Amazon S3 to encode the object keys in the response and specifies
the encoding method to use. An object key can contain any Unicode character;
however, the XML 1.0 parser cannot parse some characters, such as characters
with an ASCII value from 0 to 10. For characters that are not supported in
XML 1.0, you can add this parameter to request that Amazon S3 encode the
keys in the response.
View Source  const (  // ExpressionTypeSql is a ExpressionType enum value  ExpressionTypeSql = "SQL"
)
View Source  const (  // ObjectLockEnabledEnabled is a ObjectLockEnabled enum value  ObjectLockEnabledEnabled = "Enabled"
)
View Source  const (  // ObjectVersionStorageClassStandard is a ObjectVersionStorageClass enum value  ObjectVersionStorageClassStandard = "STANDARD"
)
View Source  const (  // OptionalObjectAttributesRestoreStatus is a OptionalObjectAttributes enum value  OptionalObjectAttributesRestoreStatus = "RestoreStatus"
)
View Source  const (  // OwnerOverrideDestination is a OwnerOverride enum value  OwnerOverrideDestination = "Destination"
)
View Source  const (  // RequestChargedRequester is a RequestCharged enum value  RequestChargedRequester = "requester"
)
If present, indicates that the requester was successfully charged for the
request.
View Source  const (  // RequestPayerRequester is a RequestPayer enum value  RequestPayerRequester = "requester"
)
Confirms that the requester knows that they will be charged for the request.
Bucket owners need not specify this parameter in their requests. If either
the source or destination Amazon S3 bucket has Requester Pays enabled, the
requester will pay for corresponding charges to copy the object. For information
about downloading objects from Requester Pays buckets, see Downloading Objects
in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )
in the Amazon S3 User Guide.
View Source  const (  // RestoreRequestTypeSelect is a RestoreRequestType enum value  RestoreRequestTypeSelect = "SELECT"
)
View Source  const (  // StorageClassAnalysisSchemaVersionV1 is a StorageClassAnalysisSchemaVersion enum value  StorageClassAnalysisSchemaVersionV1 = "V_1"
)     Variables
View Source  var NormalizeBucketLocationHandler = request . NamedHandler { Name: "awssdk.s3.NormalizeBucketLocation",
Fn: func(req * request . Request ) {
if req.Error != nil {
return
}

out := req.Data.(* GetBucketLocationOutput )
loc := NormalizeBucketLocation ( aws . StringValue (out.LocationConstraint))
out.LocationConstraint = aws . String (loc)
},
}
NormalizeBucketLocationHandler is a request handler which will update the
GetBucketLocation's result LocationConstraint value to always be a region ID.
Replaces empty string with "us-east-1", and "EU" with "eu-west-1".
See http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETlocation.html for more information on the values that can be returned. req, result := svc.GetBucketLocationRequest(&s3.GetBucketLocationInput{
Bucket: aws.String(bucket),
})
req.Handlers.Unmarshal.PushBackNamed(NormalizeBucketLocationHandler)
err := req.Send()   Functions

func AnalyticsS3ExportFileFormat_Values    added in  v1.34.3

func AnalyticsS3ExportFileFormat_Values() [] string
AnalyticsS3ExportFileFormat_Values returns all elements of the AnalyticsS3ExportFileFormat enum

func ArchiveStatus_Values    added in  v1.35.24

func ArchiveStatus_Values() [] string
ArchiveStatus_Values returns all elements of the ArchiveStatus enum

func BucketAccelerateStatus_Values    added in  v1.34.3

func BucketAccelerateStatus_Values() [] string
BucketAccelerateStatus_Values returns all elements of the BucketAccelerateStatus enum

func BucketCannedACL_Values    added in  v1.34.3

func BucketCannedACL_Values() [] string
BucketCannedACL_Values returns all elements of the BucketCannedACL enum

func BucketLocationConstraint_Values    added in  v1.34.3

func BucketLocationConstraint_Values() [] string
BucketLocationConstraint_Values returns all elements of the BucketLocationConstraint enum

func BucketLogsPermission_Values    added in  v1.34.3

func BucketLogsPermission_Values() [] string
BucketLogsPermission_Values returns all elements of the BucketLogsPermission enum

func BucketVersioningStatus_Values    added in  v1.34.3

func BucketVersioningStatus_Values() [] string
BucketVersioningStatus_Values returns all elements of the BucketVersioningStatus enum

func ChecksumAlgorithm_Values    added in  v1.43.6

func ChecksumAlgorithm_Values() [] string
ChecksumAlgorithm_Values returns all elements of the ChecksumAlgorithm enum

func ChecksumMode_Values    added in  v1.43.6

func ChecksumMode_Values() [] string
ChecksumMode_Values returns all elements of the ChecksumMode enum

func CompressionType_Values    added in  v1.34.3

func CompressionType_Values() [] string
CompressionType_Values returns all elements of the CompressionType enum

func DeleteMarkerReplicationStatus_Values    added in  v1.34.3

func DeleteMarkerReplicationStatus_Values() [] string
DeleteMarkerReplicationStatus_Values returns all elements of the DeleteMarkerReplicationStatus enum

func EncodingType_Values    added in  v1.34.3

func EncodingType_Values() [] string
EncodingType_Values returns all elements of the EncodingType enum

func Event_Values    added in  v1.34.3

func Event_Values() [] string
Event_Values returns all elements of the Event enum

func ExistingObjectReplicationStatus_Values    added in  v1.34.3

func ExistingObjectReplicationStatus_Values() [] string
ExistingObjectReplicationStatus_Values returns all elements of the ExistingObjectReplicationStatus enum

func ExpirationStatus_Values    added in  v1.34.3

func ExpirationStatus_Values() [] string
ExpirationStatus_Values returns all elements of the ExpirationStatus enum

func ExpressionType_Values    added in  v1.34.3

func ExpressionType_Values() [] string
ExpressionType_Values returns all elements of the ExpressionType enum

func FileHeaderInfo_Values    added in  v1.34.3

func FileHeaderInfo_Values() [] string
FileHeaderInfo_Values returns all elements of the FileHeaderInfo enum

func FilterRuleName_Values    added in  v1.34.3

func FilterRuleName_Values() [] string
FilterRuleName_Values returns all elements of the FilterRuleName enum

func IntelligentTieringAccessTier_Values    added in  v1.35.24

func IntelligentTieringAccessTier_Values() [] string
IntelligentTieringAccessTier_Values returns all elements of the IntelligentTieringAccessTier enum

func IntelligentTieringStatus_Values    added in  v1.35.24

func IntelligentTieringStatus_Values() [] string
IntelligentTieringStatus_Values returns all elements of the IntelligentTieringStatus enum

func InventoryFormat_Values    added in  v1.34.3

func InventoryFormat_Values() [] string
InventoryFormat_Values returns all elements of the InventoryFormat enum

func InventoryFrequency_Values    added in  v1.34.3

func InventoryFrequency_Values() [] string
InventoryFrequency_Values returns all elements of the InventoryFrequency enum

func InventoryIncludedObjectVersions_Values    added in  v1.34.3

func InventoryIncludedObjectVersions_Values() [] string
InventoryIncludedObjectVersions_Values returns all elements of the InventoryIncludedObjectVersions enum

func InventoryOptionalField_Values    added in  v1.34.3

func InventoryOptionalField_Values() [] string
InventoryOptionalField_Values returns all elements of the InventoryOptionalField enum

func JSONType_Values    added in  v1.34.3

func JSONType_Values() [] string
JSONType_Values returns all elements of the JSONType enum

func MFADeleteStatus_Values    added in  v1.34.3

func MFADeleteStatus_Values() [] string
MFADeleteStatus_Values returns all elements of the MFADeleteStatus enum

func MFADelete_Values    added in  v1.34.3

func MFADelete_Values() [] string
MFADelete_Values returns all elements of the MFADelete enum

func MetadataDirective_Values    added in  v1.34.3

func MetadataDirective_Values() [] string
MetadataDirective_Values returns all elements of the MetadataDirective enum

func MetricsStatus_Values    added in  v1.34.3

func MetricsStatus_Values() [] string
MetricsStatus_Values returns all elements of the MetricsStatus enum

func NormalizeBucketLocation    added in  v1.8.15

func NormalizeBucketLocation(loc string ) string
NormalizeBucketLocation is a utility function which will update the
passed in value to always be a region ID. Generally this would be used
with GetBucketLocation API operation.
Replaces empty string with "us-east-1", and "EU" with "eu-west-1".
See http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETlocation.html for more information on the values that can be returned.

func ObjectAttributes_Values    added in  v1.43.6

func ObjectAttributes_Values() [] string
ObjectAttributes_Values returns all elements of the ObjectAttributes enum

func ObjectCannedACL_Values    added in  v1.34.3

func ObjectCannedACL_Values() [] string
ObjectCannedACL_Values returns all elements of the ObjectCannedACL enum

func ObjectLockEnabled_Values    added in  v1.34.3

func ObjectLockEnabled_Values() [] string
ObjectLockEnabled_Values returns all elements of the ObjectLockEnabled enum

func ObjectLockLegalHoldStatus_Values    added in  v1.34.3

func ObjectLockLegalHoldStatus_Values() [] string
ObjectLockLegalHoldStatus_Values returns all elements of the ObjectLockLegalHoldStatus enum

func ObjectLockMode_Values    added in  v1.34.3

func ObjectLockMode_Values() [] string
ObjectLockMode_Values returns all elements of the ObjectLockMode enum

func ObjectLockRetentionMode_Values    added in  v1.34.3

func ObjectLockRetentionMode_Values() [] string
ObjectLockRetentionMode_Values returns all elements of the ObjectLockRetentionMode enum

func ObjectOwnership_Values    added in  v1.35.2

func ObjectOwnership_Values() [] string
ObjectOwnership_Values returns all elements of the ObjectOwnership enum

func ObjectStorageClass_Values    added in  v1.34.3

func ObjectStorageClass_Values() [] string
ObjectStorageClass_Values returns all elements of the ObjectStorageClass enum

func ObjectVersionStorageClass_Values    added in  v1.34.3

func ObjectVersionStorageClass_Values() [] string
ObjectVersionStorageClass_Values returns all elements of the ObjectVersionStorageClass enum

func OptionalObjectAttributes_Values    added in  v1.44.292

func OptionalObjectAttributes_Values() [] string
OptionalObjectAttributes_Values returns all elements of the OptionalObjectAttributes enum

func OwnerOverride_Values    added in  v1.34.3

func OwnerOverride_Values() [] string
OwnerOverride_Values returns all elements of the OwnerOverride enum

func Payer_Values    added in  v1.34.3

func Payer_Values() [] string
Payer_Values returns all elements of the Payer enum

func Permission_Values    added in  v1.34.3

func Permission_Values() [] string
Permission_Values returns all elements of the Permission enum

func Protocol_Values    added in  v1.34.3

func Protocol_Values() [] string
Protocol_Values returns all elements of the Protocol enum

func QuoteFields_Values    added in  v1.34.3

func QuoteFields_Values() [] string
QuoteFields_Values returns all elements of the QuoteFields enum

func ReplicaModificationsStatus_Values    added in  v1.35.37

func ReplicaModificationsStatus_Values() [] string
ReplicaModificationsStatus_Values returns all elements of the ReplicaModificationsStatus enum

func ReplicationRuleStatus_Values    added in  v1.34.3

func ReplicationRuleStatus_Values() [] string
ReplicationRuleStatus_Values returns all elements of the ReplicationRuleStatus enum

func ReplicationStatus_Values    added in  v1.34.3

func ReplicationStatus_Values() [] string
ReplicationStatus_Values returns all elements of the ReplicationStatus enum

func ReplicationTimeStatus_Values    added in  v1.34.3

func ReplicationTimeStatus_Values() [] string
ReplicationTimeStatus_Values returns all elements of the ReplicationTimeStatus enum

func RequestCharged_Values    added in  v1.34.3

func RequestCharged_Values() [] string
RequestCharged_Values returns all elements of the RequestCharged enum

func RequestPayer_Values    added in  v1.34.3

func RequestPayer_Values() [] string
RequestPayer_Values returns all elements of the RequestPayer enum

func RestoreRequestType_Values    added in  v1.34.3

func RestoreRequestType_Values() [] string
RestoreRequestType_Values returns all elements of the RestoreRequestType enum

func ServerSideEncryption_Values    added in  v1.34.3

func ServerSideEncryption_Values() [] string
ServerSideEncryption_Values returns all elements of the ServerSideEncryption enum

func SseKmsEncryptedObjectsStatus_Values    added in  v1.34.3

func SseKmsEncryptedObjectsStatus_Values() [] string
SseKmsEncryptedObjectsStatus_Values returns all elements of the SseKmsEncryptedObjectsStatus enum

func StorageClassAnalysisSchemaVersion_Values    added in  v1.34.3

func StorageClassAnalysisSchemaVersion_Values() [] string
StorageClassAnalysisSchemaVersion_Values returns all elements of the StorageClassAnalysisSchemaVersion enum

func StorageClass_Values    added in  v1.34.3

func StorageClass_Values() [] string
StorageClass_Values returns all elements of the StorageClass enum

func TaggingDirective_Values    added in  v1.34.3

func TaggingDirective_Values() [] string
TaggingDirective_Values returns all elements of the TaggingDirective enum

func Tier_Values    added in  v1.34.3

func Tier_Values() [] string
Tier_Values returns all elements of the Tier enum

func TransitionStorageClass_Values    added in  v1.34.3

func TransitionStorageClass_Values() [] string
TransitionStorageClass_Values returns all elements of the TransitionStorageClass enum

func Type_Values    added in  v1.34.3

func Type_Values() [] string
Type_Values returns all elements of the Type enum

func WithNormalizeBucketLocation    added in  v1.8.15

func WithNormalizeBucketLocation(r * request . Request )
WithNormalizeBucketLocation is a request option which will update the
GetBucketLocation's result LocationConstraint value to always be a region ID.
Replaces empty string with "us-east-1", and "EU" with "eu-west-1".
See http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETlocation.html for more information on the values that can be returned. result, err := svc.GetBucketLocationWithContext(ctx,
&s3.GetBucketLocationInput{
Bucket: aws.String(bucket),
},
s3.WithNormalizeBucketLocation,
)   Types
type AbortIncompleteMultipartUpload    added in  v1.1.12
type AbortIncompleteMultipartUpload struct {  // Specifies the number of days after which Amazon S3 aborts an incomplete multipart   // upload. DaysAfterInitiation * int64 `type:"integer"` // contains filtered or unexported fields }
Specifies the days since the initiation of an incomplete multipart upload
that Amazon S3 will wait before permanently removing all parts of the upload.
For more information, see Aborting Incomplete Multipart Uploads Using a Bucket
Lifecycle Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config )
in the Amazon S3 User Guide.

func (AbortIncompleteMultipartUpload) GoString    added in  v1.1.12

func (s AbortIncompleteMultipartUpload ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AbortIncompleteMultipartUpload) SetDaysAfterInitiation    added in  v1.5.0

func (s * AbortIncompleteMultipartUpload ) SetDaysAfterInitiation(v int64 ) * AbortIncompleteMultipartUpload
SetDaysAfterInitiation sets the DaysAfterInitiation field's value.

func (AbortIncompleteMultipartUpload) String    added in  v1.1.12

func (s AbortIncompleteMultipartUpload ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type AbortMultipartUploadInput
type AbortMultipartUploadInput struct {  // The bucket name to which the upload was taking place.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Key of the object for which the multipart upload was initiated.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Upload ID that identifies the multipart upload.   //  // UploadId is a required field UploadId * string `location:"querystring" locationName:"uploadId" type:"string" required:"true"` // contains filtered or unexported fields }

func (AbortMultipartUploadInput) GoString    added in  v0.6.5

func (s AbortMultipartUploadInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AbortMultipartUploadInput) SetBucket    added in  v1.5.0

func (s * AbortMultipartUploadInput ) SetBucket(v string ) * AbortMultipartUploadInput
SetBucket sets the Bucket field's value.

func (*AbortMultipartUploadInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * AbortMultipartUploadInput ) SetExpectedBucketOwner(v string ) * AbortMultipartUploadInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*AbortMultipartUploadInput) SetKey    added in  v1.5.0

func (s * AbortMultipartUploadInput ) SetKey(v string ) * AbortMultipartUploadInput
SetKey sets the Key field's value.

func (*AbortMultipartUploadInput) SetRequestPayer    added in  v1.5.0

func (s * AbortMultipartUploadInput ) SetRequestPayer(v string ) * AbortMultipartUploadInput
SetRequestPayer sets the RequestPayer field's value.

func (*AbortMultipartUploadInput) SetUploadId    added in  v1.5.0

func (s * AbortMultipartUploadInput ) SetUploadId(v string ) * AbortMultipartUploadInput
SetUploadId sets the UploadId field's value.

func (AbortMultipartUploadInput) String    added in  v0.6.5

func (s AbortMultipartUploadInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AbortMultipartUploadInput) Validate    added in  v1.1.21

func (s * AbortMultipartUploadInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type AbortMultipartUploadOutput
type AbortMultipartUploadOutput struct {  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"` // contains filtered or unexported fields }

func (AbortMultipartUploadOutput) GoString    added in  v0.6.5

func (s AbortMultipartUploadOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AbortMultipartUploadOutput) SetRequestCharged    added in  v1.5.0

func (s * AbortMultipartUploadOutput ) SetRequestCharged(v string ) * AbortMultipartUploadOutput
SetRequestCharged sets the RequestCharged field's value.

func (AbortMultipartUploadOutput) String    added in  v0.6.5

func (s AbortMultipartUploadOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type AccelerateConfiguration    added in  v1.1.19
type AccelerateConfiguration struct {  // Specifies the transfer acceleration status of the bucket.  Status * string `type:"string" enum:"BucketAccelerateStatus"` // contains filtered or unexported fields }
Configures the transfer acceleration state for an Amazon S3 bucket. For more
information, see Amazon S3 Transfer Acceleration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html )
in the Amazon S3 User Guide.

func (AccelerateConfiguration) GoString    added in  v1.1.19

func (s AccelerateConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AccelerateConfiguration) SetStatus    added in  v1.5.0

func (s * AccelerateConfiguration ) SetStatus(v string ) * AccelerateConfiguration
SetStatus sets the Status field's value.

func (AccelerateConfiguration) String    added in  v1.1.19

func (s AccelerateConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type AccessControlPolicy
type AccessControlPolicy struct {  // A list of grants.  Grants []* Grant `locationName:"AccessControlList" locationNameList:"Grant" type:"list"`  // Container for the bucket owner's display name and ID.  Owner * Owner `type:"structure"` // contains filtered or unexported fields }
Contains the elements that set the ACL permissions for an object per grantee.

func (AccessControlPolicy) GoString    added in  v0.6.5

func (s AccessControlPolicy ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AccessControlPolicy) SetGrants    added in  v1.5.0

func (s * AccessControlPolicy ) SetGrants(v []* Grant ) * AccessControlPolicy
SetGrants sets the Grants field's value.

func (*AccessControlPolicy) SetOwner    added in  v1.5.0

func (s * AccessControlPolicy ) SetOwner(v * Owner ) * AccessControlPolicy
SetOwner sets the Owner field's value.

func (AccessControlPolicy) String    added in  v0.6.5

func (s AccessControlPolicy ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AccessControlPolicy) Validate    added in  v1.1.21

func (s * AccessControlPolicy ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type AccessControlTranslation    added in  v1.12.24
type AccessControlTranslation struct {  // Specifies the replica ownership. For default and valid values, see PUT bucket   // replication ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html )  // in the Amazon S3 API Reference.  //  // Owner is a required field Owner * string `type:"string" required:"true" enum:"OwnerOverride"` // contains filtered or unexported fields }
A container for information about access control for replicas.

func (AccessControlTranslation) GoString    added in  v1.12.24

func (s AccessControlTranslation ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AccessControlTranslation) SetOwner    added in  v1.12.24

func (s * AccessControlTranslation ) SetOwner(v string ) * AccessControlTranslation
SetOwner sets the Owner field's value.

func (AccessControlTranslation) String    added in  v1.12.24

func (s AccessControlTranslation ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AccessControlTranslation) Validate    added in  v1.12.24

func (s * AccessControlTranslation ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type AnalyticsAndOperator    added in  v1.5.11
type AnalyticsAndOperator struct {  // The prefix to use when evaluating an AND predicate: The prefix that an object   // must have to be included in the metrics results. Prefix * string `type:"string"`  // The list of tags to use when evaluating an AND predicate.  Tags []* Tag `locationName:"Tag" locationNameList:"Tag" type:"list" flattened:"true"` // contains filtered or unexported fields }
A conjunction (logical AND) of predicates, which is used in evaluating a
metrics filter. The operator must have at least two predicates in any combination,
and an object must match all of the predicates for the filter to apply.

func (AnalyticsAndOperator) GoString    added in  v1.5.11

func (s AnalyticsAndOperator ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AnalyticsAndOperator) SetPrefix    added in  v1.5.11

func (s * AnalyticsAndOperator ) SetPrefix(v string ) * AnalyticsAndOperator
SetPrefix sets the Prefix field's value.

func (*AnalyticsAndOperator) SetTags    added in  v1.5.11

func (s * AnalyticsAndOperator ) SetTags(v []* Tag ) * AnalyticsAndOperator
SetTags sets the Tags field's value.

func (AnalyticsAndOperator) String    added in  v1.5.11

func (s AnalyticsAndOperator ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AnalyticsAndOperator) Validate    added in  v1.5.11

func (s * AnalyticsAndOperator ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type AnalyticsConfiguration    added in  v1.5.11
type AnalyticsConfiguration struct {  // The filter used to describe a set of objects for analyses. A filter must   // have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator).  // If no filter is provided, all objects will be considered in any analysis. Filter * AnalyticsFilter `type:"structure"`  // The ID that identifies the analytics configuration.   //  // Id is a required field Id * string `type:"string" required:"true"`  // Contains data related to access patterns to be collected and made available   // to analyze the tradeoffs between different storage classes.  //  // StorageClassAnalysis is a required field StorageClassAnalysis * StorageClassAnalysis `type:"structure" required:"true"` // contains filtered or unexported fields }
Specifies the configuration and any analyses for the analytics filter of
an Amazon S3 bucket.

func (AnalyticsConfiguration) GoString    added in  v1.5.11

func (s AnalyticsConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AnalyticsConfiguration) SetFilter    added in  v1.5.11

func (s * AnalyticsConfiguration ) SetFilter(v * AnalyticsFilter ) * AnalyticsConfiguration
SetFilter sets the Filter field's value.

func (*AnalyticsConfiguration) SetId    added in  v1.5.11

func (s * AnalyticsConfiguration ) SetId(v string ) * AnalyticsConfiguration
SetId sets the Id field's value.

func (*AnalyticsConfiguration) SetStorageClassAnalysis    added in  v1.5.11

func (s * AnalyticsConfiguration ) SetStorageClassAnalysis(v * StorageClassAnalysis ) * AnalyticsConfiguration
SetStorageClassAnalysis sets the StorageClassAnalysis field's value.

func (AnalyticsConfiguration) String    added in  v1.5.11

func (s AnalyticsConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AnalyticsConfiguration) Validate    added in  v1.5.11

func (s * AnalyticsConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type AnalyticsExportDestination    added in  v1.5.11
type AnalyticsExportDestination struct {  // A destination signifying output to an S3 bucket.   //  // S3BucketDestination is a required field S3BucketDestination * AnalyticsS3BucketDestination `type:"structure" required:"true"` // contains filtered or unexported fields }
Where to publish the analytics results.

func (AnalyticsExportDestination) GoString    added in  v1.5.11

func (s AnalyticsExportDestination ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AnalyticsExportDestination) SetS3BucketDestination    added in  v1.5.11

func (s * AnalyticsExportDestination ) SetS3BucketDestination(v * AnalyticsS3BucketDestination ) * AnalyticsExportDestination
SetS3BucketDestination sets the S3BucketDestination field's value.

func (AnalyticsExportDestination) String    added in  v1.5.11

func (s AnalyticsExportDestination ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AnalyticsExportDestination) Validate    added in  v1.5.11

func (s * AnalyticsExportDestination ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type AnalyticsFilter    added in  v1.5.11
type AnalyticsFilter struct {  // A conjunction (logical AND) of predicates, which is used in evaluating an   // analytics filter. The operator must have at least two predicates. And * AnalyticsAndOperator `type:"structure"`  // The prefix to use when evaluating an analytics filter.  Prefix * string `type:"string"`  // The tag to use when evaluating an analytics filter.  Tag * Tag `type:"structure"` // contains filtered or unexported fields }
The filter used to describe a set of objects for analyses. A filter must
have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator).
If no filter is provided, all objects will be considered in any analysis.

func (AnalyticsFilter) GoString    added in  v1.5.11

func (s AnalyticsFilter ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AnalyticsFilter) SetAnd    added in  v1.5.11

func (s * AnalyticsFilter ) SetAnd(v * AnalyticsAndOperator ) * AnalyticsFilter
SetAnd sets the And field's value.

func (*AnalyticsFilter) SetPrefix    added in  v1.5.11

func (s * AnalyticsFilter ) SetPrefix(v string ) * AnalyticsFilter
SetPrefix sets the Prefix field's value.

func (*AnalyticsFilter) SetTag    added in  v1.5.11

func (s * AnalyticsFilter ) SetTag(v * Tag ) * AnalyticsFilter
SetTag sets the Tag field's value.

func (AnalyticsFilter) String    added in  v1.5.11

func (s AnalyticsFilter ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AnalyticsFilter) Validate    added in  v1.5.11

func (s * AnalyticsFilter ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type AnalyticsS3BucketDestination    added in  v1.5.11
type AnalyticsS3BucketDestination struct {  // The Amazon Resource Name (ARN) of the bucket to which data is exported.   //  // Bucket is a required field Bucket * string `type:"string" required:"true"`  // The account ID that owns the destination S3 bucket. If no account ID is provided,   // the owner is not validated before exporting data.  //  // Although this value is optional, we strongly recommend that you set it to  // help prevent problems if the destination bucket ownership changes. BucketAccountId * string `type:"string"`  // Specifies the file format used when exporting data to Amazon S3.   //  // Format is a required field Format * string `type:"string" required:"true" enum:"AnalyticsS3ExportFileFormat"`  // The prefix to use when exporting data. The prefix is prepended to all results.  Prefix * string `type:"string"` // contains filtered or unexported fields }
Contains information about where to publish the analytics results.

func (AnalyticsS3BucketDestination) GoString    added in  v1.5.11

func (s AnalyticsS3BucketDestination ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AnalyticsS3BucketDestination) SetBucket    added in  v1.5.11

func (s * AnalyticsS3BucketDestination ) SetBucket(v string ) * AnalyticsS3BucketDestination
SetBucket sets the Bucket field's value.

func (*AnalyticsS3BucketDestination) SetBucketAccountId    added in  v1.5.11

func (s * AnalyticsS3BucketDestination ) SetBucketAccountId(v string ) * AnalyticsS3BucketDestination
SetBucketAccountId sets the BucketAccountId field's value.

func (*AnalyticsS3BucketDestination) SetFormat    added in  v1.5.11

func (s * AnalyticsS3BucketDestination ) SetFormat(v string ) * AnalyticsS3BucketDestination
SetFormat sets the Format field's value.

func (*AnalyticsS3BucketDestination) SetPrefix    added in  v1.5.11

func (s * AnalyticsS3BucketDestination ) SetPrefix(v string ) * AnalyticsS3BucketDestination
SetPrefix sets the Prefix field's value.

func (AnalyticsS3BucketDestination) String    added in  v1.5.11

func (s AnalyticsS3BucketDestination ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*AnalyticsS3BucketDestination) Validate    added in  v1.5.11

func (s * AnalyticsS3BucketDestination ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type Bucket
type Bucket struct {  // Date the bucket was created. This date can change when making changes to   // your bucket, such as editing its bucket policy. CreationDate * time . Time `type:"timestamp"`  // The name of the bucket.  Name * string `type:"string"` // contains filtered or unexported fields }
In terms of implementation, a Bucket is a resource. An Amazon S3 bucket name
is globally unique, and the namespace is shared by all Amazon Web Services
accounts.

func (Bucket) GoString    added in  v0.6.5

func (s Bucket ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Bucket) SetCreationDate    added in  v1.5.0

func (s * Bucket ) SetCreationDate(v time . Time ) * Bucket
SetCreationDate sets the CreationDate field's value.

func (*Bucket) SetName    added in  v1.5.0

func (s * Bucket ) SetName(v string ) * Bucket
SetName sets the Name field's value.

func (Bucket) String    added in  v0.6.5

func (s Bucket ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type BucketLifecycleConfiguration    added in  v0.9.8
type BucketLifecycleConfiguration struct {  // A lifecycle rule for individual objects in an Amazon S3 bucket.   //  // Rules is a required field Rules []* LifecycleRule `locationName:"Rule" type:"list" flattened:"true" required:"true"` // contains filtered or unexported fields }
Specifies the lifecycle configuration for objects in an Amazon S3 bucket.
For more information, see Object Lifecycle Management ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html )
in the Amazon S3 User Guide.

func (BucketLifecycleConfiguration) GoString    added in  v0.9.8

func (s BucketLifecycleConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*BucketLifecycleConfiguration) SetRules    added in  v1.5.0

func (s * BucketLifecycleConfiguration ) SetRules(v []* LifecycleRule ) * BucketLifecycleConfiguration
SetRules sets the Rules field's value.

func (BucketLifecycleConfiguration) String    added in  v0.9.8

func (s BucketLifecycleConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*BucketLifecycleConfiguration) Validate    added in  v1.1.21

func (s * BucketLifecycleConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type BucketLoggingStatus
type BucketLoggingStatus struct {  // Describes where logs are stored and the prefix that Amazon S3 assigns to   // all log object keys for a bucket. For more information, see PUT Bucket logging  // ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html )  // in the Amazon S3 API Reference. LoggingEnabled * LoggingEnabled `type:"structure"` // contains filtered or unexported fields }
Container for logging status information.

func (BucketLoggingStatus) GoString    added in  v0.6.5

func (s BucketLoggingStatus ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*BucketLoggingStatus) SetLoggingEnabled    added in  v1.5.0

func (s * BucketLoggingStatus ) SetLoggingEnabled(v * LoggingEnabled ) * BucketLoggingStatus
SetLoggingEnabled sets the LoggingEnabled field's value.

func (BucketLoggingStatus) String    added in  v0.6.5

func (s BucketLoggingStatus ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*BucketLoggingStatus) Validate    added in  v1.1.21

func (s * BucketLoggingStatus ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type CORSConfiguration
type CORSConfiguration struct {  // A set of origins and methods (cross-origin access that you want to allow).   // You can add up to 100 rules to the configuration.  //  // CORSRules is a required field CORSRules []* CORSRule `locationName:"CORSRule" type:"list" flattened:"true" required:"true"` // contains filtered or unexported fields }
Describes the cross-origin access configuration for objects in an Amazon
S3 bucket. For more information, see Enabling Cross-Origin Resource Sharing
( https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html ) in the Amazon
S3 User Guide.

func (CORSConfiguration) GoString    added in  v0.6.5

func (s CORSConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CORSConfiguration) SetCORSRules    added in  v1.5.0

func (s * CORSConfiguration ) SetCORSRules(v []* CORSRule ) * CORSConfiguration
SetCORSRules sets the CORSRules field's value.

func (CORSConfiguration) String    added in  v0.6.5

func (s CORSConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CORSConfiguration) Validate    added in  v1.1.21

func (s * CORSConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type CORSRule
type CORSRule struct {  // Headers that are specified in the Access-Control-Request-Headers header.   // These headers are allowed in a preflight OPTIONS request. In response to  // any preflight OPTIONS request, Amazon S3 returns any requested headers that  // are allowed. AllowedHeaders []* string `locationName:"AllowedHeader" type:"list" flattened:"true"`  // An HTTP method that you allow the origin to execute. Valid values are GET,   // PUT, HEAD, POST, and DELETE.  //  // AllowedMethods is a required field AllowedMethods []* string `locationName:"AllowedMethod" type:"list" flattened:"true" required:"true"`  // One or more origins you want customers to be able to access the bucket from.   //  // AllowedOrigins is a required field AllowedOrigins []* string `locationName:"AllowedOrigin" type:"list" flattened:"true" required:"true"`  // One or more headers in the response that you want customers to be able to   // access from their applications (for example, from a JavaScript XMLHttpRequest  // object). ExposeHeaders []* string `locationName:"ExposeHeader" type:"list" flattened:"true"`  // Unique identifier for the rule. The value cannot be longer than 255 characters.  ID * string `type:"string"`  // The time in seconds that your browser is to cache the preflight response   // for the specified resource. MaxAgeSeconds * int64 `type:"integer"` // contains filtered or unexported fields }
Specifies a cross-origin access rule for an Amazon S3 bucket.

func (CORSRule) GoString    added in  v0.6.5

func (s CORSRule ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CORSRule) SetAllowedHeaders    added in  v1.5.0

func (s * CORSRule ) SetAllowedHeaders(v []* string ) * CORSRule
SetAllowedHeaders sets the AllowedHeaders field's value.

func (*CORSRule) SetAllowedMethods    added in  v1.5.0

func (s * CORSRule ) SetAllowedMethods(v []* string ) * CORSRule
SetAllowedMethods sets the AllowedMethods field's value.

func (*CORSRule) SetAllowedOrigins    added in  v1.5.0

func (s * CORSRule ) SetAllowedOrigins(v []* string ) * CORSRule
SetAllowedOrigins sets the AllowedOrigins field's value.

func (*CORSRule) SetExposeHeaders    added in  v1.5.0

func (s * CORSRule ) SetExposeHeaders(v []* string ) * CORSRule
SetExposeHeaders sets the ExposeHeaders field's value.

func (*CORSRule) SetID    added in  v1.37.28

func (s * CORSRule ) SetID(v string ) * CORSRule
SetID sets the ID field's value.

func (*CORSRule) SetMaxAgeSeconds    added in  v1.5.0

func (s * CORSRule ) SetMaxAgeSeconds(v int64 ) * CORSRule
SetMaxAgeSeconds sets the MaxAgeSeconds field's value.

func (CORSRule) String    added in  v0.6.5

func (s CORSRule ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CORSRule) Validate    added in  v1.1.21

func (s * CORSRule ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type CSVInput    added in  v1.12.36
type CSVInput struct {  // Specifies that CSV field values may contain quoted record delimiters and   // such records should be allowed. Default value is FALSE. Setting this value  // to TRUE may lower performance. AllowQuotedRecordDelimiter * bool `type:"boolean"`  // A single character used to indicate that a row should be ignored when the   // character is present at the start of that row. You can specify any character  // to indicate a comment line. The default character is #.  //  // Default: # Comments * string `type:"string"`  // A single character used to separate individual fields in a record. You can   // specify an arbitrary delimiter. FieldDelimiter * string `type:"string"`  // Describes the first line of input. Valid values are:   //  //    * NONE: First line is not a header.  //  //    * IGNORE: First line is a header, but you can't use the header values  //    to indicate the column in an expression. You can use column position (such  //    as _1, _2, …) to indicate the column (SELECT s._1 FROM OBJECT s).  //  //    * Use: First line is a header, and you can use the header value to identify  //    a column in an expression (SELECT "name" FROM OBJECT). FileHeaderInfo * string `type:"string" enum:"FileHeaderInfo"`  // A single character used for escaping when the field delimiter is part of   // the value. For example, if the value is a, b, Amazon S3 wraps this field  // value in quotation marks, as follows: " a , b ".  //  // Type: String  //  // Default: "  //  // Ancestors: CSV QuoteCharacter * string `type:"string"`  // A single character used for escaping the quotation mark character inside   // an already escaped value. For example, the value """ a , b """ is parsed  // as " a , b ". QuoteEscapeCharacter * string `type:"string"`  // A single character used to separate individual records in the input. Instead   // of the default value, you can specify an arbitrary delimiter. RecordDelimiter * string `type:"string"` // contains filtered or unexported fields }
Describes how an uncompressed comma-separated values (CSV)-formatted input
object is formatted.

func (CSVInput) GoString    added in  v1.12.36

func (s CSVInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CSVInput) SetAllowQuotedRecordDelimiter    added in  v1.14.14

func (s * CSVInput ) SetAllowQuotedRecordDelimiter(v bool ) * CSVInput
SetAllowQuotedRecordDelimiter sets the AllowQuotedRecordDelimiter field's value.

func (*CSVInput) SetComments    added in  v1.12.36

func (s * CSVInput ) SetComments(v string ) * CSVInput
SetComments sets the Comments field's value.

func (*CSVInput) SetFieldDelimiter    added in  v1.12.36

func (s * CSVInput ) SetFieldDelimiter(v string ) * CSVInput
SetFieldDelimiter sets the FieldDelimiter field's value.

func (*CSVInput) SetFileHeaderInfo    added in  v1.12.36

func (s * CSVInput ) SetFileHeaderInfo(v string ) * CSVInput
SetFileHeaderInfo sets the FileHeaderInfo field's value.

func (*CSVInput) SetQuoteCharacter    added in  v1.12.36

func (s * CSVInput ) SetQuoteCharacter(v string ) * CSVInput
SetQuoteCharacter sets the QuoteCharacter field's value.

func (*CSVInput) SetQuoteEscapeCharacter    added in  v1.12.36

func (s * CSVInput ) SetQuoteEscapeCharacter(v string ) * CSVInput
SetQuoteEscapeCharacter sets the QuoteEscapeCharacter field's value.

func (*CSVInput) SetRecordDelimiter    added in  v1.12.36

func (s * CSVInput ) SetRecordDelimiter(v string ) * CSVInput
SetRecordDelimiter sets the RecordDelimiter field's value.

func (CSVInput) String    added in  v1.12.36

func (s CSVInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CSVOutput    added in  v1.12.36
type CSVOutput struct {  // The value used to separate individual fields in a record. You can specify   // an arbitrary delimiter. FieldDelimiter * string `type:"string"`  // A single character used for escaping when the field delimiter is part of   // the value. For example, if the value is a, b, Amazon S3 wraps this field  // value in quotation marks, as follows: " a , b ". QuoteCharacter * string `type:"string"`  // The single character used for escaping the quote character inside an already   // escaped value. QuoteEscapeCharacter * string `type:"string"`  // Indicates whether to use quotation marks around output fields.   //  //    * ALWAYS: Always use quotation marks for output fields.  //  //    * ASNEEDED: Use quotation marks for output fields when needed. QuoteFields * string `type:"string" enum:"QuoteFields"`  // A single character used to separate individual records in the output. Instead   // of the default value, you can specify an arbitrary delimiter. RecordDelimiter * string `type:"string"` // contains filtered or unexported fields }
Describes how uncompressed comma-separated values (CSV)-formatted results
are formatted.

func (CSVOutput) GoString    added in  v1.12.36

func (s CSVOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CSVOutput) SetFieldDelimiter    added in  v1.12.36

func (s * CSVOutput ) SetFieldDelimiter(v string ) * CSVOutput
SetFieldDelimiter sets the FieldDelimiter field's value.

func (*CSVOutput) SetQuoteCharacter    added in  v1.12.36

func (s * CSVOutput ) SetQuoteCharacter(v string ) * CSVOutput
SetQuoteCharacter sets the QuoteCharacter field's value.

func (*CSVOutput) SetQuoteEscapeCharacter    added in  v1.12.36

func (s * CSVOutput ) SetQuoteEscapeCharacter(v string ) * CSVOutput
SetQuoteEscapeCharacter sets the QuoteEscapeCharacter field's value.

func (*CSVOutput) SetQuoteFields    added in  v1.12.36

func (s * CSVOutput ) SetQuoteFields(v string ) * CSVOutput
SetQuoteFields sets the QuoteFields field's value.

func (*CSVOutput) SetRecordDelimiter    added in  v1.12.36

func (s * CSVOutput ) SetRecordDelimiter(v string ) * CSVOutput
SetRecordDelimiter sets the RecordDelimiter field's value.

func (CSVOutput) String    added in  v1.12.36

func (s CSVOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Checksum    added in  v1.43.6
type Checksum struct {  // The base64-encoded, 32-bit CRC32 checksum of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `type:"string"`  // The base64-encoded, 256-bit SHA-256 digest of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `type:"string"` // contains filtered or unexported fields }
Contains all the possible checksum or digest values for an object.

func (Checksum) GoString    added in  v1.43.6

func (s Checksum ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Checksum) SetChecksumCRC32    added in  v1.43.6

func (s * Checksum ) SetChecksumCRC32(v string ) * Checksum
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*Checksum) SetChecksumCRC32C    added in  v1.43.6

func (s * Checksum ) SetChecksumCRC32C(v string ) * Checksum
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*Checksum) SetChecksumSHA1    added in  v1.43.6

func (s * Checksum ) SetChecksumSHA1(v string ) * Checksum
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*Checksum) SetChecksumSHA256    added in  v1.43.6

func (s * Checksum ) SetChecksumSHA256(v string ) * Checksum
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (Checksum) String    added in  v1.43.6

func (s Checksum ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CloudFunctionConfiguration
type CloudFunctionConfiguration struct {  // Lambda cloud function ARN that Amazon S3 can invoke when it detects events   // of the specified type. CloudFunction * string `type:"string"`  // The bucket event for which to send notifications.   //  // Deprecated: Event has been deprecated Event * string `deprecated:"true" type:"string" enum:"Event"`  // Bucket events for which to send notifications.  Events []* string `locationName:"Event" type:"list" flattened:"true" enum:"Event"`  // An optional unique identifier for configurations in a notification configuration.   // If you don't provide one, Amazon S3 will assign an ID. Id * string `type:"string"`  // The role supporting the invocation of the Lambda function  InvocationRole * string `type:"string"` // contains filtered or unexported fields }
Container for specifying the Lambda notification configuration.

func (CloudFunctionConfiguration) GoString    added in  v0.6.5

func (s CloudFunctionConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CloudFunctionConfiguration) SetCloudFunction    added in  v1.5.0

func (s * CloudFunctionConfiguration ) SetCloudFunction(v string ) * CloudFunctionConfiguration
SetCloudFunction sets the CloudFunction field's value.

func (*CloudFunctionConfiguration) SetEvent    added in  v1.5.0

func (s * CloudFunctionConfiguration ) SetEvent(v string ) * CloudFunctionConfiguration
SetEvent sets the Event field's value.

func (*CloudFunctionConfiguration) SetEvents    added in  v1.5.0

func (s * CloudFunctionConfiguration ) SetEvents(v []* string ) * CloudFunctionConfiguration
SetEvents sets the Events field's value.

func (*CloudFunctionConfiguration) SetId    added in  v1.5.0

func (s * CloudFunctionConfiguration ) SetId(v string ) * CloudFunctionConfiguration
SetId sets the Id field's value.

func (*CloudFunctionConfiguration) SetInvocationRole    added in  v1.5.0

func (s * CloudFunctionConfiguration ) SetInvocationRole(v string ) * CloudFunctionConfiguration
SetInvocationRole sets the InvocationRole field's value.

func (CloudFunctionConfiguration) String    added in  v0.6.5

func (s CloudFunctionConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CommonPrefix
type CommonPrefix struct {  // Container for the specified common prefix.  Prefix * string `type:"string"` // contains filtered or unexported fields }
Container for all (if there are any) keys between Prefix and the next occurrence
of the string specified by a delimiter. CommonPrefixes lists keys that act
like subdirectories in the directory specified by Prefix. For example, if
the prefix is notes/ and the delimiter is a slash (/) as in notes/summer/july,
the common prefix is notes/summer/.

func (CommonPrefix) GoString    added in  v0.6.5

func (s CommonPrefix ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CommonPrefix) SetPrefix    added in  v1.5.0

func (s * CommonPrefix ) SetPrefix(v string ) * CommonPrefix
SetPrefix sets the Prefix field's value.

func (CommonPrefix) String    added in  v0.6.5

func (s CommonPrefix ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CompleteMultipartUploadInput
type CompleteMultipartUploadInput struct {  // Name of the bucket to which the multipart upload was initiated.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 32-bit CRC32 checksum of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `location:"header" locationName:"x-amz-checksum-crc32" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 32-bit CRC32C checksum of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `location:"header" locationName:"x-amz-checksum-crc32c" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 160-bit SHA-1 digest of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `location:"header" locationName:"x-amz-checksum-sha1" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 256-bit SHA-256 digest of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `location:"header" locationName:"x-amz-checksum-sha256" type:"string"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Object key for which the multipart upload was initiated.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // The container for the multipart upload request information.  MultipartUpload * CompletedMultipartUpload `locationName:"CompleteMultipartUpload" type:"structure" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // The server-side encryption (SSE) algorithm used to encrypt the object. This   // parameter is needed only when the object was created using a checksum algorithm.  // For more information, see Protecting data using SSE-C keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )  // in the Amazon S3 User Guide. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // The server-side encryption (SSE) customer managed key. This parameter is   // needed only when the object was created using a checksum algorithm. For more  // information, see Protecting data using SSE-C keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )  // in the Amazon S3 User Guide.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CompleteMultipartUploadInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // The MD5 server-side encryption (SSE) customer managed key. This parameter   // is needed only when the object was created using a checksum algorithm. For  // more information, see Protecting data using SSE-C keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )  // in the Amazon S3 User Guide. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // ID for the initiated multipart upload.   //  // UploadId is a required field UploadId * string `location:"querystring" locationName:"uploadId" type:"string" required:"true"` // contains filtered or unexported fields }

func (CompleteMultipartUploadInput) GoString    added in  v0.6.5

func (s CompleteMultipartUploadInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CompleteMultipartUploadInput) SetBucket    added in  v1.5.0

func (s * CompleteMultipartUploadInput ) SetBucket(v string ) * CompleteMultipartUploadInput
SetBucket sets the Bucket field's value.

func (*CompleteMultipartUploadInput) SetChecksumCRC32    added in  v1.43.6

func (s * CompleteMultipartUploadInput ) SetChecksumCRC32(v string ) * CompleteMultipartUploadInput
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*CompleteMultipartUploadInput) SetChecksumCRC32C    added in  v1.43.6

func (s * CompleteMultipartUploadInput ) SetChecksumCRC32C(v string ) * CompleteMultipartUploadInput
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*CompleteMultipartUploadInput) SetChecksumSHA1    added in  v1.43.6

func (s * CompleteMultipartUploadInput ) SetChecksumSHA1(v string ) * CompleteMultipartUploadInput
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*CompleteMultipartUploadInput) SetChecksumSHA256    added in  v1.43.6

func (s * CompleteMultipartUploadInput ) SetChecksumSHA256(v string ) * CompleteMultipartUploadInput
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*CompleteMultipartUploadInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * CompleteMultipartUploadInput ) SetExpectedBucketOwner(v string ) * CompleteMultipartUploadInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*CompleteMultipartUploadInput) SetKey    added in  v1.5.0

func (s * CompleteMultipartUploadInput ) SetKey(v string ) * CompleteMultipartUploadInput
SetKey sets the Key field's value.

func (*CompleteMultipartUploadInput) SetMultipartUpload    added in  v1.5.0

func (s * CompleteMultipartUploadInput ) SetMultipartUpload(v * CompletedMultipartUpload ) * CompleteMultipartUploadInput
SetMultipartUpload sets the MultipartUpload field's value.

func (*CompleteMultipartUploadInput) SetRequestPayer    added in  v1.5.0

func (s * CompleteMultipartUploadInput ) SetRequestPayer(v string ) * CompleteMultipartUploadInput
SetRequestPayer sets the RequestPayer field's value.

func (*CompleteMultipartUploadInput) SetSSECustomerAlgorithm    added in  v1.43.6

func (s * CompleteMultipartUploadInput ) SetSSECustomerAlgorithm(v string ) * CompleteMultipartUploadInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*CompleteMultipartUploadInput) SetSSECustomerKey    added in  v1.43.6

func (s * CompleteMultipartUploadInput ) SetSSECustomerKey(v string ) * CompleteMultipartUploadInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*CompleteMultipartUploadInput) SetSSECustomerKeyMD5    added in  v1.43.6

func (s * CompleteMultipartUploadInput ) SetSSECustomerKeyMD5(v string ) * CompleteMultipartUploadInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*CompleteMultipartUploadInput) SetUploadId    added in  v1.5.0

func (s * CompleteMultipartUploadInput ) SetUploadId(v string ) * CompleteMultipartUploadInput
SetUploadId sets the UploadId field's value.

func (CompleteMultipartUploadInput) String    added in  v0.6.5

func (s CompleteMultipartUploadInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CompleteMultipartUploadInput) Validate    added in  v1.1.21

func (s * CompleteMultipartUploadInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type CompleteMultipartUploadOutput
type CompleteMultipartUploadOutput struct {  // The name of the bucket that contains the newly created object. Does not return   // the access point ARN or access point alias if used.  //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide. Bucket * string `type:"string"`  // Indicates whether the multipart upload uses an S3 Bucket Key for server-side   // encryption with Key Management Service (KMS) keys (SSE-KMS). BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // The base64-encoded, 32-bit CRC32 checksum of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `type:"string"`  // The base64-encoded, 256-bit SHA-256 digest of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `type:"string"`  // Entity tag that identifies the newly created object's data. Objects with   // different object data will have different entity tags. The entity tag is  // an opaque string. The entity tag may or may not be an MD5 digest of the object  // data. If the entity tag is not an MD5 digest of the object data, it will  // contain one or more nonhexadecimal characters and/or will consist of less  // than 32 or more than 32 hexadecimal digits. For more information about how  // the entity tag is calculated, see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ETag * string `type:"string"`  // If the object expiration is configured, this will contain the expiration   // date (expiry-date) and rule ID (rule-id). The value of rule-id is URL-encoded. Expiration * string `location:"header" locationName:"x-amz-expiration" type:"string"`  // The object key of the newly created object.  Key * string `min:"1" type:"string"`  // The URI that identifies the newly created object.  Location * string `type:"string"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // If present, specifies the ID of the Key Management Service (KMS) symmetric   // encryption customer managed key that was used for the object.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CompleteMultipartUploadOutput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"`  // Version ID of the newly created object, in case the bucket has versioning   // turned on. VersionId * string `location:"header" locationName:"x-amz-version-id" type:"string"` // contains filtered or unexported fields }

func (CompleteMultipartUploadOutput) GoString    added in  v0.6.5

func (s CompleteMultipartUploadOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CompleteMultipartUploadOutput) SetBucket    added in  v1.5.0

func (s * CompleteMultipartUploadOutput ) SetBucket(v string ) * CompleteMultipartUploadOutput
SetBucket sets the Bucket field's value.

func (*CompleteMultipartUploadOutput) SetBucketKeyEnabled    added in  v1.35.37

func (s * CompleteMultipartUploadOutput ) SetBucketKeyEnabled(v bool ) * CompleteMultipartUploadOutput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*CompleteMultipartUploadOutput) SetChecksumCRC32    added in  v1.43.6

func (s * CompleteMultipartUploadOutput ) SetChecksumCRC32(v string ) * CompleteMultipartUploadOutput
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*CompleteMultipartUploadOutput) SetChecksumCRC32C    added in  v1.43.6

func (s * CompleteMultipartUploadOutput ) SetChecksumCRC32C(v string ) * CompleteMultipartUploadOutput
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*CompleteMultipartUploadOutput) SetChecksumSHA1    added in  v1.43.6

func (s * CompleteMultipartUploadOutput ) SetChecksumSHA1(v string ) * CompleteMultipartUploadOutput
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*CompleteMultipartUploadOutput) SetChecksumSHA256    added in  v1.43.6

func (s * CompleteMultipartUploadOutput ) SetChecksumSHA256(v string ) * CompleteMultipartUploadOutput
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*CompleteMultipartUploadOutput) SetETag    added in  v1.5.0

func (s * CompleteMultipartUploadOutput ) SetETag(v string ) * CompleteMultipartUploadOutput
SetETag sets the ETag field's value.

func (*CompleteMultipartUploadOutput) SetExpiration    added in  v1.5.0

func (s * CompleteMultipartUploadOutput ) SetExpiration(v string ) * CompleteMultipartUploadOutput
SetExpiration sets the Expiration field's value.

func (*CompleteMultipartUploadOutput) SetKey    added in  v1.5.0

func (s * CompleteMultipartUploadOutput ) SetKey(v string ) * CompleteMultipartUploadOutput
SetKey sets the Key field's value.

func (*CompleteMultipartUploadOutput) SetLocation    added in  v1.5.0

func (s * CompleteMultipartUploadOutput ) SetLocation(v string ) * CompleteMultipartUploadOutput
SetLocation sets the Location field's value.

func (*CompleteMultipartUploadOutput) SetRequestCharged    added in  v1.5.0

func (s * CompleteMultipartUploadOutput ) SetRequestCharged(v string ) * CompleteMultipartUploadOutput
SetRequestCharged sets the RequestCharged field's value.

func (*CompleteMultipartUploadOutput) SetSSEKMSKeyId    added in  v1.5.0

func (s * CompleteMultipartUploadOutput ) SetSSEKMSKeyId(v string ) * CompleteMultipartUploadOutput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*CompleteMultipartUploadOutput) SetServerSideEncryption    added in  v1.5.0

func (s * CompleteMultipartUploadOutput ) SetServerSideEncryption(v string ) * CompleteMultipartUploadOutput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (*CompleteMultipartUploadOutput) SetVersionId    added in  v1.5.0

func (s * CompleteMultipartUploadOutput ) SetVersionId(v string ) * CompleteMultipartUploadOutput
SetVersionId sets the VersionId field's value.

func (CompleteMultipartUploadOutput) String    added in  v0.6.5

func (s CompleteMultipartUploadOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CompletedMultipartUpload
type CompletedMultipartUpload struct {  // Array of CompletedPart data types.   //  // If you do not supply a valid Part with your request, the service sends back  // an HTTP 400 response. Parts []* CompletedPart `locationName:"Part" type:"list" flattened:"true"` // contains filtered or unexported fields }
The container for the completed multipart upload details.

func (CompletedMultipartUpload) GoString    added in  v0.6.5

func (s CompletedMultipartUpload ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CompletedMultipartUpload) SetParts    added in  v1.5.0

func (s * CompletedMultipartUpload ) SetParts(v []* CompletedPart ) * CompletedMultipartUpload
SetParts sets the Parts field's value.

func (CompletedMultipartUpload) String    added in  v0.6.5

func (s CompletedMultipartUpload ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CompletedPart
type CompletedPart struct {  // The base64-encoded, 32-bit CRC32 checksum of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `type:"string"`  // The base64-encoded, 256-bit SHA-256 digest of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `type:"string"`  // Entity tag returned when the part was uploaded.  ETag * string `type:"string"`  // Part number that identifies the part. This is a positive integer between   // 1 and 10,000. PartNumber * int64 `type:"integer"` // contains filtered or unexported fields }
Details of the parts that were uploaded.

func (CompletedPart) GoString    added in  v0.6.5

func (s CompletedPart ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CompletedPart) SetChecksumCRC32    added in  v1.43.6

func (s * CompletedPart ) SetChecksumCRC32(v string ) * CompletedPart
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*CompletedPart) SetChecksumCRC32C    added in  v1.43.6

func (s * CompletedPart ) SetChecksumCRC32C(v string ) * CompletedPart
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*CompletedPart) SetChecksumSHA1    added in  v1.43.6

func (s * CompletedPart ) SetChecksumSHA1(v string ) * CompletedPart
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*CompletedPart) SetChecksumSHA256    added in  v1.43.6

func (s * CompletedPart ) SetChecksumSHA256(v string ) * CompletedPart
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*CompletedPart) SetETag    added in  v1.5.0

func (s * CompletedPart ) SetETag(v string ) * CompletedPart
SetETag sets the ETag field's value.

func (*CompletedPart) SetPartNumber    added in  v1.5.0

func (s * CompletedPart ) SetPartNumber(v int64 ) * CompletedPart
SetPartNumber sets the PartNumber field's value.

func (CompletedPart) String    added in  v0.6.5

func (s CompletedPart ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Condition
type Condition struct {  // The HTTP error code when the redirect is applied. In the event of an error,   // if the error code equals this value, then the specified redirect is applied.  // Required when parent element Condition is specified and sibling KeyPrefixEquals  // is not specified. If both are specified, then both must be true for the redirect  // to be applied. HttpErrorCodeReturnedEquals * string `type:"string"`  // The object key name prefix when the redirect is applied. For example, to   // redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html.  // To redirect request for all pages with the prefix docs/, the key prefix will  // be /docs, which identifies all objects in the docs/ folder. Required when  // the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals  // is not specified. If both conditions are specified, both must be true for  // the redirect to be applied.  //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ). KeyPrefixEquals * string `type:"string"` // contains filtered or unexported fields }
A container for describing a condition that must be met for the specified
redirect to apply. For example, 1. If request is for pages in the /docs folder,
redirect to the /documents folder. 2. If request results in HTTP error 4xx,
redirect request to another host where you might process the error.

func (Condition) GoString    added in  v0.6.5

func (s Condition ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Condition) SetHttpErrorCodeReturnedEquals    added in  v1.5.0

func (s * Condition ) SetHttpErrorCodeReturnedEquals(v string ) * Condition
SetHttpErrorCodeReturnedEquals sets the HttpErrorCodeReturnedEquals field's value.

func (*Condition) SetKeyPrefixEquals    added in  v1.5.0

func (s * Condition ) SetKeyPrefixEquals(v string ) * Condition
SetKeyPrefixEquals sets the KeyPrefixEquals field's value.

func (Condition) String    added in  v0.6.5

func (s Condition ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ContinuationEvent    added in  v1.14.0
type ContinuationEvent struct { // contains filtered or unexported fields }

func (ContinuationEvent) GoString    added in  v1.14.0

func (s ContinuationEvent ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ContinuationEvent) MarshalEvent    added in  v1.27.0

func (s * ContinuationEvent ) MarshalEvent(pm protocol . PayloadMarshaler ) (msg eventstream . Message , err error )
MarshalEvent marshals the type into an stream event value. This method
should only used internally within the SDK's EventStream handling.

func (ContinuationEvent) String    added in  v1.14.0

func (s ContinuationEvent ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ContinuationEvent) UnmarshalEvent    added in  v1.14.0

func (s * ContinuationEvent ) UnmarshalEvent(
payloadUnmarshaler protocol . PayloadUnmarshaler ,
msg eventstream . Message ,
) error
UnmarshalEvent unmarshals the EventStream Message into the ContinuationEvent value.
This method is only used internally within the SDK's EventStream handling.
type CopyObjectInput
type CopyObjectInput struct {  // The canned ACL to apply to the object.   //  // This action is not supported by Amazon S3 on Outposts. ACL * string `location:"header" locationName:"x-amz-acl" type:"string" enum:"ObjectCannedACL"`  // The name of the destination bucket.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption   // with server-side encryption using Key Management Service (KMS) keys (SSE-KMS).  // Setting this header to true causes Amazon S3 to use an S3 Bucket Key for  // object encryption with SSE-KMS.  //  // Specifying this header with a COPY action doesn’t affect bucket-level settings  // for S3 Bucket Key. BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // Specifies caching behavior along the request/reply chain.  CacheControl * string `location:"header" locationName:"Cache-Control" type:"string"`  // Indicates the algorithm you want Amazon S3 to use to create the checksum   // for the object. For more information, see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // Specifies presentational information for the object.  ContentDisposition * string `location:"header" locationName:"Content-Disposition" type:"string"`  // Specifies what content encodings have been applied to the object and thus   // what decoding mechanisms must be applied to obtain the media-type referenced  // by the Content-Type header field. ContentEncoding * string `location:"header" locationName:"Content-Encoding" type:"string"`  // The language the content is in.  ContentLanguage * string `location:"header" locationName:"Content-Language" type:"string"`  // A standard MIME type describing the format of the object data.  ContentType * string `location:"header" locationName:"Content-Type" type:"string"`  // Specifies the source object for the copy operation. You specify the value   // in one of two formats, depending on whether you want to access the source  // object through an access point ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html ):  //  //    * For objects not accessed through an access point, specify the name of  //    the source bucket and the key of the source object, separated by a slash  //    (/). For example, to copy the object reports/january.pdf from the bucket  //    awsexamplebucket, use awsexamplebucket/reports/january.pdf. The value  //    must be URL-encoded.  //  //    * For objects accessed through access points, specify the Amazon Resource  //    Name (ARN) of the object as accessed through the access point, in the  //    format arn:aws:s3:<Region>:<account-id>:accesspoint/<access-point-name>/object/<key>.  //    For example, to copy the object reports/january.pdf through access point  //    my-access-point owned by account 123456789012 in Region us-west-2, use  //    the URL encoding of arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf.  //    The value must be URL encoded. Amazon S3 supports copy operations using  //    access points only when the source and destination buckets are in the  //    same Amazon Web Services Region. Alternatively, for objects accessed through  //    Amazon S3 on Outposts, specify the ARN of the object as accessed in the  //    format arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/object/<key>.  //    For example, to copy the object reports/january.pdf through outpost my-outpost  //    owned by account 123456789012 in Region us-west-2, use the URL encoding  //    of arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf.  //    The value must be URL-encoded.  //  // To copy a specific version of an object, append ?versionId=<version-id> to  // the value (for example, awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893).  // If you don't specify a version ID, Amazon S3 copies the latest version of  // the source object.  //  // CopySource is a required field CopySource * string `location:"header" locationName:"x-amz-copy-source" type:"string" required:"true"`  // Copies the object if its entity tag (ETag) matches the specified tag.  CopySourceIfMatch * string `location:"header" locationName:"x-amz-copy-source-if-match" type:"string"`  // Copies the object if it has been modified since the specified time.  CopySourceIfModifiedSince * time . Time `location:"header" locationName:"x-amz-copy-source-if-modified-since" type:"timestamp"`  // Copies the object if its entity tag (ETag) is different than the specified   // ETag. CopySourceIfNoneMatch * string `location:"header" locationName:"x-amz-copy-source-if-none-match" type:"string"`  // Copies the object if it hasn't been modified since the specified time.  CopySourceIfUnmodifiedSince * time . Time `location:"header" locationName:"x-amz-copy-source-if-unmodified-since" type:"timestamp"`  // Specifies the algorithm to use when decrypting the source object (for example,   // AES256). CopySourceSSECustomerAlgorithm * string `location:"header" locationName:"x-amz-copy-source-server-side-encryption-customer-algorithm" type:"string"`  // Specifies the customer-provided encryption key for Amazon S3 to use to decrypt   // the source object. The encryption key provided in this header must be one  // that was used when the source object was created.  //  // CopySourceSSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CopyObjectInput's  // String and GoString methods. CopySourceSSECustomerKey * string `` /* 135-byte string literal not displayed */   // Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321 .   // Amazon S3 uses this header for a message integrity check to ensure that the  // encryption key was transmitted without error. CopySourceSSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-copy-source-server-side-encryption-customer-key-MD5" type:"string"`  // The account ID of the expected destination bucket owner. If the destination   // bucket is owned by a different account, the request fails with the HTTP status  // code 403 Forbidden (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The account ID of the expected source bucket owner. If the source bucket   // is owned by a different account, the request fails with the HTTP status code  // 403 Forbidden (access denied). ExpectedSourceBucketOwner * string `location:"header" locationName:"x-amz-source-expected-bucket-owner" type:"string"`  // The date and time at which the object is no longer cacheable.  Expires * time . Time `location:"header" locationName:"Expires" type:"timestamp"`  // Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.   //  // This action is not supported by Amazon S3 on Outposts. GrantFullControl * string `location:"header" locationName:"x-amz-grant-full-control" type:"string"`  // Allows grantee to read the object data and its metadata.   //  // This action is not supported by Amazon S3 on Outposts. GrantRead * string `location:"header" locationName:"x-amz-grant-read" type:"string"`  // Allows grantee to read the object ACL.   //  // This action is not supported by Amazon S3 on Outposts. GrantReadACP * string `location:"header" locationName:"x-amz-grant-read-acp" type:"string"`  // Allows grantee to write the ACL for the applicable object.   //  // This action is not supported by Amazon S3 on Outposts. GrantWriteACP * string `location:"header" locationName:"x-amz-grant-write-acp" type:"string"`  // The key of the destination object.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // A map of metadata to store with the object in S3.  Metadata map[ string ]* string `location:"headers" locationName:"x-amz-meta-" type:"map"`  // Specifies whether the metadata is copied from the source object or replaced   // with metadata provided in the request. MetadataDirective * string `location:"header" locationName:"x-amz-metadata-directive" type:"string" enum:"MetadataDirective"`  // Specifies whether you want to apply a legal hold to the copied object.  ObjectLockLegalHoldStatus * string `location:"header" locationName:"x-amz-object-lock-legal-hold" type:"string" enum:"ObjectLockLegalHoldStatus"`  // The Object Lock mode that you want to apply to the copied object.  ObjectLockMode * string `location:"header" locationName:"x-amz-object-lock-mode" type:"string" enum:"ObjectLockMode"`  // The date and time when you want the copied object's Object Lock to expire.  ObjectLockRetainUntilDate * time . Time `location:"header" locationName:"x-amz-object-lock-retain-until-date" type:"timestamp" timestampFormat:"iso8601"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Specifies the algorithm to use to when encrypting the object (for example,   // AES256). SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // Specifies the customer-provided encryption key for Amazon S3 to use in encrypting   // data. This value is used to store the object and then it is discarded; Amazon  // S3 does not store the encryption key. The key must be appropriate for use  // with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm  // header.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CopyObjectInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321 .   // Amazon S3 uses this header for a message integrity check to ensure that the  // encryption key was transmitted without error. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // Specifies the Amazon Web Services KMS Encryption Context to use for object   // encryption. The value of this header is a base64-encoded UTF-8 string holding  // JSON with the encryption context key-value pairs.  //  // SSEKMSEncryptionContext is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CopyObjectInput's  // String and GoString methods. SSEKMSEncryptionContext * string `location:"header" locationName:"x-amz-server-side-encryption-context" type:"string" sensitive:"true"`  // Specifies the KMS ID (Key ID, Key ARN, or Key Alias) to use for object encryption.   // All GET and PUT requests for an object protected by KMS will fail if they're  // not made via SSL or using SigV4. For information about configuring any of  // the officially supported Amazon Web Services SDKs and Amazon Web Services  // CLI, see Specifying the Signature Version in Request Authentication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version )  // in the Amazon S3 User Guide.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CopyObjectInput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms, aws:kms:dsse). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"`  // If the x-amz-storage-class header is not used, the copied object will be   // stored in the STANDARD Storage Class by default. The STANDARD storage class  // provides high durability and high availability. Depending on performance  // needs, you can specify a different Storage Class. Amazon S3 on Outposts only  // uses the OUTPOSTS Storage Class. For more information, see Storage Classes  // ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html )  // in the Amazon S3 User Guide. StorageClass * string `location:"header" locationName:"x-amz-storage-class" type:"string" enum:"StorageClass"`  // The tag-set for the object destination object this value must be used in   // conjunction with the TaggingDirective. The tag-set must be encoded as URL  // Query parameters. Tagging * string `location:"header" locationName:"x-amz-tagging" type:"string"`  // Specifies whether the object tag-set are copied from the source object or   // replaced with tag-set provided in the request. TaggingDirective * string `location:"header" locationName:"x-amz-tagging-directive" type:"string" enum:"TaggingDirective"`  // If the bucket is configured as a website, redirects requests for this object   // to another object in the same bucket or to an external URL. Amazon S3 stores  // the value of this header in the object metadata. This value is unique to  // each object and is not copied when using the x-amz-metadata-directive header.  // Instead, you may opt to provide this header in combination with the directive. WebsiteRedirectLocation * string `location:"header" locationName:"x-amz-website-redirect-location" type:"string"` // contains filtered or unexported fields }

func (CopyObjectInput) GoString    added in  v0.6.5

func (s CopyObjectInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CopyObjectInput) SetACL    added in  v1.5.0

func (s * CopyObjectInput ) SetACL(v string ) * CopyObjectInput
SetACL sets the ACL field's value.

func (*CopyObjectInput) SetBucket    added in  v1.5.0

func (s * CopyObjectInput ) SetBucket(v string ) * CopyObjectInput
SetBucket sets the Bucket field's value.

func (*CopyObjectInput) SetBucketKeyEnabled    added in  v1.35.37

func (s * CopyObjectInput ) SetBucketKeyEnabled(v bool ) * CopyObjectInput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*CopyObjectInput) SetCacheControl    added in  v1.5.0

func (s * CopyObjectInput ) SetCacheControl(v string ) * CopyObjectInput
SetCacheControl sets the CacheControl field's value.

func (*CopyObjectInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * CopyObjectInput ) SetChecksumAlgorithm(v string ) * CopyObjectInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*CopyObjectInput) SetContentDisposition    added in  v1.5.0

func (s * CopyObjectInput ) SetContentDisposition(v string ) * CopyObjectInput
SetContentDisposition sets the ContentDisposition field's value.

func (*CopyObjectInput) SetContentEncoding    added in  v1.5.0

func (s * CopyObjectInput ) SetContentEncoding(v string ) * CopyObjectInput
SetContentEncoding sets the ContentEncoding field's value.

func (*CopyObjectInput) SetContentLanguage    added in  v1.5.0

func (s * CopyObjectInput ) SetContentLanguage(v string ) * CopyObjectInput
SetContentLanguage sets the ContentLanguage field's value.

func (*CopyObjectInput) SetContentType    added in  v1.5.0

func (s * CopyObjectInput ) SetContentType(v string ) * CopyObjectInput
SetContentType sets the ContentType field's value.

func (*CopyObjectInput) SetCopySource    added in  v1.5.0

func (s * CopyObjectInput ) SetCopySource(v string ) * CopyObjectInput
SetCopySource sets the CopySource field's value.

func (*CopyObjectInput) SetCopySourceIfMatch    added in  v1.5.0

func (s * CopyObjectInput ) SetCopySourceIfMatch(v string ) * CopyObjectInput
SetCopySourceIfMatch sets the CopySourceIfMatch field's value.

func (*CopyObjectInput) SetCopySourceIfModifiedSince    added in  v1.5.0

func (s * CopyObjectInput ) SetCopySourceIfModifiedSince(v time . Time ) * CopyObjectInput
SetCopySourceIfModifiedSince sets the CopySourceIfModifiedSince field's value.

func (*CopyObjectInput) SetCopySourceIfNoneMatch    added in  v1.5.0

func (s * CopyObjectInput ) SetCopySourceIfNoneMatch(v string ) * CopyObjectInput
SetCopySourceIfNoneMatch sets the CopySourceIfNoneMatch field's value.

func (*CopyObjectInput) SetCopySourceIfUnmodifiedSince    added in  v1.5.0

func (s * CopyObjectInput ) SetCopySourceIfUnmodifiedSince(v time . Time ) * CopyObjectInput
SetCopySourceIfUnmodifiedSince sets the CopySourceIfUnmodifiedSince field's value.

func (*CopyObjectInput) SetCopySourceSSECustomerAlgorithm    added in  v1.5.0

func (s * CopyObjectInput ) SetCopySourceSSECustomerAlgorithm(v string ) * CopyObjectInput
SetCopySourceSSECustomerAlgorithm sets the CopySourceSSECustomerAlgorithm field's value.

func (*CopyObjectInput) SetCopySourceSSECustomerKey    added in  v1.5.0

func (s * CopyObjectInput ) SetCopySourceSSECustomerKey(v string ) * CopyObjectInput
SetCopySourceSSECustomerKey sets the CopySourceSSECustomerKey field's value.

func (*CopyObjectInput) SetCopySourceSSECustomerKeyMD5    added in  v1.5.0

func (s * CopyObjectInput ) SetCopySourceSSECustomerKeyMD5(v string ) * CopyObjectInput
SetCopySourceSSECustomerKeyMD5 sets the CopySourceSSECustomerKeyMD5 field's value.

func (*CopyObjectInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * CopyObjectInput ) SetExpectedBucketOwner(v string ) * CopyObjectInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*CopyObjectInput) SetExpectedSourceBucketOwner    added in  v1.34.21

func (s * CopyObjectInput ) SetExpectedSourceBucketOwner(v string ) * CopyObjectInput
SetExpectedSourceBucketOwner sets the ExpectedSourceBucketOwner field's value.

func (*CopyObjectInput) SetExpires    added in  v1.5.0

func (s * CopyObjectInput ) SetExpires(v time . Time ) * CopyObjectInput
SetExpires sets the Expires field's value.

func (*CopyObjectInput) SetGrantFullControl    added in  v1.5.0

func (s * CopyObjectInput ) SetGrantFullControl(v string ) * CopyObjectInput
SetGrantFullControl sets the GrantFullControl field's value.

func (*CopyObjectInput) SetGrantRead    added in  v1.5.0

func (s * CopyObjectInput ) SetGrantRead(v string ) * CopyObjectInput
SetGrantRead sets the GrantRead field's value.

func (*CopyObjectInput) SetGrantReadACP    added in  v1.5.0

func (s * CopyObjectInput ) SetGrantReadACP(v string ) * CopyObjectInput
SetGrantReadACP sets the GrantReadACP field's value.

func (*CopyObjectInput) SetGrantWriteACP    added in  v1.5.0

func (s * CopyObjectInput ) SetGrantWriteACP(v string ) * CopyObjectInput
SetGrantWriteACP sets the GrantWriteACP field's value.

func (*CopyObjectInput) SetKey    added in  v1.5.0

func (s * CopyObjectInput ) SetKey(v string ) * CopyObjectInput
SetKey sets the Key field's value.

func (*CopyObjectInput) SetMetadata    added in  v1.5.0

func (s * CopyObjectInput ) SetMetadata(v map[ string ]* string ) * CopyObjectInput
SetMetadata sets the Metadata field's value.

func (*CopyObjectInput) SetMetadataDirective    added in  v1.5.0

func (s * CopyObjectInput ) SetMetadataDirective(v string ) * CopyObjectInput
SetMetadataDirective sets the MetadataDirective field's value.

func (*CopyObjectInput) SetObjectLockLegalHoldStatus    added in  v1.15.83

func (s * CopyObjectInput ) SetObjectLockLegalHoldStatus(v string ) * CopyObjectInput
SetObjectLockLegalHoldStatus sets the ObjectLockLegalHoldStatus field's value.

func (*CopyObjectInput) SetObjectLockMode    added in  v1.15.83

func (s * CopyObjectInput ) SetObjectLockMode(v string ) * CopyObjectInput
SetObjectLockMode sets the ObjectLockMode field's value.

func (*CopyObjectInput) SetObjectLockRetainUntilDate    added in  v1.15.83

func (s * CopyObjectInput ) SetObjectLockRetainUntilDate(v time . Time ) * CopyObjectInput
SetObjectLockRetainUntilDate sets the ObjectLockRetainUntilDate field's value.

func (*CopyObjectInput) SetRequestPayer    added in  v1.5.0

func (s * CopyObjectInput ) SetRequestPayer(v string ) * CopyObjectInput
SetRequestPayer sets the RequestPayer field's value.

func (*CopyObjectInput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * CopyObjectInput ) SetSSECustomerAlgorithm(v string ) * CopyObjectInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*CopyObjectInput) SetSSECustomerKey    added in  v1.5.0

func (s * CopyObjectInput ) SetSSECustomerKey(v string ) * CopyObjectInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*CopyObjectInput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * CopyObjectInput ) SetSSECustomerKeyMD5(v string ) * CopyObjectInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*CopyObjectInput) SetSSEKMSEncryptionContext    added in  v1.20.15

func (s * CopyObjectInput ) SetSSEKMSEncryptionContext(v string ) * CopyObjectInput
SetSSEKMSEncryptionContext sets the SSEKMSEncryptionContext field's value.

func (*CopyObjectInput) SetSSEKMSKeyId    added in  v1.5.0

func (s * CopyObjectInput ) SetSSEKMSKeyId(v string ) * CopyObjectInput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*CopyObjectInput) SetServerSideEncryption    added in  v1.5.0

func (s * CopyObjectInput ) SetServerSideEncryption(v string ) * CopyObjectInput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (*CopyObjectInput) SetStorageClass    added in  v1.5.0

func (s * CopyObjectInput ) SetStorageClass(v string ) * CopyObjectInput
SetStorageClass sets the StorageClass field's value.

func (*CopyObjectInput) SetTagging    added in  v1.5.11

func (s * CopyObjectInput ) SetTagging(v string ) * CopyObjectInput
SetTagging sets the Tagging field's value.

func (*CopyObjectInput) SetTaggingDirective    added in  v1.5.11

func (s * CopyObjectInput ) SetTaggingDirective(v string ) * CopyObjectInput
SetTaggingDirective sets the TaggingDirective field's value.

func (*CopyObjectInput) SetWebsiteRedirectLocation    added in  v1.5.0

func (s * CopyObjectInput ) SetWebsiteRedirectLocation(v string ) * CopyObjectInput
SetWebsiteRedirectLocation sets the WebsiteRedirectLocation field's value.

func (CopyObjectInput) String    added in  v0.6.5

func (s CopyObjectInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CopyObjectInput) Validate    added in  v1.1.21

func (s * CopyObjectInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type CopyObjectOutput
type CopyObjectOutput struct {  // Indicates whether the copied object uses an S3 Bucket Key for server-side   // encryption with Key Management Service (KMS) keys (SSE-KMS). BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // Container for all response elements.  CopyObjectResult * CopyObjectResult `type:"structure"`  // Version of the copied object in the destination bucket.  CopySourceVersionId * string `location:"header" locationName:"x-amz-copy-source-version-id" type:"string"`  // If the object expiration is configured, the response includes this header.  Expiration * string `location:"header" locationName:"x-amz-expiration" type:"string"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header confirming the encryption algorithm  // used. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header to provide round-trip message integrity  // verification of the customer-provided encryption key. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // If present, specifies the Amazon Web Services KMS Encryption Context to use   // for object encryption. The value of this header is a base64-encoded UTF-8  // string holding JSON with the encryption context key-value pairs.  //  // SSEKMSEncryptionContext is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CopyObjectOutput's  // String and GoString methods. SSEKMSEncryptionContext * string `location:"header" locationName:"x-amz-server-side-encryption-context" type:"string" sensitive:"true"`  // If present, specifies the ID of the Key Management Service (KMS) symmetric   // encryption customer managed key that was used for the object.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CopyObjectOutput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms, aws:kms:dsse). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"`  // Version ID of the newly created copy.  VersionId * string `location:"header" locationName:"x-amz-version-id" type:"string"` // contains filtered or unexported fields }

func (CopyObjectOutput) GoString    added in  v0.6.5

func (s CopyObjectOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CopyObjectOutput) SetBucketKeyEnabled    added in  v1.35.37

func (s * CopyObjectOutput ) SetBucketKeyEnabled(v bool ) * CopyObjectOutput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*CopyObjectOutput) SetCopyObjectResult    added in  v1.5.0

func (s * CopyObjectOutput ) SetCopyObjectResult(v * CopyObjectResult ) * CopyObjectOutput
SetCopyObjectResult sets the CopyObjectResult field's value.

func (*CopyObjectOutput) SetCopySourceVersionId    added in  v1.5.0

func (s * CopyObjectOutput ) SetCopySourceVersionId(v string ) * CopyObjectOutput
SetCopySourceVersionId sets the CopySourceVersionId field's value.

func (*CopyObjectOutput) SetExpiration    added in  v1.5.0

func (s * CopyObjectOutput ) SetExpiration(v string ) * CopyObjectOutput
SetExpiration sets the Expiration field's value.

func (*CopyObjectOutput) SetRequestCharged    added in  v1.5.0

func (s * CopyObjectOutput ) SetRequestCharged(v string ) * CopyObjectOutput
SetRequestCharged sets the RequestCharged field's value.

func (*CopyObjectOutput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * CopyObjectOutput ) SetSSECustomerAlgorithm(v string ) * CopyObjectOutput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*CopyObjectOutput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * CopyObjectOutput ) SetSSECustomerKeyMD5(v string ) * CopyObjectOutput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*CopyObjectOutput) SetSSEKMSEncryptionContext    added in  v1.20.15

func (s * CopyObjectOutput ) SetSSEKMSEncryptionContext(v string ) * CopyObjectOutput
SetSSEKMSEncryptionContext sets the SSEKMSEncryptionContext field's value.

func (*CopyObjectOutput) SetSSEKMSKeyId    added in  v1.5.0

func (s * CopyObjectOutput ) SetSSEKMSKeyId(v string ) * CopyObjectOutput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*CopyObjectOutput) SetServerSideEncryption    added in  v1.5.0

func (s * CopyObjectOutput ) SetServerSideEncryption(v string ) * CopyObjectOutput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (*CopyObjectOutput) SetVersionId    added in  v1.5.0

func (s * CopyObjectOutput ) SetVersionId(v string ) * CopyObjectOutput
SetVersionId sets the VersionId field's value.

func (CopyObjectOutput) String    added in  v0.6.5

func (s CopyObjectOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CopyObjectResult
type CopyObjectResult struct {  // The base64-encoded, 32-bit CRC32 checksum of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `type:"string"`  // The base64-encoded, 256-bit SHA-256 digest of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `type:"string"`  // Returns the ETag of the new object. The ETag reflects only changes to the   // contents of an object, not its metadata. ETag * string `type:"string"`  // Creation date of the object.  LastModified * time . Time `type:"timestamp"` // contains filtered or unexported fields }
Container for all response elements.

func (CopyObjectResult) GoString    added in  v0.6.5

func (s CopyObjectResult ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CopyObjectResult) SetChecksumCRC32    added in  v1.43.6

func (s * CopyObjectResult ) SetChecksumCRC32(v string ) * CopyObjectResult
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*CopyObjectResult) SetChecksumCRC32C    added in  v1.43.6

func (s * CopyObjectResult ) SetChecksumCRC32C(v string ) * CopyObjectResult
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*CopyObjectResult) SetChecksumSHA1    added in  v1.43.6

func (s * CopyObjectResult ) SetChecksumSHA1(v string ) * CopyObjectResult
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*CopyObjectResult) SetChecksumSHA256    added in  v1.43.6

func (s * CopyObjectResult ) SetChecksumSHA256(v string ) * CopyObjectResult
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*CopyObjectResult) SetETag    added in  v1.5.0

func (s * CopyObjectResult ) SetETag(v string ) * CopyObjectResult
SetETag sets the ETag field's value.

func (*CopyObjectResult) SetLastModified    added in  v1.5.0

func (s * CopyObjectResult ) SetLastModified(v time . Time ) * CopyObjectResult
SetLastModified sets the LastModified field's value.

func (CopyObjectResult) String    added in  v0.6.5

func (s CopyObjectResult ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CopyPartResult
type CopyPartResult struct {  // The base64-encoded, 32-bit CRC32 checksum of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `type:"string"`  // The base64-encoded, 256-bit SHA-256 digest of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `type:"string"`  // Entity tag of the object.  ETag * string `type:"string"`  // Date and time at which the object was uploaded.  LastModified * time . Time `type:"timestamp"` // contains filtered or unexported fields }
Container for all response elements.

func (CopyPartResult) GoString    added in  v0.6.5

func (s CopyPartResult ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CopyPartResult) SetChecksumCRC32    added in  v1.43.6

func (s * CopyPartResult ) SetChecksumCRC32(v string ) * CopyPartResult
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*CopyPartResult) SetChecksumCRC32C    added in  v1.43.6

func (s * CopyPartResult ) SetChecksumCRC32C(v string ) * CopyPartResult
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*CopyPartResult) SetChecksumSHA1    added in  v1.43.6

func (s * CopyPartResult ) SetChecksumSHA1(v string ) * CopyPartResult
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*CopyPartResult) SetChecksumSHA256    added in  v1.43.6

func (s * CopyPartResult ) SetChecksumSHA256(v string ) * CopyPartResult
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*CopyPartResult) SetETag    added in  v1.5.0

func (s * CopyPartResult ) SetETag(v string ) * CopyPartResult
SetETag sets the ETag field's value.

func (*CopyPartResult) SetLastModified    added in  v1.5.0

func (s * CopyPartResult ) SetLastModified(v time . Time ) * CopyPartResult
SetLastModified sets the LastModified field's value.

func (CopyPartResult) String    added in  v0.6.5

func (s CopyPartResult ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CreateBucketConfiguration
type CreateBucketConfiguration struct {  // Specifies the Region where the bucket will be created. If you don't specify   // a Region, the bucket is created in the US East (N. Virginia) Region (us-east-1). LocationConstraint * string `type:"string" enum:"BucketLocationConstraint"` // contains filtered or unexported fields }
The configuration information for the bucket.

func (CreateBucketConfiguration) GoString    added in  v0.6.5

func (s CreateBucketConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CreateBucketConfiguration) SetLocationConstraint    added in  v1.5.0

func (s * CreateBucketConfiguration ) SetLocationConstraint(v string ) * CreateBucketConfiguration
SetLocationConstraint sets the LocationConstraint field's value.

func (CreateBucketConfiguration) String    added in  v0.6.5

func (s CreateBucketConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CreateBucketInput
type CreateBucketInput struct {  // The canned ACL to apply to the bucket.  ACL * string `location:"header" locationName:"x-amz-acl" type:"string" enum:"BucketCannedACL"`  // The name of the bucket to create.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The configuration information for the bucket.  CreateBucketConfiguration * CreateBucketConfiguration `locationName:"CreateBucketConfiguration" type:"structure" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // Allows grantee the read, write, read ACP, and write ACP permissions on the   // bucket. GrantFullControl * string `location:"header" locationName:"x-amz-grant-full-control" type:"string"`  // Allows grantee to list the objects in the bucket.  GrantRead * string `location:"header" locationName:"x-amz-grant-read" type:"string"`  // Allows grantee to read the bucket ACL.  GrantReadACP * string `location:"header" locationName:"x-amz-grant-read-acp" type:"string"`  // Allows grantee to create new objects in the bucket.   //  // For the bucket and object owners of existing objects, also allows deletions  // and overwrites of those objects. GrantWrite * string `location:"header" locationName:"x-amz-grant-write" type:"string"`  // Allows grantee to write the ACL for the applicable bucket.  GrantWriteACP * string `location:"header" locationName:"x-amz-grant-write-acp" type:"string"`  // Specifies whether you want S3 Object Lock to be enabled for the new bucket.  ObjectLockEnabledForBucket * bool `location:"header" locationName:"x-amz-bucket-object-lock-enabled" type:"boolean"`  // The container element for object ownership for a bucket's ownership controls.   //  // BucketOwnerPreferred - Objects uploaded to the bucket change ownership to  // the bucket owner if the objects are uploaded with the bucket-owner-full-control  // canned ACL.  //  // ObjectWriter - The uploading account will own the object if the object is  // uploaded with the bucket-owner-full-control canned ACL.  //  // BucketOwnerEnforced - Access control lists (ACLs) are disabled and no longer  // affect permissions. The bucket owner automatically owns and has full control  // over every object in the bucket. The bucket only accepts PUT requests that  // don't specify an ACL or bucket owner full control ACLs, such as the bucket-owner-full-control  // canned ACL or an equivalent form of this ACL expressed in the XML format. ObjectOwnership * string `location:"header" locationName:"x-amz-object-ownership" type:"string" enum:"ObjectOwnership"` // contains filtered or unexported fields }

func (CreateBucketInput) GoString    added in  v0.6.5

func (s CreateBucketInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CreateBucketInput) SetACL    added in  v1.5.0

func (s * CreateBucketInput ) SetACL(v string ) * CreateBucketInput
SetACL sets the ACL field's value.

func (*CreateBucketInput) SetBucket    added in  v1.5.0

func (s * CreateBucketInput ) SetBucket(v string ) * CreateBucketInput
SetBucket sets the Bucket field's value.

func (*CreateBucketInput) SetCreateBucketConfiguration    added in  v1.5.0

func (s * CreateBucketInput ) SetCreateBucketConfiguration(v * CreateBucketConfiguration ) * CreateBucketInput
SetCreateBucketConfiguration sets the CreateBucketConfiguration field's value.

func (*CreateBucketInput) SetGrantFullControl    added in  v1.5.0

func (s * CreateBucketInput ) SetGrantFullControl(v string ) * CreateBucketInput
SetGrantFullControl sets the GrantFullControl field's value.

func (*CreateBucketInput) SetGrantRead    added in  v1.5.0

func (s * CreateBucketInput ) SetGrantRead(v string ) * CreateBucketInput
SetGrantRead sets the GrantRead field's value.

func (*CreateBucketInput) SetGrantReadACP    added in  v1.5.0

func (s * CreateBucketInput ) SetGrantReadACP(v string ) * CreateBucketInput
SetGrantReadACP sets the GrantReadACP field's value.

func (*CreateBucketInput) SetGrantWrite    added in  v1.5.0

func (s * CreateBucketInput ) SetGrantWrite(v string ) * CreateBucketInput
SetGrantWrite sets the GrantWrite field's value.

func (*CreateBucketInput) SetGrantWriteACP    added in  v1.5.0

func (s * CreateBucketInput ) SetGrantWriteACP(v string ) * CreateBucketInput
SetGrantWriteACP sets the GrantWriteACP field's value.

func (*CreateBucketInput) SetObjectLockEnabledForBucket    added in  v1.15.83

func (s * CreateBucketInput ) SetObjectLockEnabledForBucket(v bool ) * CreateBucketInput
SetObjectLockEnabledForBucket sets the ObjectLockEnabledForBucket field's value.

func (*CreateBucketInput) SetObjectOwnership    added in  v1.42.16

func (s * CreateBucketInput ) SetObjectOwnership(v string ) * CreateBucketInput
SetObjectOwnership sets the ObjectOwnership field's value.

func (CreateBucketInput) String    added in  v0.6.5

func (s CreateBucketInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CreateBucketInput) Validate    added in  v1.1.21

func (s * CreateBucketInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type CreateBucketOutput
type CreateBucketOutput struct {  // A forward slash followed by the name of the bucket.  Location * string `location:"header" locationName:"Location" type:"string"` // contains filtered or unexported fields }

func (CreateBucketOutput) GoString    added in  v0.6.5

func (s CreateBucketOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CreateBucketOutput) SetLocation    added in  v1.5.0

func (s * CreateBucketOutput ) SetLocation(v string ) * CreateBucketOutput
SetLocation sets the Location field's value.

func (CreateBucketOutput) String    added in  v0.6.5

func (s CreateBucketOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type CreateMultipartUploadInput
type CreateMultipartUploadInput struct {  // The canned ACL to apply to the object.   //  // This action is not supported by Amazon S3 on Outposts. ACL * string `location:"header" locationName:"x-amz-acl" type:"string" enum:"ObjectCannedACL"`  // The name of the bucket to which to initiate the upload   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption   // with server-side encryption using Key Management Service (KMS) keys (SSE-KMS).  // Setting this header to true causes Amazon S3 to use an S3 Bucket Key for  // object encryption with SSE-KMS.  //  // Specifying this header with an object action doesn’t affect bucket-level  // settings for S3 Bucket Key. BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // Specifies caching behavior along the request/reply chain.  CacheControl * string `location:"header" locationName:"Cache-Control" type:"string"`  // Indicates the algorithm you want Amazon S3 to use to create the checksum   // for the object. For more information, see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // Specifies presentational information for the object.  ContentDisposition * string `location:"header" locationName:"Content-Disposition" type:"string"`  // Specifies what content encodings have been applied to the object and thus   // what decoding mechanisms must be applied to obtain the media-type referenced  // by the Content-Type header field. ContentEncoding * string `location:"header" locationName:"Content-Encoding" type:"string"`  // The language the content is in.  ContentLanguage * string `location:"header" locationName:"Content-Language" type:"string"`  // A standard MIME type describing the format of the object data.  ContentType * string `location:"header" locationName:"Content-Type" type:"string"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The date and time at which the object is no longer cacheable.  Expires * time . Time `location:"header" locationName:"Expires" type:"timestamp"`  // Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.   //  // This action is not supported by Amazon S3 on Outposts. GrantFullControl * string `location:"header" locationName:"x-amz-grant-full-control" type:"string"`  // Allows grantee to read the object data and its metadata.   //  // This action is not supported by Amazon S3 on Outposts. GrantRead * string `location:"header" locationName:"x-amz-grant-read" type:"string"`  // Allows grantee to read the object ACL.   //  // This action is not supported by Amazon S3 on Outposts. GrantReadACP * string `location:"header" locationName:"x-amz-grant-read-acp" type:"string"`  // Allows grantee to write the ACL for the applicable object.   //  // This action is not supported by Amazon S3 on Outposts. GrantWriteACP * string `location:"header" locationName:"x-amz-grant-write-acp" type:"string"`  // Object key for which the multipart upload is to be initiated.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // A map of metadata to store with the object in S3.  Metadata map[ string ]* string `location:"headers" locationName:"x-amz-meta-" type:"map"`  // Specifies whether you want to apply a legal hold to the uploaded object.  ObjectLockLegalHoldStatus * string `location:"header" locationName:"x-amz-object-lock-legal-hold" type:"string" enum:"ObjectLockLegalHoldStatus"`  // Specifies the Object Lock mode that you want to apply to the uploaded object.  ObjectLockMode * string `location:"header" locationName:"x-amz-object-lock-mode" type:"string" enum:"ObjectLockMode"`  // Specifies the date and time when you want the Object Lock to expire.  ObjectLockRetainUntilDate * time . Time `location:"header" locationName:"x-amz-object-lock-retain-until-date" type:"timestamp" timestampFormat:"iso8601"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Specifies the algorithm to use to when encrypting the object (for example,   // AES256). SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // Specifies the customer-provided encryption key for Amazon S3 to use in encrypting   // data. This value is used to store the object and then it is discarded; Amazon  // S3 does not store the encryption key. The key must be appropriate for use  // with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm  // header.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CreateMultipartUploadInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321 .   // Amazon S3 uses this header for a message integrity check to ensure that the  // encryption key was transmitted without error. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // Specifies the Amazon Web Services KMS Encryption Context to use for object   // encryption. The value of this header is a base64-encoded UTF-8 string holding  // JSON with the encryption context key-value pairs.  //  // SSEKMSEncryptionContext is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CreateMultipartUploadInput's  // String and GoString methods. SSEKMSEncryptionContext * string `location:"header" locationName:"x-amz-server-side-encryption-context" type:"string" sensitive:"true"`  // Specifies the ID (Key ID, Key ARN, or Key Alias) of the symmetric encryption   // customer managed key to use for object encryption. All GET and PUT requests  // for an object protected by KMS will fail if they're not made via SSL or using  // SigV4. For information about configuring any of the officially supported  // Amazon Web Services SDKs and Amazon Web Services CLI, see Specifying the  // Signature Version in Request Authentication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version )  // in the Amazon S3 User Guide.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CreateMultipartUploadInput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"`  // By default, Amazon S3 uses the STANDARD Storage Class to store newly created   // objects. The STANDARD storage class provides high durability and high availability.  // Depending on performance needs, you can specify a different Storage Class.  // Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information,  // see Storage Classes ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html )  // in the Amazon S3 User Guide. StorageClass * string `location:"header" locationName:"x-amz-storage-class" type:"string" enum:"StorageClass"`  // The tag-set for the object. The tag-set must be encoded as URL Query parameters.  Tagging * string `location:"header" locationName:"x-amz-tagging" type:"string"`  // If the bucket is configured as a website, redirects requests for this object   // to another object in the same bucket or to an external URL. Amazon S3 stores  // the value of this header in the object metadata. WebsiteRedirectLocation * string `location:"header" locationName:"x-amz-website-redirect-location" type:"string"` // contains filtered or unexported fields }

func (CreateMultipartUploadInput) GoString    added in  v0.6.5

func (s CreateMultipartUploadInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CreateMultipartUploadInput) SetACL    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetACL(v string ) * CreateMultipartUploadInput
SetACL sets the ACL field's value.

func (*CreateMultipartUploadInput) SetBucket    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetBucket(v string ) * CreateMultipartUploadInput
SetBucket sets the Bucket field's value.

func (*CreateMultipartUploadInput) SetBucketKeyEnabled    added in  v1.35.37

func (s * CreateMultipartUploadInput ) SetBucketKeyEnabled(v bool ) * CreateMultipartUploadInput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*CreateMultipartUploadInput) SetCacheControl    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetCacheControl(v string ) * CreateMultipartUploadInput
SetCacheControl sets the CacheControl field's value.

func (*CreateMultipartUploadInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * CreateMultipartUploadInput ) SetChecksumAlgorithm(v string ) * CreateMultipartUploadInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*CreateMultipartUploadInput) SetContentDisposition    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetContentDisposition(v string ) * CreateMultipartUploadInput
SetContentDisposition sets the ContentDisposition field's value.

func (*CreateMultipartUploadInput) SetContentEncoding    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetContentEncoding(v string ) * CreateMultipartUploadInput
SetContentEncoding sets the ContentEncoding field's value.

func (*CreateMultipartUploadInput) SetContentLanguage    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetContentLanguage(v string ) * CreateMultipartUploadInput
SetContentLanguage sets the ContentLanguage field's value.

func (*CreateMultipartUploadInput) SetContentType    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetContentType(v string ) * CreateMultipartUploadInput
SetContentType sets the ContentType field's value.

func (*CreateMultipartUploadInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * CreateMultipartUploadInput ) SetExpectedBucketOwner(v string ) * CreateMultipartUploadInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*CreateMultipartUploadInput) SetExpires    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetExpires(v time . Time ) * CreateMultipartUploadInput
SetExpires sets the Expires field's value.

func (*CreateMultipartUploadInput) SetGrantFullControl    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetGrantFullControl(v string ) * CreateMultipartUploadInput
SetGrantFullControl sets the GrantFullControl field's value.

func (*CreateMultipartUploadInput) SetGrantRead    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetGrantRead(v string ) * CreateMultipartUploadInput
SetGrantRead sets the GrantRead field's value.

func (*CreateMultipartUploadInput) SetGrantReadACP    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetGrantReadACP(v string ) * CreateMultipartUploadInput
SetGrantReadACP sets the GrantReadACP field's value.

func (*CreateMultipartUploadInput) SetGrantWriteACP    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetGrantWriteACP(v string ) * CreateMultipartUploadInput
SetGrantWriteACP sets the GrantWriteACP field's value.

func (*CreateMultipartUploadInput) SetKey    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetKey(v string ) * CreateMultipartUploadInput
SetKey sets the Key field's value.

func (*CreateMultipartUploadInput) SetMetadata    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetMetadata(v map[ string ]* string ) * CreateMultipartUploadInput
SetMetadata sets the Metadata field's value.

func (*CreateMultipartUploadInput) SetObjectLockLegalHoldStatus    added in  v1.15.83

func (s * CreateMultipartUploadInput ) SetObjectLockLegalHoldStatus(v string ) * CreateMultipartUploadInput
SetObjectLockLegalHoldStatus sets the ObjectLockLegalHoldStatus field's value.

func (*CreateMultipartUploadInput) SetObjectLockMode    added in  v1.15.83

func (s * CreateMultipartUploadInput ) SetObjectLockMode(v string ) * CreateMultipartUploadInput
SetObjectLockMode sets the ObjectLockMode field's value.

func (*CreateMultipartUploadInput) SetObjectLockRetainUntilDate    added in  v1.15.83

func (s * CreateMultipartUploadInput ) SetObjectLockRetainUntilDate(v time . Time ) * CreateMultipartUploadInput
SetObjectLockRetainUntilDate sets the ObjectLockRetainUntilDate field's value.

func (*CreateMultipartUploadInput) SetRequestPayer    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetRequestPayer(v string ) * CreateMultipartUploadInput
SetRequestPayer sets the RequestPayer field's value.

func (*CreateMultipartUploadInput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetSSECustomerAlgorithm(v string ) * CreateMultipartUploadInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*CreateMultipartUploadInput) SetSSECustomerKey    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetSSECustomerKey(v string ) * CreateMultipartUploadInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*CreateMultipartUploadInput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetSSECustomerKeyMD5(v string ) * CreateMultipartUploadInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*CreateMultipartUploadInput) SetSSEKMSEncryptionContext    added in  v1.20.15

func (s * CreateMultipartUploadInput ) SetSSEKMSEncryptionContext(v string ) * CreateMultipartUploadInput
SetSSEKMSEncryptionContext sets the SSEKMSEncryptionContext field's value.

func (*CreateMultipartUploadInput) SetSSEKMSKeyId    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetSSEKMSKeyId(v string ) * CreateMultipartUploadInput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*CreateMultipartUploadInput) SetServerSideEncryption    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetServerSideEncryption(v string ) * CreateMultipartUploadInput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (*CreateMultipartUploadInput) SetStorageClass    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetStorageClass(v string ) * CreateMultipartUploadInput
SetStorageClass sets the StorageClass field's value.

func (*CreateMultipartUploadInput) SetTagging    added in  v1.10.6

func (s * CreateMultipartUploadInput ) SetTagging(v string ) * CreateMultipartUploadInput
SetTagging sets the Tagging field's value.

func (*CreateMultipartUploadInput) SetWebsiteRedirectLocation    added in  v1.5.0

func (s * CreateMultipartUploadInput ) SetWebsiteRedirectLocation(v string ) * CreateMultipartUploadInput
SetWebsiteRedirectLocation sets the WebsiteRedirectLocation field's value.

func (CreateMultipartUploadInput) String    added in  v0.6.5

func (s CreateMultipartUploadInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CreateMultipartUploadInput) Validate    added in  v1.1.21

func (s * CreateMultipartUploadInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type CreateMultipartUploadOutput
type CreateMultipartUploadOutput struct {  // If the bucket has a lifecycle rule configured with an action to abort incomplete   // multipart uploads and the prefix in the lifecycle rule matches the object  // name in the request, the response includes this header. The header indicates  // when the initiated multipart upload becomes eligible for an abort operation.  // For more information, see Aborting Incomplete Multipart Uploads Using a Bucket  // Lifecycle Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config ).  //  // The response also includes the x-amz-abort-rule-id header that provides the  // ID of the lifecycle configuration rule that defines this action. AbortDate * time . Time `location:"header" locationName:"x-amz-abort-date" type:"timestamp"`  // This header is returned along with the x-amz-abort-date header. It identifies   // the applicable lifecycle configuration rule that defines the action to abort  // incomplete multipart uploads. AbortRuleId * string `location:"header" locationName:"x-amz-abort-rule-id" type:"string"`  // The name of the bucket to which the multipart upload was initiated. Does   // not return the access point ARN or access point alias if used.  //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide. Bucket * string `locationName:"Bucket" type:"string"`  // Indicates whether the multipart upload uses an S3 Bucket Key for server-side   // encryption with Key Management Service (KMS) keys (SSE-KMS). BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // The algorithm that was used to create a checksum of the object.  ChecksumAlgorithm * string `location:"header" locationName:"x-amz-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // Object key for which the multipart upload was initiated.  Key * string `min:"1" type:"string"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header confirming the encryption algorithm  // used. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header to provide round-trip message integrity  // verification of the customer-provided encryption key. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // If present, specifies the Amazon Web Services KMS Encryption Context to use   // for object encryption. The value of this header is a base64-encoded UTF-8  // string holding JSON with the encryption context key-value pairs.  //  // SSEKMSEncryptionContext is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CreateMultipartUploadOutput's  // String and GoString methods. SSEKMSEncryptionContext * string `location:"header" locationName:"x-amz-server-side-encryption-context" type:"string" sensitive:"true"`  // If present, specifies the ID of the Key Management Service (KMS) symmetric   // encryption customer managed key that was used for the object.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by CreateMultipartUploadOutput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"`  // ID for the initiated multipart upload.  UploadId * string `type:"string"` // contains filtered or unexported fields }

func (CreateMultipartUploadOutput) GoString    added in  v0.6.5

func (s CreateMultipartUploadOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*CreateMultipartUploadOutput) SetAbortDate    added in  v1.5.0

func (s * CreateMultipartUploadOutput ) SetAbortDate(v time . Time ) * CreateMultipartUploadOutput
SetAbortDate sets the AbortDate field's value.

func (*CreateMultipartUploadOutput) SetAbortRuleId    added in  v1.5.0

func (s * CreateMultipartUploadOutput ) SetAbortRuleId(v string ) * CreateMultipartUploadOutput
SetAbortRuleId sets the AbortRuleId field's value.

func (*CreateMultipartUploadOutput) SetBucket    added in  v1.5.0

func (s * CreateMultipartUploadOutput ) SetBucket(v string ) * CreateMultipartUploadOutput
SetBucket sets the Bucket field's value.

func (*CreateMultipartUploadOutput) SetBucketKeyEnabled    added in  v1.35.37

func (s * CreateMultipartUploadOutput ) SetBucketKeyEnabled(v bool ) * CreateMultipartUploadOutput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*CreateMultipartUploadOutput) SetChecksumAlgorithm    added in  v1.43.6

func (s * CreateMultipartUploadOutput ) SetChecksumAlgorithm(v string ) * CreateMultipartUploadOutput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*CreateMultipartUploadOutput) SetKey    added in  v1.5.0

func (s * CreateMultipartUploadOutput ) SetKey(v string ) * CreateMultipartUploadOutput
SetKey sets the Key field's value.

func (*CreateMultipartUploadOutput) SetRequestCharged    added in  v1.5.0

func (s * CreateMultipartUploadOutput ) SetRequestCharged(v string ) * CreateMultipartUploadOutput
SetRequestCharged sets the RequestCharged field's value.

func (*CreateMultipartUploadOutput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * CreateMultipartUploadOutput ) SetSSECustomerAlgorithm(v string ) * CreateMultipartUploadOutput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*CreateMultipartUploadOutput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * CreateMultipartUploadOutput ) SetSSECustomerKeyMD5(v string ) * CreateMultipartUploadOutput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*CreateMultipartUploadOutput) SetSSEKMSEncryptionContext    added in  v1.20.15

func (s * CreateMultipartUploadOutput ) SetSSEKMSEncryptionContext(v string ) * CreateMultipartUploadOutput
SetSSEKMSEncryptionContext sets the SSEKMSEncryptionContext field's value.

func (*CreateMultipartUploadOutput) SetSSEKMSKeyId    added in  v1.5.0

func (s * CreateMultipartUploadOutput ) SetSSEKMSKeyId(v string ) * CreateMultipartUploadOutput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*CreateMultipartUploadOutput) SetServerSideEncryption    added in  v1.5.0

func (s * CreateMultipartUploadOutput ) SetServerSideEncryption(v string ) * CreateMultipartUploadOutput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (*CreateMultipartUploadOutput) SetUploadId    added in  v1.5.0

func (s * CreateMultipartUploadOutput ) SetUploadId(v string ) * CreateMultipartUploadOutput
SetUploadId sets the UploadId field's value.

func (CreateMultipartUploadOutput) String    added in  v0.6.5

func (s CreateMultipartUploadOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DefaultRetention    added in  v1.15.83
type DefaultRetention struct {  // The number of days that you want to specify for the default retention period.   // Must be used with Mode. Days * int64 `type:"integer"`  // The default Object Lock retention mode you want to apply to new objects placed   // in the specified bucket. Must be used with either Days or Years. Mode * string `type:"string" enum:"ObjectLockRetentionMode"`  // The number of years that you want to specify for the default retention period.   // Must be used with Mode. Years * int64 `type:"integer"` // contains filtered or unexported fields }
The container element for specifying the default Object Lock retention settings
for new objects placed in the specified bucket.
The DefaultRetention settings require both a mode and a period.
The DefaultRetention period can be either Days or Years but you must
select one. You cannot specify Days and Years at the same time.

func (DefaultRetention) GoString    added in  v1.15.83

func (s DefaultRetention ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DefaultRetention) SetDays    added in  v1.15.83

func (s * DefaultRetention ) SetDays(v int64 ) * DefaultRetention
SetDays sets the Days field's value.

func (*DefaultRetention) SetMode    added in  v1.15.83

func (s * DefaultRetention ) SetMode(v string ) * DefaultRetention
SetMode sets the Mode field's value.

func (*DefaultRetention) SetYears    added in  v1.15.83

func (s * DefaultRetention ) SetYears(v int64 ) * DefaultRetention
SetYears sets the Years field's value.

func (DefaultRetention) String    added in  v1.15.83

func (s DefaultRetention ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Delete
type Delete struct {  // The object to delete.   //  // Objects is a required field Objects []* ObjectIdentifier `locationName:"Object" type:"list" flattened:"true" required:"true"`  // Element to enable quiet mode for the request. When you add this element,   // you must set its value to true. Quiet * bool `type:"boolean"` // contains filtered or unexported fields }
Container for the objects to delete.

func (Delete) GoString    added in  v0.6.5

func (s Delete ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Delete) SetObjects    added in  v1.5.0

func (s * Delete ) SetObjects(v []* ObjectIdentifier ) * Delete
SetObjects sets the Objects field's value.

func (*Delete) SetQuiet    added in  v1.5.0

func (s * Delete ) SetQuiet(v bool ) * Delete
SetQuiet sets the Quiet field's value.

func (Delete) String    added in  v0.6.5

func (s Delete ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Delete) Validate    added in  v1.1.21

func (s * Delete ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketAnalyticsConfigurationInput    added in  v1.5.11
type DeleteBucketAnalyticsConfigurationInput struct {  // The name of the bucket from which an analytics configuration is deleted.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The ID that identifies the analytics configuration.   //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"` // contains filtered or unexported fields }

func (DeleteBucketAnalyticsConfigurationInput) GoString    added in  v1.5.11

func (s DeleteBucketAnalyticsConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketAnalyticsConfigurationInput) SetBucket    added in  v1.5.11

func (s * DeleteBucketAnalyticsConfigurationInput ) SetBucket(v string ) * DeleteBucketAnalyticsConfigurationInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketAnalyticsConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketAnalyticsConfigurationInput ) SetExpectedBucketOwner(v string ) * DeleteBucketAnalyticsConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*DeleteBucketAnalyticsConfigurationInput) SetId    added in  v1.5.11

func (s * DeleteBucketAnalyticsConfigurationInput ) SetId(v string ) * DeleteBucketAnalyticsConfigurationInput
SetId sets the Id field's value.

func (DeleteBucketAnalyticsConfigurationInput) String    added in  v1.5.11

func (s DeleteBucketAnalyticsConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketAnalyticsConfigurationInput) Validate    added in  v1.5.11

func (s * DeleteBucketAnalyticsConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketAnalyticsConfigurationOutput    added in  v1.5.11
type DeleteBucketAnalyticsConfigurationOutput struct { // contains filtered or unexported fields }

func (DeleteBucketAnalyticsConfigurationOutput) GoString    added in  v1.5.11

func (s DeleteBucketAnalyticsConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketAnalyticsConfigurationOutput) String    added in  v1.5.11

func (s DeleteBucketAnalyticsConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketCorsInput    added in  v0.9.5
type DeleteBucketCorsInput struct {  // Specifies the bucket whose cors configuration is being deleted.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (DeleteBucketCorsInput) GoString    added in  v0.9.5

func (s DeleteBucketCorsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketCorsInput) SetBucket    added in  v1.5.0

func (s * DeleteBucketCorsInput ) SetBucket(v string ) * DeleteBucketCorsInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketCorsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketCorsInput ) SetExpectedBucketOwner(v string ) * DeleteBucketCorsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (DeleteBucketCorsInput) String    added in  v0.9.5

func (s DeleteBucketCorsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketCorsInput) Validate    added in  v1.1.21

func (s * DeleteBucketCorsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketCorsOutput    added in  v0.9.5
type DeleteBucketCorsOutput struct { // contains filtered or unexported fields }

func (DeleteBucketCorsOutput) GoString    added in  v0.9.5

func (s DeleteBucketCorsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketCorsOutput) String    added in  v0.9.5

func (s DeleteBucketCorsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketEncryptionInput    added in  v1.12.24
type DeleteBucketEncryptionInput struct {  // The name of the bucket containing the server-side encryption configuration   // to delete.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (DeleteBucketEncryptionInput) GoString    added in  v1.12.24

func (s DeleteBucketEncryptionInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketEncryptionInput) SetBucket    added in  v1.12.24

func (s * DeleteBucketEncryptionInput ) SetBucket(v string ) * DeleteBucketEncryptionInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketEncryptionInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketEncryptionInput ) SetExpectedBucketOwner(v string ) * DeleteBucketEncryptionInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (DeleteBucketEncryptionInput) String    added in  v1.12.24

func (s DeleteBucketEncryptionInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketEncryptionInput) Validate    added in  v1.12.24

func (s * DeleteBucketEncryptionInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketEncryptionOutput    added in  v1.12.24
type DeleteBucketEncryptionOutput struct { // contains filtered or unexported fields }

func (DeleteBucketEncryptionOutput) GoString    added in  v1.12.24

func (s DeleteBucketEncryptionOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketEncryptionOutput) String    added in  v1.12.24

func (s DeleteBucketEncryptionOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketInput
type DeleteBucketInput struct {  // Specifies the bucket being deleted.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (DeleteBucketInput) GoString    added in  v0.6.5

func (s DeleteBucketInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketInput) SetBucket    added in  v1.5.0

func (s * DeleteBucketInput ) SetBucket(v string ) * DeleteBucketInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketInput ) SetExpectedBucketOwner(v string ) * DeleteBucketInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (DeleteBucketInput) String    added in  v0.6.5

func (s DeleteBucketInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketInput) Validate    added in  v1.1.21

func (s * DeleteBucketInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketIntelligentTieringConfigurationInput    added in  v1.35.24
type DeleteBucketIntelligentTieringConfigurationInput struct {  // The name of the Amazon S3 bucket whose configuration you want to modify or   // retrieve.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The ID used to identify the S3 Intelligent-Tiering configuration.   //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"` // contains filtered or unexported fields }

func (DeleteBucketIntelligentTieringConfigurationInput) GoString    added in  v1.35.24

func (s DeleteBucketIntelligentTieringConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketIntelligentTieringConfigurationInput) SetBucket    added in  v1.35.24

func (s * DeleteBucketIntelligentTieringConfigurationInput ) SetBucket(v string ) * DeleteBucketIntelligentTieringConfigurationInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketIntelligentTieringConfigurationInput) SetId    added in  v1.35.24

func (s * DeleteBucketIntelligentTieringConfigurationInput ) SetId(v string ) * DeleteBucketIntelligentTieringConfigurationInput
SetId sets the Id field's value.

func (DeleteBucketIntelligentTieringConfigurationInput) String    added in  v1.35.24

func (s DeleteBucketIntelligentTieringConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketIntelligentTieringConfigurationInput) Validate    added in  v1.35.24

func (s * DeleteBucketIntelligentTieringConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketIntelligentTieringConfigurationOutput    added in  v1.35.24
type DeleteBucketIntelligentTieringConfigurationOutput struct { // contains filtered or unexported fields }

func (DeleteBucketIntelligentTieringConfigurationOutput) GoString    added in  v1.35.24

func (s DeleteBucketIntelligentTieringConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketIntelligentTieringConfigurationOutput) String    added in  v1.35.24

func (s DeleteBucketIntelligentTieringConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketInventoryConfigurationInput    added in  v1.5.11
type DeleteBucketInventoryConfigurationInput struct {  // The name of the bucket containing the inventory configuration to delete.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The ID used to identify the inventory configuration.   //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"` // contains filtered or unexported fields }

func (DeleteBucketInventoryConfigurationInput) GoString    added in  v1.5.11

func (s DeleteBucketInventoryConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketInventoryConfigurationInput) SetBucket    added in  v1.5.11

func (s * DeleteBucketInventoryConfigurationInput ) SetBucket(v string ) * DeleteBucketInventoryConfigurationInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketInventoryConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketInventoryConfigurationInput ) SetExpectedBucketOwner(v string ) * DeleteBucketInventoryConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*DeleteBucketInventoryConfigurationInput) SetId    added in  v1.5.11

func (s * DeleteBucketInventoryConfigurationInput ) SetId(v string ) * DeleteBucketInventoryConfigurationInput
SetId sets the Id field's value.

func (DeleteBucketInventoryConfigurationInput) String    added in  v1.5.11

func (s DeleteBucketInventoryConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketInventoryConfigurationInput) Validate    added in  v1.5.11

func (s * DeleteBucketInventoryConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketInventoryConfigurationOutput    added in  v1.5.11
type DeleteBucketInventoryConfigurationOutput struct { // contains filtered or unexported fields }

func (DeleteBucketInventoryConfigurationOutput) GoString    added in  v1.5.11

func (s DeleteBucketInventoryConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketInventoryConfigurationOutput) String    added in  v1.5.11

func (s DeleteBucketInventoryConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketLifecycleInput
type DeleteBucketLifecycleInput struct {  // The bucket name of the lifecycle to delete.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (DeleteBucketLifecycleInput) GoString    added in  v0.6.5

func (s DeleteBucketLifecycleInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketLifecycleInput) SetBucket    added in  v1.5.0

func (s * DeleteBucketLifecycleInput ) SetBucket(v string ) * DeleteBucketLifecycleInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketLifecycleInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketLifecycleInput ) SetExpectedBucketOwner(v string ) * DeleteBucketLifecycleInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (DeleteBucketLifecycleInput) String    added in  v0.6.5

func (s DeleteBucketLifecycleInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketLifecycleInput) Validate    added in  v1.1.21

func (s * DeleteBucketLifecycleInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketLifecycleOutput
type DeleteBucketLifecycleOutput struct { // contains filtered or unexported fields }

func (DeleteBucketLifecycleOutput) GoString    added in  v0.6.5

func (s DeleteBucketLifecycleOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketLifecycleOutput) String    added in  v0.6.5

func (s DeleteBucketLifecycleOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketMetricsConfigurationInput    added in  v1.5.11
type DeleteBucketMetricsConfigurationInput struct {  // The name of the bucket containing the metrics configuration to delete.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The ID used to identify the metrics configuration. The ID has a 64 character   // limit and can only contain letters, numbers, periods, dashes, and underscores.  //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"` // contains filtered or unexported fields }

func (DeleteBucketMetricsConfigurationInput) GoString    added in  v1.5.11

func (s DeleteBucketMetricsConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketMetricsConfigurationInput) SetBucket    added in  v1.5.11

func (s * DeleteBucketMetricsConfigurationInput ) SetBucket(v string ) * DeleteBucketMetricsConfigurationInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketMetricsConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketMetricsConfigurationInput ) SetExpectedBucketOwner(v string ) * DeleteBucketMetricsConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*DeleteBucketMetricsConfigurationInput) SetId    added in  v1.5.11

func (s * DeleteBucketMetricsConfigurationInput ) SetId(v string ) * DeleteBucketMetricsConfigurationInput
SetId sets the Id field's value.

func (DeleteBucketMetricsConfigurationInput) String    added in  v1.5.11

func (s DeleteBucketMetricsConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketMetricsConfigurationInput) Validate    added in  v1.5.11

func (s * DeleteBucketMetricsConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketMetricsConfigurationOutput    added in  v1.5.11
type DeleteBucketMetricsConfigurationOutput struct { // contains filtered or unexported fields }

func (DeleteBucketMetricsConfigurationOutput) GoString    added in  v1.5.11

func (s DeleteBucketMetricsConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketMetricsConfigurationOutput) String    added in  v1.5.11

func (s DeleteBucketMetricsConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketOutput
type DeleteBucketOutput struct { // contains filtered or unexported fields }

func (DeleteBucketOutput) GoString    added in  v0.6.5

func (s DeleteBucketOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketOutput) String    added in  v0.6.5

func (s DeleteBucketOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketOwnershipControlsInput    added in  v1.35.2
type DeleteBucketOwnershipControlsInput struct {  // The Amazon S3 bucket whose OwnershipControls you want to delete.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (DeleteBucketOwnershipControlsInput) GoString    added in  v1.35.2

func (s DeleteBucketOwnershipControlsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketOwnershipControlsInput) SetBucket    added in  v1.35.2

func (s * DeleteBucketOwnershipControlsInput ) SetBucket(v string ) * DeleteBucketOwnershipControlsInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketOwnershipControlsInput) SetExpectedBucketOwner    added in  v1.35.2

func (s * DeleteBucketOwnershipControlsInput ) SetExpectedBucketOwner(v string ) * DeleteBucketOwnershipControlsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (DeleteBucketOwnershipControlsInput) String    added in  v1.35.2

func (s DeleteBucketOwnershipControlsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketOwnershipControlsInput) Validate    added in  v1.35.2

func (s * DeleteBucketOwnershipControlsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketOwnershipControlsOutput    added in  v1.35.2
type DeleteBucketOwnershipControlsOutput struct { // contains filtered or unexported fields }

func (DeleteBucketOwnershipControlsOutput) GoString    added in  v1.35.2

func (s DeleteBucketOwnershipControlsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketOwnershipControlsOutput) String    added in  v1.35.2

func (s DeleteBucketOwnershipControlsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketPolicyInput
type DeleteBucketPolicyInput struct {  // The bucket name.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (DeleteBucketPolicyInput) GoString    added in  v0.6.5

func (s DeleteBucketPolicyInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketPolicyInput) SetBucket    added in  v1.5.0

func (s * DeleteBucketPolicyInput ) SetBucket(v string ) * DeleteBucketPolicyInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketPolicyInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketPolicyInput ) SetExpectedBucketOwner(v string ) * DeleteBucketPolicyInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (DeleteBucketPolicyInput) String    added in  v0.6.5

func (s DeleteBucketPolicyInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketPolicyInput) Validate    added in  v1.1.21

func (s * DeleteBucketPolicyInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketPolicyOutput
type DeleteBucketPolicyOutput struct { // contains filtered or unexported fields }

func (DeleteBucketPolicyOutput) GoString    added in  v0.6.5

func (s DeleteBucketPolicyOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketPolicyOutput) String    added in  v0.6.5

func (s DeleteBucketPolicyOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketReplicationInput
type DeleteBucketReplicationInput struct {  // The bucket name.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (DeleteBucketReplicationInput) GoString    added in  v0.6.5

func (s DeleteBucketReplicationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketReplicationInput) SetBucket    added in  v1.5.0

func (s * DeleteBucketReplicationInput ) SetBucket(v string ) * DeleteBucketReplicationInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketReplicationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketReplicationInput ) SetExpectedBucketOwner(v string ) * DeleteBucketReplicationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (DeleteBucketReplicationInput) String    added in  v0.6.5

func (s DeleteBucketReplicationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketReplicationInput) Validate    added in  v1.1.21

func (s * DeleteBucketReplicationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketReplicationOutput
type DeleteBucketReplicationOutput struct { // contains filtered or unexported fields }

func (DeleteBucketReplicationOutput) GoString    added in  v0.6.5

func (s DeleteBucketReplicationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketReplicationOutput) String    added in  v0.6.5

func (s DeleteBucketReplicationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketTaggingInput
type DeleteBucketTaggingInput struct {  // The bucket that has the tag set to be removed.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (DeleteBucketTaggingInput) GoString    added in  v0.6.5

func (s DeleteBucketTaggingInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketTaggingInput) SetBucket    added in  v1.5.0

func (s * DeleteBucketTaggingInput ) SetBucket(v string ) * DeleteBucketTaggingInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketTaggingInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketTaggingInput ) SetExpectedBucketOwner(v string ) * DeleteBucketTaggingInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (DeleteBucketTaggingInput) String    added in  v0.6.5

func (s DeleteBucketTaggingInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketTaggingInput) Validate    added in  v1.1.21

func (s * DeleteBucketTaggingInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketTaggingOutput
type DeleteBucketTaggingOutput struct { // contains filtered or unexported fields }

func (DeleteBucketTaggingOutput) GoString    added in  v0.6.5

func (s DeleteBucketTaggingOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketTaggingOutput) String    added in  v0.6.5

func (s DeleteBucketTaggingOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteBucketWebsiteInput
type DeleteBucketWebsiteInput struct {  // The bucket name for which you want to remove the website configuration.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (DeleteBucketWebsiteInput) GoString    added in  v0.6.5

func (s DeleteBucketWebsiteInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketWebsiteInput) SetBucket    added in  v1.5.0

func (s * DeleteBucketWebsiteInput ) SetBucket(v string ) * DeleteBucketWebsiteInput
SetBucket sets the Bucket field's value.

func (*DeleteBucketWebsiteInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteBucketWebsiteInput ) SetExpectedBucketOwner(v string ) * DeleteBucketWebsiteInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (DeleteBucketWebsiteInput) String    added in  v0.6.5

func (s DeleteBucketWebsiteInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteBucketWebsiteInput) Validate    added in  v1.1.21

func (s * DeleteBucketWebsiteInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteBucketWebsiteOutput
type DeleteBucketWebsiteOutput struct { // contains filtered or unexported fields }

func (DeleteBucketWebsiteOutput) GoString    added in  v0.6.5

func (s DeleteBucketWebsiteOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeleteBucketWebsiteOutput) String    added in  v0.6.5

func (s DeleteBucketWebsiteOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteMarkerEntry
type DeleteMarkerEntry struct {  // Specifies whether the object is (true) or is not (false) the latest version   // of an object. IsLatest * bool `type:"boolean"`  // The object key.  Key * string `min:"1" type:"string"`  // Date and time the object was last modified.  LastModified * time . Time `type:"timestamp"`  // The account that created the delete marker.>  Owner * Owner `type:"structure"`  // Version ID of an object.  VersionId * string `type:"string"` // contains filtered or unexported fields }
Information about the delete marker.

func (DeleteMarkerEntry) GoString    added in  v0.6.5

func (s DeleteMarkerEntry ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteMarkerEntry) SetIsLatest    added in  v1.5.0

func (s * DeleteMarkerEntry ) SetIsLatest(v bool ) * DeleteMarkerEntry
SetIsLatest sets the IsLatest field's value.

func (*DeleteMarkerEntry) SetKey    added in  v1.5.0

func (s * DeleteMarkerEntry ) SetKey(v string ) * DeleteMarkerEntry
SetKey sets the Key field's value.

func (*DeleteMarkerEntry) SetLastModified    added in  v1.5.0

func (s * DeleteMarkerEntry ) SetLastModified(v time . Time ) * DeleteMarkerEntry
SetLastModified sets the LastModified field's value.

func (*DeleteMarkerEntry) SetOwner    added in  v1.5.0

func (s * DeleteMarkerEntry ) SetOwner(v * Owner ) * DeleteMarkerEntry
SetOwner sets the Owner field's value.

func (*DeleteMarkerEntry) SetVersionId    added in  v1.5.0

func (s * DeleteMarkerEntry ) SetVersionId(v string ) * DeleteMarkerEntry
SetVersionId sets the VersionId field's value.

func (DeleteMarkerEntry) String    added in  v0.6.5

func (s DeleteMarkerEntry ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteMarkerReplication    added in  v1.15.38
type DeleteMarkerReplication struct {  // Indicates whether to replicate delete markers.   //  // Indicates whether to replicate delete markers. Status * string `type:"string" enum:"DeleteMarkerReplicationStatus"` // contains filtered or unexported fields }
Specifies whether Amazon S3 replicates delete markers. If you specify a Filter
in your replication configuration, you must also include a DeleteMarkerReplication
element. If your Filter includes a Tag element, the DeleteMarkerReplication
Status must be set to Disabled, because Amazon S3 does not support replicating
delete markers for tag-based rules. For an example configuration, see Basic
Rule Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config ).
For more information about delete marker replication, see Basic Rule Configuration
( https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html ).
If you are using an earlier version of the replication configuration, Amazon
S3 handles replication of delete markers differently. For more information,
see Backward Compatibility ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations ).

func (DeleteMarkerReplication) GoString    added in  v1.15.38

func (s DeleteMarkerReplication ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteMarkerReplication) SetStatus    added in  v1.15.38

func (s * DeleteMarkerReplication ) SetStatus(v string ) * DeleteMarkerReplication
SetStatus sets the Status field's value.

func (DeleteMarkerReplication) String    added in  v1.15.38

func (s DeleteMarkerReplication ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteObjectInput
type DeleteObjectInput struct {  // The bucket name of the bucket containing the object.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates whether S3 Object Lock should bypass Governance-mode restrictions   // to process this operation. To use this header, you must have the s3:BypassGovernanceRetention  // permission. BypassGovernanceRetention * bool `location:"header" locationName:"x-amz-bypass-governance-retention" type:"boolean"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Key name of the object to delete.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // The concatenation of the authentication device's serial number, a space,   // and the value that is displayed on your authentication device. Required to  // permanently delete a versioned object if versioning is configured with MFA  // delete enabled. MFA * string `location:"header" locationName:"x-amz-mfa" type:"string"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // VersionId used to reference a specific version of the object.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (DeleteObjectInput) GoString    added in  v0.6.5

func (s DeleteObjectInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteObjectInput) SetBucket    added in  v1.5.0

func (s * DeleteObjectInput ) SetBucket(v string ) * DeleteObjectInput
SetBucket sets the Bucket field's value.

func (*DeleteObjectInput) SetBypassGovernanceRetention    added in  v1.15.83

func (s * DeleteObjectInput ) SetBypassGovernanceRetention(v bool ) * DeleteObjectInput
SetBypassGovernanceRetention sets the BypassGovernanceRetention field's value.

func (*DeleteObjectInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteObjectInput ) SetExpectedBucketOwner(v string ) * DeleteObjectInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*DeleteObjectInput) SetKey    added in  v1.5.0

func (s * DeleteObjectInput ) SetKey(v string ) * DeleteObjectInput
SetKey sets the Key field's value.

func (*DeleteObjectInput) SetMFA    added in  v1.5.0

func (s * DeleteObjectInput ) SetMFA(v string ) * DeleteObjectInput
SetMFA sets the MFA field's value.

func (*DeleteObjectInput) SetRequestPayer    added in  v1.5.0

func (s * DeleteObjectInput ) SetRequestPayer(v string ) * DeleteObjectInput
SetRequestPayer sets the RequestPayer field's value.

func (*DeleteObjectInput) SetVersionId    added in  v1.5.0

func (s * DeleteObjectInput ) SetVersionId(v string ) * DeleteObjectInput
SetVersionId sets the VersionId field's value.

func (DeleteObjectInput) String    added in  v0.6.5

func (s DeleteObjectInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteObjectInput) Validate    added in  v1.1.21

func (s * DeleteObjectInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteObjectOutput
type DeleteObjectOutput struct {  // Indicates whether the specified object version that was permanently deleted   // was (true) or was not (false) a delete marker before deletion. In a simple  // DELETE, this header indicates whether (true) or not (false) the current version  // of the object is a delete marker. DeleteMarker * bool `location:"header" locationName:"x-amz-delete-marker" type:"boolean"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // Returns the version ID of the delete marker created as a result of the DELETE   // operation. VersionId * string `location:"header" locationName:"x-amz-version-id" type:"string"` // contains filtered or unexported fields }

func (DeleteObjectOutput) GoString    added in  v0.6.5

func (s DeleteObjectOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteObjectOutput) SetDeleteMarker    added in  v1.5.0

func (s * DeleteObjectOutput ) SetDeleteMarker(v bool ) * DeleteObjectOutput
SetDeleteMarker sets the DeleteMarker field's value.

func (*DeleteObjectOutput) SetRequestCharged    added in  v1.5.0

func (s * DeleteObjectOutput ) SetRequestCharged(v string ) * DeleteObjectOutput
SetRequestCharged sets the RequestCharged field's value.

func (*DeleteObjectOutput) SetVersionId    added in  v1.5.0

func (s * DeleteObjectOutput ) SetVersionId(v string ) * DeleteObjectOutput
SetVersionId sets the VersionId field's value.

func (DeleteObjectOutput) String    added in  v0.6.5

func (s DeleteObjectOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteObjectTaggingInput    added in  v1.5.11
type DeleteObjectTaggingInput struct {  // The bucket name containing the objects from which to remove the tags.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The key that identifies the object in the bucket from which to remove all   // tags.  //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // The versionId of the object that the tag-set will be removed from.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (DeleteObjectTaggingInput) GoString    added in  v1.5.11

func (s DeleteObjectTaggingInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteObjectTaggingInput) SetBucket    added in  v1.5.11

func (s * DeleteObjectTaggingInput ) SetBucket(v string ) * DeleteObjectTaggingInput
SetBucket sets the Bucket field's value.

func (*DeleteObjectTaggingInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteObjectTaggingInput ) SetExpectedBucketOwner(v string ) * DeleteObjectTaggingInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*DeleteObjectTaggingInput) SetKey    added in  v1.5.11

func (s * DeleteObjectTaggingInput ) SetKey(v string ) * DeleteObjectTaggingInput
SetKey sets the Key field's value.

func (*DeleteObjectTaggingInput) SetVersionId    added in  v1.5.11

func (s * DeleteObjectTaggingInput ) SetVersionId(v string ) * DeleteObjectTaggingInput
SetVersionId sets the VersionId field's value.

func (DeleteObjectTaggingInput) String    added in  v1.5.11

func (s DeleteObjectTaggingInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteObjectTaggingInput) Validate    added in  v1.5.11

func (s * DeleteObjectTaggingInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteObjectTaggingOutput    added in  v1.5.11
type DeleteObjectTaggingOutput struct {  // The versionId of the object the tag-set was removed from.  VersionId * string `location:"header" locationName:"x-amz-version-id" type:"string"` // contains filtered or unexported fields }

func (DeleteObjectTaggingOutput) GoString    added in  v1.5.11

func (s DeleteObjectTaggingOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteObjectTaggingOutput) SetVersionId    added in  v1.5.11

func (s * DeleteObjectTaggingOutput ) SetVersionId(v string ) * DeleteObjectTaggingOutput
SetVersionId sets the VersionId field's value.

func (DeleteObjectTaggingOutput) String    added in  v1.5.11

func (s DeleteObjectTaggingOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeleteObjectsInput
type DeleteObjectsInput struct {  // The bucket name containing the objects to delete.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Specifies whether you want to delete this object even if it has a Governance-type   // Object Lock in place. To use this header, you must have the s3:BypassGovernanceRetention  // permission. BypassGovernanceRetention * bool `location:"header" locationName:"x-amz-bypass-governance-retention" type:"boolean"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // This checksum algorithm must be the same for all parts and it match the checksum  // value supplied in the CreateMultipartUpload request.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // Container for the request.   //  // Delete is a required field Delete * Delete `locationName:"Delete" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The concatenation of the authentication device's serial number, a space,   // and the value that is displayed on your authentication device. Required to  // permanently delete a versioned object if versioning is configured with MFA  // delete enabled. MFA * string `location:"header" locationName:"x-amz-mfa" type:"string"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"` // contains filtered or unexported fields }

func (DeleteObjectsInput) GoString    added in  v0.6.5

func (s DeleteObjectsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteObjectsInput) SetBucket    added in  v1.5.0

func (s * DeleteObjectsInput ) SetBucket(v string ) * DeleteObjectsInput
SetBucket sets the Bucket field's value.

func (*DeleteObjectsInput) SetBypassGovernanceRetention    added in  v1.15.83

func (s * DeleteObjectsInput ) SetBypassGovernanceRetention(v bool ) * DeleteObjectsInput
SetBypassGovernanceRetention sets the BypassGovernanceRetention field's value.

func (*DeleteObjectsInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * DeleteObjectsInput ) SetChecksumAlgorithm(v string ) * DeleteObjectsInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*DeleteObjectsInput) SetDelete    added in  v1.5.0

func (s * DeleteObjectsInput ) SetDelete(v * Delete ) * DeleteObjectsInput
SetDelete sets the Delete field's value.

func (*DeleteObjectsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeleteObjectsInput ) SetExpectedBucketOwner(v string ) * DeleteObjectsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*DeleteObjectsInput) SetMFA    added in  v1.5.0

func (s * DeleteObjectsInput ) SetMFA(v string ) * DeleteObjectsInput
SetMFA sets the MFA field's value.

func (*DeleteObjectsInput) SetRequestPayer    added in  v1.5.0

func (s * DeleteObjectsInput ) SetRequestPayer(v string ) * DeleteObjectsInput
SetRequestPayer sets the RequestPayer field's value.

func (DeleteObjectsInput) String    added in  v0.6.5

func (s DeleteObjectsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteObjectsInput) Validate    added in  v1.1.21

func (s * DeleteObjectsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeleteObjectsOutput
type DeleteObjectsOutput struct {  // Container element for a successful delete. It identifies the object that   // was successfully deleted. Deleted []* DeletedObject `type:"list" flattened:"true"`  // Container for a failed delete action that describes the object that Amazon   // S3 attempted to delete and the error it encountered. Errors []* Error `locationName:"Error" type:"list" flattened:"true"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"` // contains filtered or unexported fields }

func (DeleteObjectsOutput) GoString    added in  v0.6.5

func (s DeleteObjectsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeleteObjectsOutput) SetDeleted    added in  v1.5.0

func (s * DeleteObjectsOutput ) SetDeleted(v []* DeletedObject ) * DeleteObjectsOutput
SetDeleted sets the Deleted field's value.

func (*DeleteObjectsOutput) SetErrors    added in  v1.5.0

func (s * DeleteObjectsOutput ) SetErrors(v []* Error ) * DeleteObjectsOutput
SetErrors sets the Errors field's value.

func (*DeleteObjectsOutput) SetRequestCharged    added in  v1.5.0

func (s * DeleteObjectsOutput ) SetRequestCharged(v string ) * DeleteObjectsOutput
SetRequestCharged sets the RequestCharged field's value.

func (DeleteObjectsOutput) String    added in  v0.6.5

func (s DeleteObjectsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeletePublicAccessBlockInput    added in  v1.15.77
type DeletePublicAccessBlockInput struct {  // The Amazon S3 bucket whose PublicAccessBlock configuration you want to delete.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (DeletePublicAccessBlockInput) GoString    added in  v1.15.77

func (s DeletePublicAccessBlockInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeletePublicAccessBlockInput) SetBucket    added in  v1.15.77

func (s * DeletePublicAccessBlockInput ) SetBucket(v string ) * DeletePublicAccessBlockInput
SetBucket sets the Bucket field's value.

func (*DeletePublicAccessBlockInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * DeletePublicAccessBlockInput ) SetExpectedBucketOwner(v string ) * DeletePublicAccessBlockInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (DeletePublicAccessBlockInput) String    added in  v1.15.77

func (s DeletePublicAccessBlockInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeletePublicAccessBlockInput) Validate    added in  v1.15.77

func (s * DeletePublicAccessBlockInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type DeletePublicAccessBlockOutput    added in  v1.15.77
type DeletePublicAccessBlockOutput struct { // contains filtered or unexported fields }

func (DeletePublicAccessBlockOutput) GoString    added in  v1.15.77

func (s DeletePublicAccessBlockOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (DeletePublicAccessBlockOutput) String    added in  v1.15.77

func (s DeletePublicAccessBlockOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type DeletedObject
type DeletedObject struct {  // Indicates whether the specified object version that was permanently deleted   // was (true) or was not (false) a delete marker before deletion. In a simple  // DELETE, this header indicates whether (true) or not (false) the current version  // of the object is a delete marker. DeleteMarker * bool `type:"boolean"`  // The version ID of the delete marker created as a result of the DELETE operation.   // If you delete a specific object version, the value returned by this header  // is the version ID of the object version deleted. DeleteMarkerVersionId * string `type:"string"`  // The name of the deleted object.  Key * string `min:"1" type:"string"`  // The version ID of the deleted object.  VersionId * string `type:"string"` // contains filtered or unexported fields }
Information about the deleted object.

func (DeletedObject) GoString    added in  v0.6.5

func (s DeletedObject ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*DeletedObject) SetDeleteMarker    added in  v1.5.0

func (s * DeletedObject ) SetDeleteMarker(v bool ) * DeletedObject
SetDeleteMarker sets the DeleteMarker field's value.

func (*DeletedObject) SetDeleteMarkerVersionId    added in  v1.5.0

func (s * DeletedObject ) SetDeleteMarkerVersionId(v string ) * DeletedObject
SetDeleteMarkerVersionId sets the DeleteMarkerVersionId field's value.

func (*DeletedObject) SetKey    added in  v1.5.0

func (s * DeletedObject ) SetKey(v string ) * DeletedObject
SetKey sets the Key field's value.

func (*DeletedObject) SetVersionId    added in  v1.5.0

func (s * DeletedObject ) SetVersionId(v string ) * DeletedObject
SetVersionId sets the VersionId field's value.

func (DeletedObject) String    added in  v0.6.5

func (s DeletedObject ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Destination
type Destination struct {  // Specify this only in a cross-account scenario (where source and destination   // bucket owners are not the same), and you want to change replica ownership  // to the Amazon Web Services account that owns the destination bucket. If this  // is not specified in the replication configuration, the replicas are owned  // by same Amazon Web Services account that owns the source object. AccessControlTranslation * AccessControlTranslation `type:"structure"`  // Destination bucket owner account ID. In a cross-account scenario, if you   // direct Amazon S3 to change replica ownership to the Amazon Web Services account  // that owns the destination bucket by specifying the AccessControlTranslation  // property, this is the account ID of the destination bucket owner. For more  // information, see Replication Additional Configuration: Changing the Replica  // Owner ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-change-owner.html )  // in the Amazon S3 User Guide. Account * string `type:"string"`  // The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to   // store the results.  //  // Bucket is a required field Bucket * string `type:"string" required:"true"`  // A container that provides information about encryption. If SourceSelectionCriteria   // is specified, you must specify this element. EncryptionConfiguration * EncryptionConfiguration `type:"structure"`  // A container specifying replication metrics-related settings enabling replication   // metrics and events. Metrics * Metrics `type:"structure"`  // A container specifying S3 Replication Time Control (S3 RTC), including whether   // S3 RTC is enabled and the time when all objects and operations on objects  // must be replicated. Must be specified together with a Metrics block. ReplicationTime * ReplicationTime `type:"structure"`  // The storage class to use when replicating objects, such as S3 Standard or   // reduced redundancy. By default, Amazon S3 uses the storage class of the source  // object to create the object replica.  //  // For valid values, see the StorageClass element of the PUT Bucket replication  // ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html )  // action in the Amazon S3 API Reference. StorageClass * string `type:"string" enum:"StorageClass"` // contains filtered or unexported fields }
Specifies information about where to publish analysis or configuration results
for an Amazon S3 bucket and S3 Replication Time Control (S3 RTC).

func (Destination) GoString    added in  v0.6.5

func (s Destination ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Destination) SetAccessControlTranslation    added in  v1.12.24

func (s * Destination ) SetAccessControlTranslation(v * AccessControlTranslation ) * Destination
SetAccessControlTranslation sets the AccessControlTranslation field's value.

func (*Destination) SetAccount    added in  v1.12.24

func (s * Destination ) SetAccount(v string ) * Destination
SetAccount sets the Account field's value.

func (*Destination) SetBucket    added in  v1.5.0

func (s * Destination ) SetBucket(v string ) * Destination
SetBucket sets the Bucket field's value.

func (*Destination) SetEncryptionConfiguration    added in  v1.12.24

func (s * Destination ) SetEncryptionConfiguration(v * EncryptionConfiguration ) * Destination
SetEncryptionConfiguration sets the EncryptionConfiguration field's value.

func (*Destination) SetMetrics    added in  v1.25.39

func (s * Destination ) SetMetrics(v * Metrics ) * Destination
SetMetrics sets the Metrics field's value.

func (*Destination) SetReplicationTime    added in  v1.25.39

func (s * Destination ) SetReplicationTime(v * ReplicationTime ) * Destination
SetReplicationTime sets the ReplicationTime field's value.

func (*Destination) SetStorageClass    added in  v1.5.0

func (s * Destination ) SetStorageClass(v string ) * Destination
SetStorageClass sets the StorageClass field's value.

func (Destination) String    added in  v0.6.5

func (s Destination ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Destination) Validate    added in  v1.1.21

func (s * Destination ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type Encryption    added in  v1.12.36
type Encryption struct {  // The server-side encryption algorithm used when storing job results in Amazon   // S3 (for example, AES256, aws:kms).  //  // EncryptionType is a required field EncryptionType * string `type:"string" required:"true" enum:"ServerSideEncryption"`  // If the encryption type is aws:kms, this optional value can be used to specify   // the encryption context for the restore results. KMSContext * string `type:"string"`  // If the encryption type is aws:kms, this optional value specifies the ID of   // the symmetric encryption customer managed key to use for encryption of job  // results. Amazon S3 only supports symmetric encryption KMS keys. For more  // information, see Asymmetric keys in KMS ( https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html )  // in the Amazon Web Services Key Management Service Developer Guide.  //  // KMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by Encryption's  // String and GoString methods. KMSKeyId * string `type:"string" sensitive:"true"` // contains filtered or unexported fields }
Contains the type of server-side encryption used.

func (Encryption) GoString    added in  v1.12.36

func (s Encryption ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Encryption) SetEncryptionType    added in  v1.12.36

func (s * Encryption ) SetEncryptionType(v string ) * Encryption
SetEncryptionType sets the EncryptionType field's value.

func (*Encryption) SetKMSContext    added in  v1.12.36

func (s * Encryption ) SetKMSContext(v string ) * Encryption
SetKMSContext sets the KMSContext field's value.

func (*Encryption) SetKMSKeyId    added in  v1.12.36

func (s * Encryption ) SetKMSKeyId(v string ) * Encryption
SetKMSKeyId sets the KMSKeyId field's value.

func (Encryption) String    added in  v1.12.36

func (s Encryption ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Encryption) Validate    added in  v1.12.36

func (s * Encryption ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type EncryptionConfiguration    added in  v1.12.24
type EncryptionConfiguration struct {  // Specifies the ID (Key ARN or Alias ARN) of the customer managed Amazon Web   // Services KMS key stored in Amazon Web Services Key Management Service (KMS)  // for the destination bucket. Amazon S3 uses this key to encrypt replica objects.  // Amazon S3 only supports symmetric encryption KMS keys. For more information,  // see Asymmetric keys in Amazon Web Services KMS ( https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html )  // in the Amazon Web Services Key Management Service Developer Guide. ReplicaKmsKeyID * string `type:"string"` // contains filtered or unexported fields }
Specifies encryption-related information for an Amazon S3 bucket that is
a destination for replicated objects.

func (EncryptionConfiguration) GoString    added in  v1.12.24

func (s EncryptionConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*EncryptionConfiguration) SetReplicaKmsKeyID    added in  v1.12.24

func (s * EncryptionConfiguration ) SetReplicaKmsKeyID(v string ) * EncryptionConfiguration
SetReplicaKmsKeyID sets the ReplicaKmsKeyID field's value.

func (EncryptionConfiguration) String    added in  v1.12.24

func (s EncryptionConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type EndEvent    added in  v1.14.0
type EndEvent struct { // contains filtered or unexported fields }
A message that indicates the request is complete and no more messages will
be sent. You should not assume that the request is complete until the client
receives an EndEvent.

func (EndEvent) GoString    added in  v1.14.0

func (s EndEvent ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*EndEvent) MarshalEvent    added in  v1.27.0

func (s * EndEvent ) MarshalEvent(pm protocol . PayloadMarshaler ) (msg eventstream . Message , err error )
MarshalEvent marshals the type into an stream event value. This method
should only used internally within the SDK's EventStream handling.

func (EndEvent) String    added in  v1.14.0

func (s EndEvent ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*EndEvent) UnmarshalEvent    added in  v1.14.0

func (s * EndEvent ) UnmarshalEvent(
payloadUnmarshaler protocol . PayloadUnmarshaler ,
msg eventstream . Message ,
) error
UnmarshalEvent unmarshals the EventStream Message into the EndEvent value.
This method is only used internally within the SDK's EventStream handling.
type Error
type Error struct {  // The error code is a string that uniquely identifies an error condition. It   // is meant to be read and understood by programs that detect and handle errors  // by type. The following is a list of Amazon S3 error codes. For more information,  // see Error responses ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html ).  //  //    * Code: AccessDenied Description: Access Denied HTTP Status Code: 403  //    Forbidden SOAP Fault Code Prefix: Client  //  //    * Code: AccountProblem Description: There is a problem with your Amazon  //    Web Services account that prevents the action from completing successfully.  //    Contact Amazon Web Services Support for further assistance. HTTP Status  //    Code: 403 Forbidden SOAP Fault Code Prefix: Client  //  //    * Code: AllAccessDisabled Description: All access to this Amazon S3 resource  //    has been disabled. Contact Amazon Web Services Support for further assistance.  //    HTTP Status Code: 403 Forbidden SOAP Fault Code Prefix: Client  //  //    * Code: AmbiguousGrantByEmailAddress Description: The email address you  //    provided is associated with more than one account. HTTP Status Code: 400  //    Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: AuthorizationHeaderMalformed Description: The authorization header  //    you provided is invalid. HTTP Status Code: 400 Bad Request HTTP Status  //    Code: N/A  //  //    * Code: BadDigest Description: The Content-MD5 you specified did not match  //    what we received. HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix:  //    Client  //  //    * Code: BucketAlreadyExists Description: The requested bucket name is  //    not available. The bucket namespace is shared by all users of the system.  //    Please select a different name and try again. HTTP Status Code: 409 Conflict  //    SOAP Fault Code Prefix: Client  //  //    * Code: BucketAlreadyOwnedByYou Description: The bucket you tried to create  //    already exists, and you own it. Amazon S3 returns this error in all Amazon  //    Web Services Regions except in the North Virginia Region. For legacy compatibility,  //    if you re-create an existing bucket that you already own in the North  //    Virginia Region, Amazon S3 returns 200 OK and resets the bucket access  //    control lists (ACLs). Code: 409 Conflict (in all Regions except the North  //    Virginia Region) SOAP Fault Code Prefix: Client  //  //    * Code: BucketNotEmpty Description: The bucket you tried to delete is  //    not empty. HTTP Status Code: 409 Conflict SOAP Fault Code Prefix: Client  //  //    * Code: CredentialsNotSupported Description: This request does not support  //    credentials. HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix:  //    Client  //  //    * Code: CrossLocationLoggingProhibited Description: Cross-location logging  //    not allowed. Buckets in one geographic location cannot log information  //    to a bucket in another location. HTTP Status Code: 403 Forbidden SOAP  //    Fault Code Prefix: Client  //  //    * Code: EntityTooSmall Description: Your proposed upload is smaller than  //    the minimum allowed object size. HTTP Status Code: 400 Bad Request SOAP  //    Fault Code Prefix: Client  //  //    * Code: EntityTooLarge Description: Your proposed upload exceeds the maximum  //    allowed object size. HTTP Status Code: 400 Bad Request SOAP Fault Code  //    Prefix: Client  //  //    * Code: ExpiredToken Description: The provided token has expired. HTTP  //    Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: IllegalVersioningConfigurationException Description: Indicates  //    that the versioning configuration specified in the request is invalid.  //    HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: IncompleteBody Description: You did not provide the number of  //    bytes specified by the Content-Length HTTP header HTTP Status Code: 400  //    Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: IncorrectNumberOfFilesInPostRequest Description: POST requires  //    exactly one file upload per request. HTTP Status Code: 400 Bad Request  //    SOAP Fault Code Prefix: Client  //  //    * Code: InlineDataTooLarge Description: Inline data exceeds the maximum  //    allowed size. HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix:  //    Client  //  //    * Code: InternalError Description: We encountered an internal error. Please  //    try again. HTTP Status Code: 500 Internal Server Error SOAP Fault Code  //    Prefix: Server  //  //    * Code: InvalidAccessKeyId Description: The Amazon Web Services access  //    key ID you provided does not exist in our records. HTTP Status Code: 403  //    Forbidden SOAP Fault Code Prefix: Client  //  //    * Code: InvalidAddressingHeader Description: You must specify the Anonymous  //    role. HTTP Status Code: N/A SOAP Fault Code Prefix: Client  //  //    * Code: InvalidArgument Description: Invalid Argument HTTP Status Code:  //    400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: InvalidBucketName Description: The specified bucket is not valid.  //    HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: InvalidBucketState Description: The request is not valid with  //    the current state of the bucket. HTTP Status Code: 409 Conflict SOAP Fault  //    Code Prefix: Client  //  //    * Code: InvalidDigest Description: The Content-MD5 you specified is not  //    valid. HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: InvalidEncryptionAlgorithmError Description: The encryption request  //    you specified is not valid. The valid value is AES256. HTTP Status Code:  //    400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: InvalidLocationConstraint Description: The specified location  //    constraint is not valid. For more information about Regions, see How to  //    Select a Region for Your Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro ).  //    HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: InvalidObjectState Description: The action is not valid for the  //    current state of the object. HTTP Status Code: 403 Forbidden SOAP Fault  //    Code Prefix: Client  //  //    * Code: InvalidPart Description: One or more of the specified parts could  //    not be found. The part might not have been uploaded, or the specified  //    entity tag might not have matched the part's entity tag. HTTP Status Code:  //    400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: InvalidPartOrder Description: The list of parts was not in ascending  //    order. Parts list must be specified in order by part number. HTTP Status  //    Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: InvalidPayer Description: All access to this object has been disabled.  //    Please contact Amazon Web Services Support for further assistance. HTTP  //    Status Code: 403 Forbidden SOAP Fault Code Prefix: Client  //  //    * Code: InvalidPolicyDocument Description: The content of the form does  //    not meet the conditions specified in the policy document. HTTP Status  //    Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: InvalidRange Description: The requested range cannot be satisfied.  //    HTTP Status Code: 416 Requested Range Not Satisfiable SOAP Fault Code  //    Prefix: Client  //  //    * Code: InvalidRequest Description: Please use AWS4-HMAC-SHA256. HTTP  //    Status Code: 400 Bad Request Code: N/A  //  //    * Code: InvalidRequest Description: SOAP requests must be made over an  //    HTTPS connection. HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix:  //    Client  //  //    * Code: InvalidRequest Description: Amazon S3 Transfer Acceleration is  //    not supported for buckets with non-DNS compliant names. HTTP Status Code:  //    400 Bad Request Code: N/A  //  //    * Code: InvalidRequest Description: Amazon S3 Transfer Acceleration is  //    not supported for buckets with periods (.) in their names. HTTP Status  //    Code: 400 Bad Request Code: N/A  //  //    * Code: InvalidRequest Description: Amazon S3 Transfer Accelerate endpoint  //    only supports virtual style requests. HTTP Status Code: 400 Bad Request  //    Code: N/A  //  //    * Code: InvalidRequest Description: Amazon S3 Transfer Accelerate is not  //    configured on this bucket. HTTP Status Code: 400 Bad Request Code: N/A  //  //    * Code: InvalidRequest Description: Amazon S3 Transfer Accelerate is disabled  //    on this bucket. HTTP Status Code: 400 Bad Request Code: N/A  //  //    * Code: InvalidRequest Description: Amazon S3 Transfer Acceleration is  //    not supported on this bucket. Contact Amazon Web Services Support for  //    more information. HTTP Status Code: 400 Bad Request Code: N/A  //  //    * Code: InvalidRequest Description: Amazon S3 Transfer Acceleration cannot  //    be enabled on this bucket. Contact Amazon Web Services Support for more  //    information. HTTP Status Code: 400 Bad Request Code: N/A  //  //    * Code: InvalidSecurity Description: The provided security credentials  //    are not valid. HTTP Status Code: 403 Forbidden SOAP Fault Code Prefix:  //    Client  //  //    * Code: InvalidSOAPRequest Description: The SOAP request body is invalid.  //    HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: InvalidStorageClass Description: The storage class you specified  //    is not valid. HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix:  //    Client  //  //    * Code: InvalidTargetBucketForLogging Description: The target bucket for  //    logging does not exist, is not owned by you, or does not have the appropriate  //    grants for the log-delivery group. HTTP Status Code: 400 Bad Request SOAP  //    Fault Code Prefix: Client  //  //    * Code: InvalidToken Description: The provided token is malformed or otherwise  //    invalid. HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: InvalidURI Description: Couldn't parse the specified URI. HTTP  //    Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: KeyTooLongError Description: Your key is too long. HTTP Status  //    Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: MalformedACLError Description: The XML you provided was not well-formed  //    or did not validate against our published schema. HTTP Status Code: 400  //    Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: MalformedPOSTRequest Description: The body of your POST request  //    is not well-formed multipart/form-data. HTTP Status Code: 400 Bad Request  //    SOAP Fault Code Prefix: Client  //  //    * Code: MalformedXML Description: This happens when the user sends malformed  //    XML (XML that doesn't conform to the published XSD) for the configuration.  //    The error message is, "The XML you provided was not well-formed or did  //    not validate against our published schema." HTTP Status Code: 400 Bad  //    Request SOAP Fault Code Prefix: Client  //  //    * Code: MaxMessageLengthExceeded Description: Your request was too big.  //    HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: MaxPostPreDataLengthExceededError Description: Your POST request  //    fields preceding the upload file were too large. HTTP Status Code: 400  //    Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: MetadataTooLarge Description: Your metadata headers exceed the  //    maximum allowed metadata size. HTTP Status Code: 400 Bad Request SOAP  //    Fault Code Prefix: Client  //  //    * Code: MethodNotAllowed Description: The specified method is not allowed  //    against this resource. HTTP Status Code: 405 Method Not Allowed SOAP Fault  //    Code Prefix: Client  //  //    * Code: MissingAttachment Description: A SOAP attachment was expected,  //    but none were found. HTTP Status Code: N/A SOAP Fault Code Prefix: Client  //  //    * Code: MissingContentLength Description: You must provide the Content-Length  //    HTTP header. HTTP Status Code: 411 Length Required SOAP Fault Code Prefix:  //    Client  //  //    * Code: MissingRequestBodyError Description: This happens when the user  //    sends an empty XML document as a request. The error message is, "Request  //    body is empty." HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix:  //    Client  //  //    * Code: MissingSecurityElement Description: The SOAP 1.1 request is missing  //    a security element. HTTP Status Code: 400 Bad Request SOAP Fault Code  //    Prefix: Client  //  //    * Code: MissingSecurityHeader Description: Your request is missing a required  //    header. HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: NoLoggingStatusForKey Description: There is no such thing as a  //    logging status subresource for a key. HTTP Status Code: 400 Bad Request  //    SOAP Fault Code Prefix: Client  //  //    * Code: NoSuchBucket Description: The specified bucket does not exist.  //    HTTP Status Code: 404 Not Found SOAP Fault Code Prefix: Client  //  //    * Code: NoSuchBucketPolicy Description: The specified bucket does not  //    have a bucket policy. HTTP Status Code: 404 Not Found SOAP Fault Code  //    Prefix: Client  //  //    * Code: NoSuchKey Description: The specified key does not exist. HTTP  //    Status Code: 404 Not Found SOAP Fault Code Prefix: Client  //  //    * Code: NoSuchLifecycleConfiguration Description: The lifecycle configuration  //    does not exist. HTTP Status Code: 404 Not Found SOAP Fault Code Prefix:  //    Client  //  //    * Code: NoSuchUpload Description: The specified multipart upload does  //    not exist. The upload ID might be invalid, or the multipart upload might  //    have been aborted or completed. HTTP Status Code: 404 Not Found SOAP Fault  //    Code Prefix: Client  //  //    * Code: NoSuchVersion Description: Indicates that the version ID specified  //    in the request does not match an existing version. HTTP Status Code: 404  //    Not Found SOAP Fault Code Prefix: Client  //  //    * Code: NotImplemented Description: A header you provided implies functionality  //    that is not implemented. HTTP Status Code: 501 Not Implemented SOAP Fault  //    Code Prefix: Server  //  //    * Code: NotSignedUp Description: Your account is not signed up for the  //    Amazon S3 service. You must sign up before you can use Amazon S3. You  //    can sign up at the following URL: Amazon S3 ( http://aws.amazon.com/s3 )  //    HTTP Status Code: 403 Forbidden SOAP Fault Code Prefix: Client  //  //    * Code: OperationAborted Description: A conflicting conditional action  //    is currently in progress against this resource. Try again. HTTP Status  //    Code: 409 Conflict SOAP Fault Code Prefix: Client  //  //    * Code: PermanentRedirect Description: The bucket you are attempting to  //    access must be addressed using the specified endpoint. Send all future  //    requests to this endpoint. HTTP Status Code: 301 Moved Permanently SOAP  //    Fault Code Prefix: Client  //  //    * Code: PreconditionFailed Description: At least one of the preconditions  //    you specified did not hold. HTTP Status Code: 412 Precondition Failed  //    SOAP Fault Code Prefix: Client  //  //    * Code: Redirect Description: Temporary redirect. HTTP Status Code: 307  //    Moved Temporarily SOAP Fault Code Prefix: Client  //  //    * Code: RestoreAlreadyInProgress Description: Object restore is already  //    in progress. HTTP Status Code: 409 Conflict SOAP Fault Code Prefix: Client  //  //    * Code: RequestIsNotMultiPartContent Description: Bucket POST must be  //    of the enclosure-type multipart/form-data. HTTP Status Code: 400 Bad Request  //    SOAP Fault Code Prefix: Client  //  //    * Code: RequestTimeout Description: Your socket connection to the server  //    was not read from or written to within the timeout period. HTTP Status  //    Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: RequestTimeTooSkewed Description: The difference between the request  //    time and the server's time is too large. HTTP Status Code: 403 Forbidden  //    SOAP Fault Code Prefix: Client  //  //    * Code: RequestTorrentOfBucketError Description: Requesting the torrent  //    file of a bucket is not permitted. HTTP Status Code: 400 Bad Request SOAP  //    Fault Code Prefix: Client  //  //    * Code: SignatureDoesNotMatch Description: The request signature we calculated  //    does not match the signature you provided. Check your Amazon Web Services  //    secret access key and signing method. For more information, see REST Authentication  //    ( https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html )  //    and SOAP Authentication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/SOAPAuthentication.html )  //    for details. HTTP Status Code: 403 Forbidden SOAP Fault Code Prefix: Client  //  //    * Code: ServiceUnavailable Description: Service is unable to handle request.  //    HTTP Status Code: 503 Service Unavailable SOAP Fault Code Prefix: Server  //  //    * Code: SlowDown Description: Reduce your request rate. HTTP Status Code:  //    503 Slow Down SOAP Fault Code Prefix: Server  //  //    * Code: TemporaryRedirect Description: You are being redirected to the  //    bucket while DNS updates. HTTP Status Code: 307 Moved Temporarily SOAP  //    Fault Code Prefix: Client  //  //    * Code: TokenRefreshRequired Description: The provided token must be refreshed.  //    HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: TooManyBuckets Description: You have attempted to create more  //    buckets than allowed. HTTP Status Code: 400 Bad Request SOAP Fault Code  //    Prefix: Client  //  //    * Code: UnexpectedContent Description: This request does not support content.  //    HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: UnresolvableGrantByEmailAddress Description: The email address  //    you provided does not match any account on record. HTTP Status Code: 400  //    Bad Request SOAP Fault Code Prefix: Client  //  //    * Code: UserKeyMustBeSpecified Description: The bucket POST must contain  //    the specified field name. If it is specified, check the order of the fields.  //    HTTP Status Code: 400 Bad Request SOAP Fault Code Prefix: Client Code * string `type:"string"`  // The error key.  Key * string `min:"1" type:"string"`  // The error message contains a generic description of the error condition in   // English. It is intended for a human audience. Simple programs display the  // message directly to the end user if they encounter an error condition they  // don't know how or don't care to handle. Sophisticated programs with more  // exhaustive error handling and proper internationalization are more likely  // to ignore the error message. Message * string `type:"string"`  // The version ID of the error.  VersionId * string `type:"string"` // contains filtered or unexported fields }
Container for all error elements.

func (Error) GoString    added in  v0.6.5

func (s Error ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Error) SetCode    added in  v1.5.0

func (s * Error ) SetCode(v string ) * Error
SetCode sets the Code field's value.

func (*Error) SetKey    added in  v1.5.0

func (s * Error ) SetKey(v string ) * Error
SetKey sets the Key field's value.

func (*Error) SetMessage    added in  v1.5.0

func (s * Error ) SetMessage(v string ) * Error
SetMessage sets the Message field's value.

func (*Error) SetVersionId    added in  v1.5.0

func (s * Error ) SetVersionId(v string ) * Error
SetVersionId sets the VersionId field's value.

func (Error) String    added in  v0.6.5

func (s Error ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ErrorDocument
type ErrorDocument struct {  // The object key name to use when a 4XX class error occurs.   //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ).  //  // Key is a required field Key * string `min:"1" type:"string" required:"true"` // contains filtered or unexported fields }
The error information.

func (ErrorDocument) GoString    added in  v0.6.5

func (s ErrorDocument ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ErrorDocument) SetKey    added in  v1.5.0

func (s * ErrorDocument ) SetKey(v string ) * ErrorDocument
SetKey sets the Key field's value.

func (ErrorDocument) String    added in  v0.6.5

func (s ErrorDocument ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ErrorDocument) Validate    added in  v1.1.21

func (s * ErrorDocument ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type EventBridgeConfiguration    added in  v1.42.15
type EventBridgeConfiguration struct { // contains filtered or unexported fields }
A container for specifying the configuration for Amazon EventBridge.

func (EventBridgeConfiguration) GoString    added in  v1.42.15

func (s EventBridgeConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (EventBridgeConfiguration) String    added in  v1.42.15

func (s EventBridgeConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ExistingObjectReplication    added in  v1.25.37
type ExistingObjectReplication struct {  // Specifies whether Amazon S3 replicates existing source bucket objects.   //  // Status is a required field Status * string `type:"string" required:"true" enum:"ExistingObjectReplicationStatus"` // contains filtered or unexported fields }
Optional configuration to replicate existing source bucket objects. For more
information, see Replicating Existing Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-what-is-isnot-replicated.html#existing-object-replication )
in the Amazon S3 User Guide.

func (ExistingObjectReplication) GoString    added in  v1.25.37

func (s ExistingObjectReplication ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ExistingObjectReplication) SetStatus    added in  v1.25.37

func (s * ExistingObjectReplication ) SetStatus(v string ) * ExistingObjectReplication
SetStatus sets the Status field's value.

func (ExistingObjectReplication) String    added in  v1.25.37

func (s ExistingObjectReplication ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ExistingObjectReplication) Validate    added in  v1.25.37

func (s * ExistingObjectReplication ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type FilterRule    added in  v0.9.5
type FilterRule struct {  // The object key name prefix or suffix identifying one or more objects to which   // the filtering rule applies. The maximum length is 1,024 characters. Overlapping  // prefixes and suffixes are not supported. For more information, see Configuring  // Event Notifications ( https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html )  // in the Amazon S3 User Guide. Name * string `type:"string" enum:"FilterRuleName"`  // The value that the filter searches for in object key names.  Value * string `type:"string"` // contains filtered or unexported fields }
Specifies the Amazon S3 object key name to filter on and whether to filter
on the suffix or prefix of the key name.

func (FilterRule) GoString    added in  v0.9.5

func (s FilterRule ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*FilterRule) SetName    added in  v1.5.0

func (s * FilterRule ) SetName(v string ) * FilterRule
SetName sets the Name field's value.

func (*FilterRule) SetValue    added in  v1.5.0

func (s * FilterRule ) SetValue(v string ) * FilterRule
SetValue sets the Value field's value.

func (FilterRule) String    added in  v0.9.5

func (s FilterRule ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketAccelerateConfigurationInput    added in  v1.1.19
type GetBucketAccelerateConfigurationInput struct {  // The name of the bucket for which the accelerate configuration is retrieved.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"` // contains filtered or unexported fields }

func (GetBucketAccelerateConfigurationInput) GoString    added in  v1.1.19

func (s GetBucketAccelerateConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketAccelerateConfigurationInput) SetBucket    added in  v1.5.0

func (s * GetBucketAccelerateConfigurationInput ) SetBucket(v string ) * GetBucketAccelerateConfigurationInput
SetBucket sets the Bucket field's value.

func (*GetBucketAccelerateConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketAccelerateConfigurationInput ) SetExpectedBucketOwner(v string ) * GetBucketAccelerateConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetBucketAccelerateConfigurationInput) SetRequestPayer    added in  v1.44.284

func (s * GetBucketAccelerateConfigurationInput ) SetRequestPayer(v string ) * GetBucketAccelerateConfigurationInput
SetRequestPayer sets the RequestPayer field's value.

func (GetBucketAccelerateConfigurationInput) String    added in  v1.1.19

func (s GetBucketAccelerateConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketAccelerateConfigurationInput) Validate    added in  v1.1.21

func (s * GetBucketAccelerateConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketAccelerateConfigurationOutput    added in  v1.1.19
type GetBucketAccelerateConfigurationOutput struct {  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // The accelerate configuration of the bucket.  Status * string `type:"string" enum:"BucketAccelerateStatus"` // contains filtered or unexported fields }

func (GetBucketAccelerateConfigurationOutput) GoString    added in  v1.1.19

func (s GetBucketAccelerateConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketAccelerateConfigurationOutput) SetRequestCharged    added in  v1.44.284

func (s * GetBucketAccelerateConfigurationOutput ) SetRequestCharged(v string ) * GetBucketAccelerateConfigurationOutput
SetRequestCharged sets the RequestCharged field's value.

func (*GetBucketAccelerateConfigurationOutput) SetStatus    added in  v1.5.0

func (s * GetBucketAccelerateConfigurationOutput ) SetStatus(v string ) * GetBucketAccelerateConfigurationOutput
SetStatus sets the Status field's value.

func (GetBucketAccelerateConfigurationOutput) String    added in  v1.1.19

func (s GetBucketAccelerateConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketAclInput    added in  v0.9.5
type GetBucketAclInput struct {  // Specifies the S3 bucket whose ACL is being requested.   //  // To use this API operation against an access point, provide the alias of the  // access point in place of the bucket name.  //  // To use this API operation against an Object Lambda access point, provide  // the alias of the Object Lambda access point in place of the bucket name.  // If the Object Lambda access point alias in a request is not valid, the error  // code InvalidAccessPointAliasError is returned. For more information about  // InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketAclInput) GoString    added in  v0.9.5

func (s GetBucketAclInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketAclInput) SetBucket    added in  v1.5.0

func (s * GetBucketAclInput ) SetBucket(v string ) * GetBucketAclInput
SetBucket sets the Bucket field's value.

func (*GetBucketAclInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketAclInput ) SetExpectedBucketOwner(v string ) * GetBucketAclInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketAclInput) String    added in  v0.9.5

func (s GetBucketAclInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketAclInput) Validate    added in  v1.1.21

func (s * GetBucketAclInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketAclOutput    added in  v0.9.5
type GetBucketAclOutput struct {  // A list of grants.  Grants []* Grant `locationName:"AccessControlList" locationNameList:"Grant" type:"list"`  // Container for the bucket owner's display name and ID.  Owner * Owner `type:"structure"` // contains filtered or unexported fields }

func (GetBucketAclOutput) GoString    added in  v0.9.5

func (s GetBucketAclOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketAclOutput) SetGrants    added in  v1.5.0

func (s * GetBucketAclOutput ) SetGrants(v []* Grant ) * GetBucketAclOutput
SetGrants sets the Grants field's value.

func (*GetBucketAclOutput) SetOwner    added in  v1.5.0

func (s * GetBucketAclOutput ) SetOwner(v * Owner ) * GetBucketAclOutput
SetOwner sets the Owner field's value.

func (GetBucketAclOutput) String    added in  v0.9.5

func (s GetBucketAclOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketAnalyticsConfigurationInput    added in  v1.5.11
type GetBucketAnalyticsConfigurationInput struct {  // The name of the bucket from which an analytics configuration is retrieved.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The ID that identifies the analytics configuration.   //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"` // contains filtered or unexported fields }

func (GetBucketAnalyticsConfigurationInput) GoString    added in  v1.5.11

func (s GetBucketAnalyticsConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketAnalyticsConfigurationInput) SetBucket    added in  v1.5.11

func (s * GetBucketAnalyticsConfigurationInput ) SetBucket(v string ) * GetBucketAnalyticsConfigurationInput
SetBucket sets the Bucket field's value.

func (*GetBucketAnalyticsConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketAnalyticsConfigurationInput ) SetExpectedBucketOwner(v string ) * GetBucketAnalyticsConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetBucketAnalyticsConfigurationInput) SetId    added in  v1.5.11

func (s * GetBucketAnalyticsConfigurationInput ) SetId(v string ) * GetBucketAnalyticsConfigurationInput
SetId sets the Id field's value.

func (GetBucketAnalyticsConfigurationInput) String    added in  v1.5.11

func (s GetBucketAnalyticsConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketAnalyticsConfigurationInput) Validate    added in  v1.5.11

func (s * GetBucketAnalyticsConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketAnalyticsConfigurationOutput    added in  v1.5.11
type GetBucketAnalyticsConfigurationOutput struct {  // The configuration and any analyses for the analytics filter.  AnalyticsConfiguration * AnalyticsConfiguration `type:"structure"` // contains filtered or unexported fields }

func (GetBucketAnalyticsConfigurationOutput) GoString    added in  v1.5.11

func (s GetBucketAnalyticsConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketAnalyticsConfigurationOutput) SetAnalyticsConfiguration    added in  v1.5.11

func (s * GetBucketAnalyticsConfigurationOutput ) SetAnalyticsConfiguration(v * AnalyticsConfiguration ) * GetBucketAnalyticsConfigurationOutput
SetAnalyticsConfiguration sets the AnalyticsConfiguration field's value.

func (GetBucketAnalyticsConfigurationOutput) String    added in  v1.5.11

func (s GetBucketAnalyticsConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketCorsInput    added in  v0.9.5
type GetBucketCorsInput struct {  // The bucket name for which to get the cors configuration.   //  // To use this API operation against an access point, provide the alias of the  // access point in place of the bucket name.  //  // To use this API operation against an Object Lambda access point, provide  // the alias of the Object Lambda access point in place of the bucket name.  // If the Object Lambda access point alias in a request is not valid, the error  // code InvalidAccessPointAliasError is returned. For more information about  // InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketCorsInput) GoString    added in  v0.9.5

func (s GetBucketCorsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketCorsInput) SetBucket    added in  v1.5.0

func (s * GetBucketCorsInput ) SetBucket(v string ) * GetBucketCorsInput
SetBucket sets the Bucket field's value.

func (*GetBucketCorsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketCorsInput ) SetExpectedBucketOwner(v string ) * GetBucketCorsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketCorsInput) String    added in  v0.9.5

func (s GetBucketCorsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketCorsInput) Validate    added in  v1.1.21

func (s * GetBucketCorsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketCorsOutput    added in  v0.9.5
type GetBucketCorsOutput struct {  // A set of origins and methods (cross-origin access that you want to allow).   // You can add up to 100 rules to the configuration. CORSRules []* CORSRule `locationName:"CORSRule" type:"list" flattened:"true"` // contains filtered or unexported fields }

func (GetBucketCorsOutput) GoString    added in  v0.9.5

func (s GetBucketCorsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketCorsOutput) SetCORSRules    added in  v1.5.0

func (s * GetBucketCorsOutput ) SetCORSRules(v []* CORSRule ) * GetBucketCorsOutput
SetCORSRules sets the CORSRules field's value.

func (GetBucketCorsOutput) String    added in  v0.9.5

func (s GetBucketCorsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketEncryptionInput    added in  v1.12.24
type GetBucketEncryptionInput struct {  // The name of the bucket from which the server-side encryption configuration   // is retrieved.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketEncryptionInput) GoString    added in  v1.12.24

func (s GetBucketEncryptionInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketEncryptionInput) SetBucket    added in  v1.12.24

func (s * GetBucketEncryptionInput ) SetBucket(v string ) * GetBucketEncryptionInput
SetBucket sets the Bucket field's value.

func (*GetBucketEncryptionInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketEncryptionInput ) SetExpectedBucketOwner(v string ) * GetBucketEncryptionInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketEncryptionInput) String    added in  v1.12.24

func (s GetBucketEncryptionInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketEncryptionInput) Validate    added in  v1.12.24

func (s * GetBucketEncryptionInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketEncryptionOutput    added in  v1.12.24
type GetBucketEncryptionOutput struct {  // Specifies the default server-side-encryption configuration.  ServerSideEncryptionConfiguration * ServerSideEncryptionConfiguration `type:"structure"` // contains filtered or unexported fields }

func (GetBucketEncryptionOutput) GoString    added in  v1.12.24

func (s GetBucketEncryptionOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketEncryptionOutput) SetServerSideEncryptionConfiguration    added in  v1.12.24

func (s * GetBucketEncryptionOutput ) SetServerSideEncryptionConfiguration(v * ServerSideEncryptionConfiguration ) * GetBucketEncryptionOutput
SetServerSideEncryptionConfiguration sets the ServerSideEncryptionConfiguration field's value.

func (GetBucketEncryptionOutput) String    added in  v1.12.24

func (s GetBucketEncryptionOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketIntelligentTieringConfigurationInput    added in  v1.35.24
type GetBucketIntelligentTieringConfigurationInput struct {  // The name of the Amazon S3 bucket whose configuration you want to modify or   // retrieve.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The ID used to identify the S3 Intelligent-Tiering configuration.   //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"` // contains filtered or unexported fields }

func (GetBucketIntelligentTieringConfigurationInput) GoString    added in  v1.35.24

func (s GetBucketIntelligentTieringConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketIntelligentTieringConfigurationInput) SetBucket    added in  v1.35.24

func (s * GetBucketIntelligentTieringConfigurationInput ) SetBucket(v string ) * GetBucketIntelligentTieringConfigurationInput
SetBucket sets the Bucket field's value.

func (*GetBucketIntelligentTieringConfigurationInput) SetId    added in  v1.35.24

func (s * GetBucketIntelligentTieringConfigurationInput ) SetId(v string ) * GetBucketIntelligentTieringConfigurationInput
SetId sets the Id field's value.

func (GetBucketIntelligentTieringConfigurationInput) String    added in  v1.35.24

func (s GetBucketIntelligentTieringConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketIntelligentTieringConfigurationInput) Validate    added in  v1.35.24

func (s * GetBucketIntelligentTieringConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketIntelligentTieringConfigurationOutput    added in  v1.35.24
type GetBucketIntelligentTieringConfigurationOutput struct {  // Container for S3 Intelligent-Tiering configuration.  IntelligentTieringConfiguration * IntelligentTieringConfiguration `type:"structure"` // contains filtered or unexported fields }

func (GetBucketIntelligentTieringConfigurationOutput) GoString    added in  v1.35.24

func (s GetBucketIntelligentTieringConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketIntelligentTieringConfigurationOutput) SetIntelligentTieringConfiguration    added in  v1.35.24

func (s * GetBucketIntelligentTieringConfigurationOutput ) SetIntelligentTieringConfiguration(v * IntelligentTieringConfiguration ) * GetBucketIntelligentTieringConfigurationOutput
SetIntelligentTieringConfiguration sets the IntelligentTieringConfiguration field's value.

func (GetBucketIntelligentTieringConfigurationOutput) String    added in  v1.35.24

func (s GetBucketIntelligentTieringConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketInventoryConfigurationInput    added in  v1.5.11
type GetBucketInventoryConfigurationInput struct {  // The name of the bucket containing the inventory configuration to retrieve.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The ID used to identify the inventory configuration.   //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"` // contains filtered or unexported fields }

func (GetBucketInventoryConfigurationInput) GoString    added in  v1.5.11

func (s GetBucketInventoryConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketInventoryConfigurationInput) SetBucket    added in  v1.5.11

func (s * GetBucketInventoryConfigurationInput ) SetBucket(v string ) * GetBucketInventoryConfigurationInput
SetBucket sets the Bucket field's value.

func (*GetBucketInventoryConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketInventoryConfigurationInput ) SetExpectedBucketOwner(v string ) * GetBucketInventoryConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetBucketInventoryConfigurationInput) SetId    added in  v1.5.11

func (s * GetBucketInventoryConfigurationInput ) SetId(v string ) * GetBucketInventoryConfigurationInput
SetId sets the Id field's value.

func (GetBucketInventoryConfigurationInput) String    added in  v1.5.11

func (s GetBucketInventoryConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketInventoryConfigurationInput) Validate    added in  v1.5.11

func (s * GetBucketInventoryConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketInventoryConfigurationOutput    added in  v1.5.11
type GetBucketInventoryConfigurationOutput struct {  // Specifies the inventory configuration.  InventoryConfiguration * InventoryConfiguration `type:"structure"` // contains filtered or unexported fields }

func (GetBucketInventoryConfigurationOutput) GoString    added in  v1.5.11

func (s GetBucketInventoryConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketInventoryConfigurationOutput) SetInventoryConfiguration    added in  v1.5.11

func (s * GetBucketInventoryConfigurationOutput ) SetInventoryConfiguration(v * InventoryConfiguration ) * GetBucketInventoryConfigurationOutput
SetInventoryConfiguration sets the InventoryConfiguration field's value.

func (GetBucketInventoryConfigurationOutput) String    added in  v1.5.11

func (s GetBucketInventoryConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketLifecycleConfigurationInput    added in  v0.9.8
type GetBucketLifecycleConfigurationInput struct {  // The name of the bucket for which to get the lifecycle information.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketLifecycleConfigurationInput) GoString    added in  v0.9.8

func (s GetBucketLifecycleConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLifecycleConfigurationInput) SetBucket    added in  v1.5.0

func (s * GetBucketLifecycleConfigurationInput ) SetBucket(v string ) * GetBucketLifecycleConfigurationInput
SetBucket sets the Bucket field's value.

func (*GetBucketLifecycleConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketLifecycleConfigurationInput ) SetExpectedBucketOwner(v string ) * GetBucketLifecycleConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketLifecycleConfigurationInput) String    added in  v0.9.8

func (s GetBucketLifecycleConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLifecycleConfigurationInput) Validate    added in  v1.1.21

func (s * GetBucketLifecycleConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketLifecycleConfigurationOutput    added in  v0.9.8
type GetBucketLifecycleConfigurationOutput struct {  // Container for a lifecycle rule.  Rules []* LifecycleRule `locationName:"Rule" type:"list" flattened:"true"` // contains filtered or unexported fields }

func (GetBucketLifecycleConfigurationOutput) GoString    added in  v0.9.8

func (s GetBucketLifecycleConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLifecycleConfigurationOutput) SetRules    added in  v1.5.0

func (s * GetBucketLifecycleConfigurationOutput ) SetRules(v []* LifecycleRule ) * GetBucketLifecycleConfigurationOutput
SetRules sets the Rules field's value.

func (GetBucketLifecycleConfigurationOutput) String    added in  v0.9.8

func (s GetBucketLifecycleConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketLifecycleInput
type GetBucketLifecycleInput struct {  // The name of the bucket for which to get the lifecycle information.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketLifecycleInput) GoString    added in  v0.6.5

func (s GetBucketLifecycleInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLifecycleInput) SetBucket    added in  v1.5.0

func (s * GetBucketLifecycleInput ) SetBucket(v string ) * GetBucketLifecycleInput
SetBucket sets the Bucket field's value.

func (*GetBucketLifecycleInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketLifecycleInput ) SetExpectedBucketOwner(v string ) * GetBucketLifecycleInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketLifecycleInput) String    added in  v0.6.5

func (s GetBucketLifecycleInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLifecycleInput) Validate    added in  v1.1.21

func (s * GetBucketLifecycleInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketLifecycleOutput
type GetBucketLifecycleOutput struct {  // Container for a lifecycle rule.  Rules []* Rule `locationName:"Rule" type:"list" flattened:"true"` // contains filtered or unexported fields }

func (GetBucketLifecycleOutput) GoString    added in  v0.6.5

func (s GetBucketLifecycleOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLifecycleOutput) SetRules    added in  v1.5.0

func (s * GetBucketLifecycleOutput ) SetRules(v []* Rule ) * GetBucketLifecycleOutput
SetRules sets the Rules field's value.

func (GetBucketLifecycleOutput) String    added in  v0.6.5

func (s GetBucketLifecycleOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketLocationInput
type GetBucketLocationInput struct {  // The name of the bucket for which to get the location.   //  // To use this API operation against an access point, provide the alias of the  // access point in place of the bucket name.  //  // To use this API operation against an Object Lambda access point, provide  // the alias of the Object Lambda access point in place of the bucket name.  // If the Object Lambda access point alias in a request is not valid, the error  // code InvalidAccessPointAliasError is returned. For more information about  // InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketLocationInput) GoString    added in  v0.6.5

func (s GetBucketLocationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLocationInput) SetBucket    added in  v1.5.0

func (s * GetBucketLocationInput ) SetBucket(v string ) * GetBucketLocationInput
SetBucket sets the Bucket field's value.

func (*GetBucketLocationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketLocationInput ) SetExpectedBucketOwner(v string ) * GetBucketLocationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketLocationInput) String    added in  v0.6.5

func (s GetBucketLocationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLocationInput) Validate    added in  v1.1.21

func (s * GetBucketLocationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketLocationOutput
type GetBucketLocationOutput struct {  // Specifies the Region where the bucket resides. For a list of all the Amazon   // S3 supported location constraints by Region, see Regions and Endpoints ( https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region ).  // Buckets in Region us-east-1 have a LocationConstraint of null. LocationConstraint * string `type:"string" enum:"BucketLocationConstraint"` // contains filtered or unexported fields }

func (GetBucketLocationOutput) GoString    added in  v0.6.5

func (s GetBucketLocationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLocationOutput) SetLocationConstraint    added in  v1.5.0

func (s * GetBucketLocationOutput ) SetLocationConstraint(v string ) * GetBucketLocationOutput
SetLocationConstraint sets the LocationConstraint field's value.

func (GetBucketLocationOutput) String    added in  v0.6.5

func (s GetBucketLocationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketLoggingInput
type GetBucketLoggingInput struct {  // The bucket name for which to get the logging information.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketLoggingInput) GoString    added in  v0.6.5

func (s GetBucketLoggingInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLoggingInput) SetBucket    added in  v1.5.0

func (s * GetBucketLoggingInput ) SetBucket(v string ) * GetBucketLoggingInput
SetBucket sets the Bucket field's value.

func (*GetBucketLoggingInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketLoggingInput ) SetExpectedBucketOwner(v string ) * GetBucketLoggingInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketLoggingInput) String    added in  v0.6.5

func (s GetBucketLoggingInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLoggingInput) Validate    added in  v1.1.21

func (s * GetBucketLoggingInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketLoggingOutput
type GetBucketLoggingOutput struct {  // Describes where logs are stored and the prefix that Amazon S3 assigns to   // all log object keys for a bucket. For more information, see PUT Bucket logging  // ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html )  // in the Amazon S3 API Reference. LoggingEnabled * LoggingEnabled `type:"structure"` // contains filtered or unexported fields }

func (GetBucketLoggingOutput) GoString    added in  v0.6.5

func (s GetBucketLoggingOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketLoggingOutput) SetLoggingEnabled    added in  v1.5.0

func (s * GetBucketLoggingOutput ) SetLoggingEnabled(v * LoggingEnabled ) * GetBucketLoggingOutput
SetLoggingEnabled sets the LoggingEnabled field's value.

func (GetBucketLoggingOutput) String    added in  v0.6.5

func (s GetBucketLoggingOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketMetricsConfigurationInput    added in  v1.5.11
type GetBucketMetricsConfigurationInput struct {  // The name of the bucket containing the metrics configuration to retrieve.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The ID used to identify the metrics configuration. The ID has a 64 character   // limit and can only contain letters, numbers, periods, dashes, and underscores.  //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"` // contains filtered or unexported fields }

func (GetBucketMetricsConfigurationInput) GoString    added in  v1.5.11

func (s GetBucketMetricsConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketMetricsConfigurationInput) SetBucket    added in  v1.5.11

func (s * GetBucketMetricsConfigurationInput ) SetBucket(v string ) * GetBucketMetricsConfigurationInput
SetBucket sets the Bucket field's value.

func (*GetBucketMetricsConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketMetricsConfigurationInput ) SetExpectedBucketOwner(v string ) * GetBucketMetricsConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetBucketMetricsConfigurationInput) SetId    added in  v1.5.11

func (s * GetBucketMetricsConfigurationInput ) SetId(v string ) * GetBucketMetricsConfigurationInput
SetId sets the Id field's value.

func (GetBucketMetricsConfigurationInput) String    added in  v1.5.11

func (s GetBucketMetricsConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketMetricsConfigurationInput) Validate    added in  v1.5.11

func (s * GetBucketMetricsConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketMetricsConfigurationOutput    added in  v1.5.11
type GetBucketMetricsConfigurationOutput struct {  // Specifies the metrics configuration.  MetricsConfiguration * MetricsConfiguration `type:"structure"` // contains filtered or unexported fields }

func (GetBucketMetricsConfigurationOutput) GoString    added in  v1.5.11

func (s GetBucketMetricsConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketMetricsConfigurationOutput) SetMetricsConfiguration    added in  v1.5.11

func (s * GetBucketMetricsConfigurationOutput ) SetMetricsConfiguration(v * MetricsConfiguration ) * GetBucketMetricsConfigurationOutput
SetMetricsConfiguration sets the MetricsConfiguration field's value.

func (GetBucketMetricsConfigurationOutput) String    added in  v1.5.11

func (s GetBucketMetricsConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketNotificationConfigurationRequest
type GetBucketNotificationConfigurationRequest struct {  // The name of the bucket for which to get the notification configuration.   //  // To use this API operation against an access point, provide the alias of the  // access point in place of the bucket name.  //  // To use this API operation against an Object Lambda access point, provide  // the alias of the Object Lambda access point in place of the bucket name.  // If the Object Lambda access point alias in a request is not valid, the error  // code InvalidAccessPointAliasError is returned. For more information about  // InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketNotificationConfigurationRequest) GoString    added in  v0.6.5

func (s GetBucketNotificationConfigurationRequest ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketNotificationConfigurationRequest) SetBucket    added in  v1.5.0

func (s * GetBucketNotificationConfigurationRequest ) SetBucket(v string ) * GetBucketNotificationConfigurationRequest
SetBucket sets the Bucket field's value.

func (*GetBucketNotificationConfigurationRequest) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketNotificationConfigurationRequest ) SetExpectedBucketOwner(v string ) * GetBucketNotificationConfigurationRequest
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketNotificationConfigurationRequest) String    added in  v0.6.5

func (s GetBucketNotificationConfigurationRequest ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketNotificationConfigurationRequest) Validate    added in  v1.1.21

func (s * GetBucketNotificationConfigurationRequest ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketOwnershipControlsInput    added in  v1.35.2
type GetBucketOwnershipControlsInput struct {  // The name of the Amazon S3 bucket whose OwnershipControls you want to retrieve.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketOwnershipControlsInput) GoString    added in  v1.35.2

func (s GetBucketOwnershipControlsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketOwnershipControlsInput) SetBucket    added in  v1.35.2

func (s * GetBucketOwnershipControlsInput ) SetBucket(v string ) * GetBucketOwnershipControlsInput
SetBucket sets the Bucket field's value.

func (*GetBucketOwnershipControlsInput) SetExpectedBucketOwner    added in  v1.35.2

func (s * GetBucketOwnershipControlsInput ) SetExpectedBucketOwner(v string ) * GetBucketOwnershipControlsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketOwnershipControlsInput) String    added in  v1.35.2

func (s GetBucketOwnershipControlsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketOwnershipControlsInput) Validate    added in  v1.35.2

func (s * GetBucketOwnershipControlsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketOwnershipControlsOutput    added in  v1.35.2
type GetBucketOwnershipControlsOutput struct {  // The OwnershipControls (BucketOwnerEnforced, BucketOwnerPreferred, or ObjectWriter)   // currently in effect for this Amazon S3 bucket. OwnershipControls * OwnershipControls `type:"structure"` // contains filtered or unexported fields }

func (GetBucketOwnershipControlsOutput) GoString    added in  v1.35.2

func (s GetBucketOwnershipControlsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketOwnershipControlsOutput) SetOwnershipControls    added in  v1.35.2

func (s * GetBucketOwnershipControlsOutput ) SetOwnershipControls(v * OwnershipControls ) * GetBucketOwnershipControlsOutput
SetOwnershipControls sets the OwnershipControls field's value.

func (GetBucketOwnershipControlsOutput) String    added in  v1.35.2

func (s GetBucketOwnershipControlsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketPolicyInput
type GetBucketPolicyInput struct {  // The bucket name for which to get the bucket policy.   //  // To use this API operation against an access point, provide the alias of the  // access point in place of the bucket name.  //  // To use this API operation against an Object Lambda access point, provide  // the alias of the Object Lambda access point in place of the bucket name.  // If the Object Lambda access point alias in a request is not valid, the error  // code InvalidAccessPointAliasError is returned. For more information about  // InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketPolicyInput) GoString    added in  v0.6.5

func (s GetBucketPolicyInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketPolicyInput) SetBucket    added in  v1.5.0

func (s * GetBucketPolicyInput ) SetBucket(v string ) * GetBucketPolicyInput
SetBucket sets the Bucket field's value.

func (*GetBucketPolicyInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketPolicyInput ) SetExpectedBucketOwner(v string ) * GetBucketPolicyInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketPolicyInput) String    added in  v0.6.5

func (s GetBucketPolicyInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketPolicyInput) Validate    added in  v1.1.21

func (s * GetBucketPolicyInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketPolicyOutput
type GetBucketPolicyOutput struct {  // The bucket policy as a JSON document.  Policy * string `type:"string"` // contains filtered or unexported fields }

func (GetBucketPolicyOutput) GoString    added in  v0.6.5

func (s GetBucketPolicyOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketPolicyOutput) SetPolicy    added in  v1.5.0

func (s * GetBucketPolicyOutput ) SetPolicy(v string ) * GetBucketPolicyOutput
SetPolicy sets the Policy field's value.

func (GetBucketPolicyOutput) String    added in  v0.6.5

func (s GetBucketPolicyOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketPolicyStatusInput    added in  v1.15.77
type GetBucketPolicyStatusInput struct {  // The name of the Amazon S3 bucket whose policy status you want to retrieve.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketPolicyStatusInput) GoString    added in  v1.15.77

func (s GetBucketPolicyStatusInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketPolicyStatusInput) SetBucket    added in  v1.15.77

func (s * GetBucketPolicyStatusInput ) SetBucket(v string ) * GetBucketPolicyStatusInput
SetBucket sets the Bucket field's value.

func (*GetBucketPolicyStatusInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketPolicyStatusInput ) SetExpectedBucketOwner(v string ) * GetBucketPolicyStatusInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketPolicyStatusInput) String    added in  v1.15.77

func (s GetBucketPolicyStatusInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketPolicyStatusInput) Validate    added in  v1.15.77

func (s * GetBucketPolicyStatusInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketPolicyStatusOutput    added in  v1.15.77
type GetBucketPolicyStatusOutput struct {  // The policy status for the specified bucket.  PolicyStatus * PolicyStatus `type:"structure"` // contains filtered or unexported fields }

func (GetBucketPolicyStatusOutput) GoString    added in  v1.15.77

func (s GetBucketPolicyStatusOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketPolicyStatusOutput) SetPolicyStatus    added in  v1.15.77

func (s * GetBucketPolicyStatusOutput ) SetPolicyStatus(v * PolicyStatus ) * GetBucketPolicyStatusOutput
SetPolicyStatus sets the PolicyStatus field's value.

func (GetBucketPolicyStatusOutput) String    added in  v1.15.77

func (s GetBucketPolicyStatusOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketReplicationInput
type GetBucketReplicationInput struct {  // The bucket name for which to get the replication information.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketReplicationInput) GoString    added in  v0.6.5

func (s GetBucketReplicationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketReplicationInput) SetBucket    added in  v1.5.0

func (s * GetBucketReplicationInput ) SetBucket(v string ) * GetBucketReplicationInput
SetBucket sets the Bucket field's value.

func (*GetBucketReplicationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketReplicationInput ) SetExpectedBucketOwner(v string ) * GetBucketReplicationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketReplicationInput) String    added in  v0.6.5

func (s GetBucketReplicationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketReplicationInput) Validate    added in  v1.1.21

func (s * GetBucketReplicationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketReplicationOutput
type GetBucketReplicationOutput struct {  // A container for replication rules. You can add up to 1,000 rules. The maximum   // size of a replication configuration is 2 MB. ReplicationConfiguration * ReplicationConfiguration `type:"structure"` // contains filtered or unexported fields }

func (GetBucketReplicationOutput) GoString    added in  v0.6.5

func (s GetBucketReplicationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketReplicationOutput) SetReplicationConfiguration    added in  v1.5.0

func (s * GetBucketReplicationOutput ) SetReplicationConfiguration(v * ReplicationConfiguration ) * GetBucketReplicationOutput
SetReplicationConfiguration sets the ReplicationConfiguration field's value.

func (GetBucketReplicationOutput) String    added in  v0.6.5

func (s GetBucketReplicationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketRequestPaymentInput
type GetBucketRequestPaymentInput struct {  // The name of the bucket for which to get the payment request configuration   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketRequestPaymentInput) GoString    added in  v0.6.5

func (s GetBucketRequestPaymentInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketRequestPaymentInput) SetBucket    added in  v1.5.0

func (s * GetBucketRequestPaymentInput ) SetBucket(v string ) * GetBucketRequestPaymentInput
SetBucket sets the Bucket field's value.

func (*GetBucketRequestPaymentInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketRequestPaymentInput ) SetExpectedBucketOwner(v string ) * GetBucketRequestPaymentInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketRequestPaymentInput) String    added in  v0.6.5

func (s GetBucketRequestPaymentInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketRequestPaymentInput) Validate    added in  v1.1.21

func (s * GetBucketRequestPaymentInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketRequestPaymentOutput
type GetBucketRequestPaymentOutput struct {  // Specifies who pays for the download and request fees.  Payer * string `type:"string" enum:"Payer"` // contains filtered or unexported fields }

func (GetBucketRequestPaymentOutput) GoString    added in  v0.6.5

func (s GetBucketRequestPaymentOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketRequestPaymentOutput) SetPayer    added in  v1.5.0

func (s * GetBucketRequestPaymentOutput ) SetPayer(v string ) * GetBucketRequestPaymentOutput
SetPayer sets the Payer field's value.

func (GetBucketRequestPaymentOutput) String    added in  v0.6.5

func (s GetBucketRequestPaymentOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketTaggingInput
type GetBucketTaggingInput struct {  // The name of the bucket for which to get the tagging information.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketTaggingInput) GoString    added in  v0.6.5

func (s GetBucketTaggingInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketTaggingInput) SetBucket    added in  v1.5.0

func (s * GetBucketTaggingInput ) SetBucket(v string ) * GetBucketTaggingInput
SetBucket sets the Bucket field's value.

func (*GetBucketTaggingInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketTaggingInput ) SetExpectedBucketOwner(v string ) * GetBucketTaggingInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketTaggingInput) String    added in  v0.6.5

func (s GetBucketTaggingInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketTaggingInput) Validate    added in  v1.1.21

func (s * GetBucketTaggingInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketTaggingOutput
type GetBucketTaggingOutput struct {  // Contains the tag set.   //  // TagSet is a required field TagSet []* Tag `locationNameList:"Tag" type:"list" required:"true"` // contains filtered or unexported fields }

func (GetBucketTaggingOutput) GoString    added in  v0.6.5

func (s GetBucketTaggingOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketTaggingOutput) SetTagSet    added in  v1.5.0

func (s * GetBucketTaggingOutput ) SetTagSet(v []* Tag ) * GetBucketTaggingOutput
SetTagSet sets the TagSet field's value.

func (GetBucketTaggingOutput) String    added in  v0.6.5

func (s GetBucketTaggingOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketVersioningInput
type GetBucketVersioningInput struct {  // The name of the bucket for which to get the versioning information.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketVersioningInput) GoString    added in  v0.6.5

func (s GetBucketVersioningInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketVersioningInput) SetBucket    added in  v1.5.0

func (s * GetBucketVersioningInput ) SetBucket(v string ) * GetBucketVersioningInput
SetBucket sets the Bucket field's value.

func (*GetBucketVersioningInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketVersioningInput ) SetExpectedBucketOwner(v string ) * GetBucketVersioningInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketVersioningInput) String    added in  v0.6.5

func (s GetBucketVersioningInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketVersioningInput) Validate    added in  v1.1.21

func (s * GetBucketVersioningInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketVersioningOutput
type GetBucketVersioningOutput struct {  // Specifies whether MFA delete is enabled in the bucket versioning configuration.   // This element is only returned if the bucket has been configured with MFA  // delete. If the bucket has never been so configured, this element is not returned. MFADelete * string `locationName:"MfaDelete" type:"string" enum:"MFADeleteStatus"`  // The versioning state of the bucket.  Status * string `type:"string" enum:"BucketVersioningStatus"` // contains filtered or unexported fields }

func (GetBucketVersioningOutput) GoString    added in  v0.6.5

func (s GetBucketVersioningOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketVersioningOutput) SetMFADelete    added in  v1.5.0

func (s * GetBucketVersioningOutput ) SetMFADelete(v string ) * GetBucketVersioningOutput
SetMFADelete sets the MFADelete field's value.

func (*GetBucketVersioningOutput) SetStatus    added in  v1.5.0

func (s * GetBucketVersioningOutput ) SetStatus(v string ) * GetBucketVersioningOutput
SetStatus sets the Status field's value.

func (GetBucketVersioningOutput) String    added in  v0.6.5

func (s GetBucketVersioningOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetBucketWebsiteInput
type GetBucketWebsiteInput struct {  // The bucket name for which to get the website configuration.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetBucketWebsiteInput) GoString    added in  v0.6.5

func (s GetBucketWebsiteInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketWebsiteInput) SetBucket    added in  v1.5.0

func (s * GetBucketWebsiteInput ) SetBucket(v string ) * GetBucketWebsiteInput
SetBucket sets the Bucket field's value.

func (*GetBucketWebsiteInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetBucketWebsiteInput ) SetExpectedBucketOwner(v string ) * GetBucketWebsiteInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetBucketWebsiteInput) String    added in  v0.6.5

func (s GetBucketWebsiteInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketWebsiteInput) Validate    added in  v1.1.21

func (s * GetBucketWebsiteInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetBucketWebsiteOutput
type GetBucketWebsiteOutput struct {  // The object key name of the website error document to use for 4XX class errors.  ErrorDocument * ErrorDocument `type:"structure"`  // The name of the index document for the website (for example index.html).  IndexDocument * IndexDocument `type:"structure"`  // Specifies the redirect behavior of all requests to a website endpoint of   // an Amazon S3 bucket. RedirectAllRequestsTo * RedirectAllRequestsTo `type:"structure"`  // Rules that define when a redirect is applied and the redirect behavior.  RoutingRules []* RoutingRule `locationNameList:"RoutingRule" type:"list"` // contains filtered or unexported fields }

func (GetBucketWebsiteOutput) GoString    added in  v0.6.5

func (s GetBucketWebsiteOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetBucketWebsiteOutput) SetErrorDocument    added in  v1.5.0

func (s * GetBucketWebsiteOutput ) SetErrorDocument(v * ErrorDocument ) * GetBucketWebsiteOutput
SetErrorDocument sets the ErrorDocument field's value.

func (*GetBucketWebsiteOutput) SetIndexDocument    added in  v1.5.0

func (s * GetBucketWebsiteOutput ) SetIndexDocument(v * IndexDocument ) * GetBucketWebsiteOutput
SetIndexDocument sets the IndexDocument field's value.

func (*GetBucketWebsiteOutput) SetRedirectAllRequestsTo    added in  v1.5.0

func (s * GetBucketWebsiteOutput ) SetRedirectAllRequestsTo(v * RedirectAllRequestsTo ) * GetBucketWebsiteOutput
SetRedirectAllRequestsTo sets the RedirectAllRequestsTo field's value.

func (*GetBucketWebsiteOutput) SetRoutingRules    added in  v1.5.0

func (s * GetBucketWebsiteOutput ) SetRoutingRules(v []* RoutingRule ) * GetBucketWebsiteOutput
SetRoutingRules sets the RoutingRules field's value.

func (GetBucketWebsiteOutput) String    added in  v0.6.5

func (s GetBucketWebsiteOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetObjectAclInput    added in  v0.9.5
type GetObjectAclInput struct {  // The bucket name that contains the object for which to get the ACL information.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The key of the object for which to get the ACL information.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // VersionId used to reference a specific version of the object.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (GetObjectAclInput) GoString    added in  v0.9.5

func (s GetObjectAclInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectAclInput) SetBucket    added in  v1.5.0

func (s * GetObjectAclInput ) SetBucket(v string ) * GetObjectAclInput
SetBucket sets the Bucket field's value.

func (*GetObjectAclInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetObjectAclInput ) SetExpectedBucketOwner(v string ) * GetObjectAclInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetObjectAclInput) SetKey    added in  v1.5.0

func (s * GetObjectAclInput ) SetKey(v string ) * GetObjectAclInput
SetKey sets the Key field's value.

func (*GetObjectAclInput) SetRequestPayer    added in  v1.5.0

func (s * GetObjectAclInput ) SetRequestPayer(v string ) * GetObjectAclInput
SetRequestPayer sets the RequestPayer field's value.

func (*GetObjectAclInput) SetVersionId    added in  v1.5.0

func (s * GetObjectAclInput ) SetVersionId(v string ) * GetObjectAclInput
SetVersionId sets the VersionId field's value.

func (GetObjectAclInput) String    added in  v0.9.5

func (s GetObjectAclInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectAclInput) Validate    added in  v1.1.21

func (s * GetObjectAclInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetObjectAclOutput    added in  v0.9.5
type GetObjectAclOutput struct {  // A list of grants.  Grants []* Grant `locationName:"AccessControlList" locationNameList:"Grant" type:"list"`  // Container for the bucket owner's display name and ID.  Owner * Owner `type:"structure"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"` // contains filtered or unexported fields }

func (GetObjectAclOutput) GoString    added in  v0.9.5

func (s GetObjectAclOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectAclOutput) SetGrants    added in  v1.5.0

func (s * GetObjectAclOutput ) SetGrants(v []* Grant ) * GetObjectAclOutput
SetGrants sets the Grants field's value.

func (*GetObjectAclOutput) SetOwner    added in  v1.5.0

func (s * GetObjectAclOutput ) SetOwner(v * Owner ) * GetObjectAclOutput
SetOwner sets the Owner field's value.

func (*GetObjectAclOutput) SetRequestCharged    added in  v1.5.0

func (s * GetObjectAclOutput ) SetRequestCharged(v string ) * GetObjectAclOutput
SetRequestCharged sets the RequestCharged field's value.

func (GetObjectAclOutput) String    added in  v0.9.5

func (s GetObjectAclOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetObjectAttributesInput    added in  v1.43.6
type GetObjectAttributesInput struct {  // The name of the bucket that contains the object.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The object key.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Sets the maximum number of parts to return.  MaxParts * int64 `location:"header" locationName:"x-amz-max-parts" type:"integer"`  // Specifies the fields at the root level that you want returned in the response.   // Fields that you do not specify are not returned.  //  // ObjectAttributes is a required field ObjectAttributes []* string `location:"header" locationName:"x-amz-object-attributes" type:"list" required:"true" enum:"ObjectAttributes"`  // Specifies the part after which listing should begin. Only parts with higher   // part numbers will be listed. PartNumberMarker * int64 `location:"header" locationName:"x-amz-part-number-marker" type:"integer"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Specifies the algorithm to use when encrypting the object (for example, AES256).  SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // Specifies the customer-provided encryption key for Amazon S3 to use in encrypting   // data. This value is used to store the object and then it is discarded; Amazon  // S3 does not store the encryption key. The key must be appropriate for use  // with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm  // header.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by GetObjectAttributesInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321 .   // Amazon S3 uses this header for a message integrity check to ensure that the  // encryption key was transmitted without error. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // The version ID used to reference a specific version of the object.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (GetObjectAttributesInput) GoString    added in  v1.43.6

func (s GetObjectAttributesInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectAttributesInput) SetBucket    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetBucket(v string ) * GetObjectAttributesInput
SetBucket sets the Bucket field's value.

func (*GetObjectAttributesInput) SetExpectedBucketOwner    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetExpectedBucketOwner(v string ) * GetObjectAttributesInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetObjectAttributesInput) SetKey    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetKey(v string ) * GetObjectAttributesInput
SetKey sets the Key field's value.

func (*GetObjectAttributesInput) SetMaxParts    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetMaxParts(v int64 ) * GetObjectAttributesInput
SetMaxParts sets the MaxParts field's value.

func (*GetObjectAttributesInput) SetObjectAttributes    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetObjectAttributes(v []* string ) * GetObjectAttributesInput
SetObjectAttributes sets the ObjectAttributes field's value.

func (*GetObjectAttributesInput) SetPartNumberMarker    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetPartNumberMarker(v int64 ) * GetObjectAttributesInput
SetPartNumberMarker sets the PartNumberMarker field's value.

func (*GetObjectAttributesInput) SetRequestPayer    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetRequestPayer(v string ) * GetObjectAttributesInput
SetRequestPayer sets the RequestPayer field's value.

func (*GetObjectAttributesInput) SetSSECustomerAlgorithm    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetSSECustomerAlgorithm(v string ) * GetObjectAttributesInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*GetObjectAttributesInput) SetSSECustomerKey    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetSSECustomerKey(v string ) * GetObjectAttributesInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*GetObjectAttributesInput) SetSSECustomerKeyMD5    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetSSECustomerKeyMD5(v string ) * GetObjectAttributesInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*GetObjectAttributesInput) SetVersionId    added in  v1.43.6

func (s * GetObjectAttributesInput ) SetVersionId(v string ) * GetObjectAttributesInput
SetVersionId sets the VersionId field's value.

func (GetObjectAttributesInput) String    added in  v1.43.6

func (s GetObjectAttributesInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectAttributesInput) Validate    added in  v1.43.6

func (s * GetObjectAttributesInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetObjectAttributesOutput    added in  v1.43.6
type GetObjectAttributesOutput struct {  // The checksum or digest of the object.  Checksum * Checksum `type:"structure"`  // Specifies whether the object retrieved was (true) or was not (false) a delete   // marker. If false, this response header does not appear in the response. DeleteMarker * bool `location:"header" locationName:"x-amz-delete-marker" type:"boolean"`  // An ETag is an opaque identifier assigned by a web server to a specific version   // of a resource found at a URL. ETag * string `type:"string"`  // The creation date of the object.  LastModified * time . Time `location:"header" locationName:"Last-Modified" type:"timestamp"`  // A collection of parts associated with a multipart upload.  ObjectParts * GetObjectAttributesParts `type:"structure"`  // The size of the object in bytes.  ObjectSize * int64 `type:"long"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // Provides the storage class information of the object. Amazon S3 returns this   // header for all objects except for S3 Standard storage class objects.  //  // For more information, see Storage Classes ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html ). StorageClass * string `type:"string" enum:"StorageClass"`  // The version ID of the object.  VersionId * string `location:"header" locationName:"x-amz-version-id" type:"string"` // contains filtered or unexported fields }

func (GetObjectAttributesOutput) GoString    added in  v1.43.6

func (s GetObjectAttributesOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectAttributesOutput) SetChecksum    added in  v1.43.6

func (s * GetObjectAttributesOutput ) SetChecksum(v * Checksum ) * GetObjectAttributesOutput
SetChecksum sets the Checksum field's value.

func (*GetObjectAttributesOutput) SetDeleteMarker    added in  v1.43.6

func (s * GetObjectAttributesOutput ) SetDeleteMarker(v bool ) * GetObjectAttributesOutput
SetDeleteMarker sets the DeleteMarker field's value.

func (*GetObjectAttributesOutput) SetETag    added in  v1.43.6

func (s * GetObjectAttributesOutput ) SetETag(v string ) * GetObjectAttributesOutput
SetETag sets the ETag field's value.

func (*GetObjectAttributesOutput) SetLastModified    added in  v1.43.6

func (s * GetObjectAttributesOutput ) SetLastModified(v time . Time ) * GetObjectAttributesOutput
SetLastModified sets the LastModified field's value.

func (*GetObjectAttributesOutput) SetObjectParts    added in  v1.43.6

func (s * GetObjectAttributesOutput ) SetObjectParts(v * GetObjectAttributesParts ) * GetObjectAttributesOutput
SetObjectParts sets the ObjectParts field's value.

func (*GetObjectAttributesOutput) SetObjectSize    added in  v1.43.6

func (s * GetObjectAttributesOutput ) SetObjectSize(v int64 ) * GetObjectAttributesOutput
SetObjectSize sets the ObjectSize field's value.

func (*GetObjectAttributesOutput) SetRequestCharged    added in  v1.43.6

func (s * GetObjectAttributesOutput ) SetRequestCharged(v string ) * GetObjectAttributesOutput
SetRequestCharged sets the RequestCharged field's value.

func (*GetObjectAttributesOutput) SetStorageClass    added in  v1.43.6

func (s * GetObjectAttributesOutput ) SetStorageClass(v string ) * GetObjectAttributesOutput
SetStorageClass sets the StorageClass field's value.

func (*GetObjectAttributesOutput) SetVersionId    added in  v1.43.6

func (s * GetObjectAttributesOutput ) SetVersionId(v string ) * GetObjectAttributesOutput
SetVersionId sets the VersionId field's value.

func (GetObjectAttributesOutput) String    added in  v1.43.6

func (s GetObjectAttributesOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetObjectAttributesParts    added in  v1.43.6
type GetObjectAttributesParts struct {  // Indicates whether the returned list of parts is truncated. A value of true   // indicates that the list was truncated. A list can be truncated if the number  // of parts exceeds the limit returned in the MaxParts element. IsTruncated * bool `type:"boolean"`  // The maximum number of parts allowed in the response.  MaxParts * int64 `type:"integer"`  // When a list is truncated, this element specifies the last part in the list,   // as well as the value to use for the PartNumberMarker request parameter in  // a subsequent request. NextPartNumberMarker * int64 `type:"integer"`  // The marker for the current part.  PartNumberMarker * int64 `type:"integer"`  // A container for elements related to a particular part. A response can contain   // zero or more Parts elements. Parts []* ObjectPart `locationName:"Part" type:"list" flattened:"true"`  // The total number of parts.  TotalPartsCount * int64 `locationName:"PartsCount" type:"integer"` // contains filtered or unexported fields }
A collection of parts associated with a multipart upload.

func (GetObjectAttributesParts) GoString    added in  v1.43.6

func (s GetObjectAttributesParts ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectAttributesParts) SetIsTruncated    added in  v1.43.6

func (s * GetObjectAttributesParts ) SetIsTruncated(v bool ) * GetObjectAttributesParts
SetIsTruncated sets the IsTruncated field's value.

func (*GetObjectAttributesParts) SetMaxParts    added in  v1.43.6

func (s * GetObjectAttributesParts ) SetMaxParts(v int64 ) * GetObjectAttributesParts
SetMaxParts sets the MaxParts field's value.

func (*GetObjectAttributesParts) SetNextPartNumberMarker    added in  v1.43.6

func (s * GetObjectAttributesParts ) SetNextPartNumberMarker(v int64 ) * GetObjectAttributesParts
SetNextPartNumberMarker sets the NextPartNumberMarker field's value.

func (*GetObjectAttributesParts) SetPartNumberMarker    added in  v1.43.6

func (s * GetObjectAttributesParts ) SetPartNumberMarker(v int64 ) * GetObjectAttributesParts
SetPartNumberMarker sets the PartNumberMarker field's value.

func (*GetObjectAttributesParts) SetParts    added in  v1.43.6

func (s * GetObjectAttributesParts ) SetParts(v []* ObjectPart ) * GetObjectAttributesParts
SetParts sets the Parts field's value.

func (*GetObjectAttributesParts) SetTotalPartsCount    added in  v1.43.6

func (s * GetObjectAttributesParts ) SetTotalPartsCount(v int64 ) * GetObjectAttributesParts
SetTotalPartsCount sets the TotalPartsCount field's value.

func (GetObjectAttributesParts) String    added in  v1.43.6

func (s GetObjectAttributesParts ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetObjectInput
type GetObjectInput struct {  // The bucket name containing the object.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When using an Object Lambda access point the hostname takes the form AccessPointName-AccountId.s3-object-lambda.Region.amazonaws.com.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // To retrieve the checksum, this mode must be enabled.   //  // The AWS SDK for Go v1 does not support automatic response payload checksum  // validation. This feature is available in the AWS SDK for Go v2. ChecksumMode * string `location:"header" locationName:"x-amz-checksum-mode" type:"string" enum:"ChecksumMode"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Return the object only if its entity tag (ETag) is the same as the one specified;   // otherwise, return a 412 (precondition failed) error. IfMatch * string `location:"header" locationName:"If-Match" type:"string"`  // Return the object only if it has been modified since the specified time;   // otherwise, return a 304 (not modified) error. IfModifiedSince * time . Time `location:"header" locationName:"If-Modified-Since" type:"timestamp"`  // Return the object only if its entity tag (ETag) is different from the one   // specified; otherwise, return a 304 (not modified) error. IfNoneMatch * string `location:"header" locationName:"If-None-Match" type:"string"`  // Return the object only if it has not been modified since the specified time;   // otherwise, return a 412 (precondition failed) error. IfUnmodifiedSince * time . Time `location:"header" locationName:"If-Unmodified-Since" type:"timestamp"`  // Key of the object to get.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Part number of the object being read. This is a positive integer between   // 1 and 10,000. Effectively performs a 'ranged' GET request for the part specified.  // Useful for downloading just a part of an object. PartNumber * int64 `location:"querystring" locationName:"partNumber" type:"integer"`  // Downloads the specified range bytes of an object. For more information about   // the HTTP Range header, see https://www.rfc-editor.org/rfc/rfc9110.html#name-range  // ( https://www.rfc-editor.org/rfc/rfc9110.html#name-range ).  //  // Amazon S3 doesn't support retrieving multiple ranges of data per GET request. Range * string `location:"header" locationName:"Range" type:"string"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Sets the Cache-Control header of the response.  ResponseCacheControl * string `location:"querystring" locationName:"response-cache-control" type:"string"`  // Sets the Content-Disposition header of the response  ResponseContentDisposition * string `location:"querystring" locationName:"response-content-disposition" type:"string"`  // Sets the Content-Encoding header of the response.  ResponseContentEncoding * string `location:"querystring" locationName:"response-content-encoding" type:"string"`  // Sets the Content-Language header of the response.  ResponseContentLanguage * string `location:"querystring" locationName:"response-content-language" type:"string"`  // Sets the Content-Type header of the response.  ResponseContentType * string `location:"querystring" locationName:"response-content-type" type:"string"`  // Sets the Expires header of the response.  ResponseExpires * time . Time `location:"querystring" locationName:"response-expires" type:"timestamp" timestampFormat:"rfc822"`  // Specifies the algorithm to use to when decrypting the object (for example,   // AES256). SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // Specifies the customer-provided encryption key for Amazon S3 used to encrypt   // the data. This value is used to decrypt the object when recovering it and  // must match the one used when storing the data. The key must be appropriate  // for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm  // header.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by GetObjectInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321 .   // Amazon S3 uses this header for a message integrity check to ensure that the  // encryption key was transmitted without error. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // VersionId used to reference a specific version of the object.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (GetObjectInput) GoString    added in  v0.6.5

func (s GetObjectInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectInput) SetBucket    added in  v1.5.0

func (s * GetObjectInput ) SetBucket(v string ) * GetObjectInput
SetBucket sets the Bucket field's value.

func (*GetObjectInput) SetChecksumMode    added in  v1.43.6

func (s * GetObjectInput ) SetChecksumMode(v string ) * GetObjectInput
SetChecksumMode sets the ChecksumMode field's value.

func (*GetObjectInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetObjectInput ) SetExpectedBucketOwner(v string ) * GetObjectInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetObjectInput) SetIfMatch    added in  v1.5.0

func (s * GetObjectInput ) SetIfMatch(v string ) * GetObjectInput
SetIfMatch sets the IfMatch field's value.

func (*GetObjectInput) SetIfModifiedSince    added in  v1.5.0

func (s * GetObjectInput ) SetIfModifiedSince(v time . Time ) * GetObjectInput
SetIfModifiedSince sets the IfModifiedSince field's value.

func (*GetObjectInput) SetIfNoneMatch    added in  v1.5.0

func (s * GetObjectInput ) SetIfNoneMatch(v string ) * GetObjectInput
SetIfNoneMatch sets the IfNoneMatch field's value.

func (*GetObjectInput) SetIfUnmodifiedSince    added in  v1.5.0

func (s * GetObjectInput ) SetIfUnmodifiedSince(v time . Time ) * GetObjectInput
SetIfUnmodifiedSince sets the IfUnmodifiedSince field's value.

func (*GetObjectInput) SetKey    added in  v1.5.0

func (s * GetObjectInput ) SetKey(v string ) * GetObjectInput
SetKey sets the Key field's value.

func (*GetObjectInput) SetPartNumber    added in  v1.5.0

func (s * GetObjectInput ) SetPartNumber(v int64 ) * GetObjectInput
SetPartNumber sets the PartNumber field's value.

func (*GetObjectInput) SetRange    added in  v1.5.0

func (s * GetObjectInput ) SetRange(v string ) * GetObjectInput
SetRange sets the Range field's value.

func (*GetObjectInput) SetRequestPayer    added in  v1.5.0

func (s * GetObjectInput ) SetRequestPayer(v string ) * GetObjectInput
SetRequestPayer sets the RequestPayer field's value.

func (*GetObjectInput) SetResponseCacheControl    added in  v1.5.0

func (s * GetObjectInput ) SetResponseCacheControl(v string ) * GetObjectInput
SetResponseCacheControl sets the ResponseCacheControl field's value.

func (*GetObjectInput) SetResponseContentDisposition    added in  v1.5.0

func (s * GetObjectInput ) SetResponseContentDisposition(v string ) * GetObjectInput
SetResponseContentDisposition sets the ResponseContentDisposition field's value.

func (*GetObjectInput) SetResponseContentEncoding    added in  v1.5.0

func (s * GetObjectInput ) SetResponseContentEncoding(v string ) * GetObjectInput
SetResponseContentEncoding sets the ResponseContentEncoding field's value.

func (*GetObjectInput) SetResponseContentLanguage    added in  v1.5.0

func (s * GetObjectInput ) SetResponseContentLanguage(v string ) * GetObjectInput
SetResponseContentLanguage sets the ResponseContentLanguage field's value.

func (*GetObjectInput) SetResponseContentType    added in  v1.5.0

func (s * GetObjectInput ) SetResponseContentType(v string ) * GetObjectInput
SetResponseContentType sets the ResponseContentType field's value.

func (*GetObjectInput) SetResponseExpires    added in  v1.5.0

func (s * GetObjectInput ) SetResponseExpires(v time . Time ) * GetObjectInput
SetResponseExpires sets the ResponseExpires field's value.

func (*GetObjectInput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * GetObjectInput ) SetSSECustomerAlgorithm(v string ) * GetObjectInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*GetObjectInput) SetSSECustomerKey    added in  v1.5.0

func (s * GetObjectInput ) SetSSECustomerKey(v string ) * GetObjectInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*GetObjectInput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * GetObjectInput ) SetSSECustomerKeyMD5(v string ) * GetObjectInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*GetObjectInput) SetVersionId    added in  v1.5.0

func (s * GetObjectInput ) SetVersionId(v string ) * GetObjectInput
SetVersionId sets the VersionId field's value.

func (GetObjectInput) String    added in  v0.6.5

func (s GetObjectInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectInput) Validate    added in  v1.1.21

func (s * GetObjectInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetObjectLegalHoldInput    added in  v1.15.83
type GetObjectLegalHoldInput struct {  // The bucket name containing the object whose legal hold status you want to   // retrieve.  //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The key name for the object whose legal hold status you want to retrieve.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // The version ID of the object whose legal hold status you want to retrieve.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (GetObjectLegalHoldInput) GoString    added in  v1.15.83

func (s GetObjectLegalHoldInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectLegalHoldInput) SetBucket    added in  v1.15.83

func (s * GetObjectLegalHoldInput ) SetBucket(v string ) * GetObjectLegalHoldInput
SetBucket sets the Bucket field's value.

func (*GetObjectLegalHoldInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetObjectLegalHoldInput ) SetExpectedBucketOwner(v string ) * GetObjectLegalHoldInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetObjectLegalHoldInput) SetKey    added in  v1.15.83

func (s * GetObjectLegalHoldInput ) SetKey(v string ) * GetObjectLegalHoldInput
SetKey sets the Key field's value.

func (*GetObjectLegalHoldInput) SetRequestPayer    added in  v1.15.83

func (s * GetObjectLegalHoldInput ) SetRequestPayer(v string ) * GetObjectLegalHoldInput
SetRequestPayer sets the RequestPayer field's value.

func (*GetObjectLegalHoldInput) SetVersionId    added in  v1.15.83

func (s * GetObjectLegalHoldInput ) SetVersionId(v string ) * GetObjectLegalHoldInput
SetVersionId sets the VersionId field's value.

func (GetObjectLegalHoldInput) String    added in  v1.15.83

func (s GetObjectLegalHoldInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectLegalHoldInput) Validate    added in  v1.15.83

func (s * GetObjectLegalHoldInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetObjectLegalHoldOutput    added in  v1.15.83
type GetObjectLegalHoldOutput struct {  // The current legal hold status for the specified object.  LegalHold * ObjectLockLegalHold `type:"structure"` // contains filtered or unexported fields }

func (GetObjectLegalHoldOutput) GoString    added in  v1.15.83

func (s GetObjectLegalHoldOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectLegalHoldOutput) SetLegalHold    added in  v1.15.83

func (s * GetObjectLegalHoldOutput ) SetLegalHold(v * ObjectLockLegalHold ) * GetObjectLegalHoldOutput
SetLegalHold sets the LegalHold field's value.

func (GetObjectLegalHoldOutput) String    added in  v1.15.83

func (s GetObjectLegalHoldOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetObjectLockConfigurationInput    added in  v1.15.83
type GetObjectLockConfigurationInput struct {  // The bucket whose Object Lock configuration you want to retrieve.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetObjectLockConfigurationInput) GoString    added in  v1.15.83

func (s GetObjectLockConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectLockConfigurationInput) SetBucket    added in  v1.15.83

func (s * GetObjectLockConfigurationInput ) SetBucket(v string ) * GetObjectLockConfigurationInput
SetBucket sets the Bucket field's value.

func (*GetObjectLockConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetObjectLockConfigurationInput ) SetExpectedBucketOwner(v string ) * GetObjectLockConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetObjectLockConfigurationInput) String    added in  v1.15.83

func (s GetObjectLockConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectLockConfigurationInput) Validate    added in  v1.15.83

func (s * GetObjectLockConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetObjectLockConfigurationOutput    added in  v1.15.83
type GetObjectLockConfigurationOutput struct {  // The specified bucket's Object Lock configuration.  ObjectLockConfiguration * ObjectLockConfiguration `type:"structure"` // contains filtered or unexported fields }

func (GetObjectLockConfigurationOutput) GoString    added in  v1.15.83

func (s GetObjectLockConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectLockConfigurationOutput) SetObjectLockConfiguration    added in  v1.15.83

func (s * GetObjectLockConfigurationOutput ) SetObjectLockConfiguration(v * ObjectLockConfiguration ) * GetObjectLockConfigurationOutput
SetObjectLockConfiguration sets the ObjectLockConfiguration field's value.

func (GetObjectLockConfigurationOutput) String    added in  v1.15.83

func (s GetObjectLockConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetObjectOutput
type GetObjectOutput struct {  // Indicates that a range of bytes was specified.  AcceptRanges * string `location:"header" locationName:"accept-ranges" type:"string"`  // Object data.  Body io . ReadCloser `type:"blob"`  // Indicates whether the object uses an S3 Bucket Key for server-side encryption   // with Key Management Service (KMS) keys (SSE-KMS). BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // Specifies caching behavior along the request/reply chain.  CacheControl * string `location:"header" locationName:"Cache-Control" type:"string"`  // The base64-encoded, 32-bit CRC32 checksum of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `location:"header" locationName:"x-amz-checksum-crc32" type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `location:"header" locationName:"x-amz-checksum-crc32c" type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `location:"header" locationName:"x-amz-checksum-sha1" type:"string"`  // The base64-encoded, 256-bit SHA-256 digest of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `location:"header" locationName:"x-amz-checksum-sha256" type:"string"`  // Specifies presentational information for the object.  ContentDisposition * string `location:"header" locationName:"Content-Disposition" type:"string"`  // Specifies what content encodings have been applied to the object and thus   // what decoding mechanisms must be applied to obtain the media-type referenced  // by the Content-Type header field. ContentEncoding * string `location:"header" locationName:"Content-Encoding" type:"string"`  // The language the content is in.  ContentLanguage * string `location:"header" locationName:"Content-Language" type:"string"`  // Size of the body in bytes.  ContentLength * int64 `location:"header" locationName:"Content-Length" type:"long"`  // The portion of the object returned in the response.  ContentRange * string `location:"header" locationName:"Content-Range" type:"string"`  // A standard MIME type describing the format of the object data.  ContentType * string `location:"header" locationName:"Content-Type" type:"string"`  // Specifies whether the object retrieved was (true) or was not (false) a Delete   // Marker. If false, this response header does not appear in the response. DeleteMarker * bool `location:"header" locationName:"x-amz-delete-marker" type:"boolean"`  // An entity tag (ETag) is an opaque identifier assigned by a web server to   // a specific version of a resource found at a URL. ETag * string `location:"header" locationName:"ETag" type:"string"`  // If the object expiration is configured (see PUT Bucket lifecycle), the response   // includes this header. It includes the expiry-date and rule-id key-value pairs  // providing object expiration information. The value of the rule-id is URL-encoded. Expiration * string `location:"header" locationName:"x-amz-expiration" type:"string"`  // The date and time at which the object is no longer cacheable.  Expires * string `location:"header" locationName:"Expires" type:"string"`  // Creation date of the object.  LastModified * time . Time `location:"header" locationName:"Last-Modified" type:"timestamp"`  // A map of metadata to store with the object in S3.   //  // By default unmarshaled keys are written as a map keys in following canonicalized format:  // the first letter and any letter following a hyphen will be capitalized, and the rest as lowercase.  // Set `aws.Config.LowerCaseHeaderMaps` to `true` to write unmarshaled keys to the map as lowercase. Metadata map[ string ]* string `location:"headers" locationName:"x-amz-meta-" type:"map"`  // This is set to the number of metadata entries not returned in x-amz-meta   // headers. This can happen if you create metadata using an API like SOAP that  // supports more flexible metadata than the REST API. For example, using SOAP,  // you can create metadata whose values are not legal HTTP headers. MissingMeta * int64 `location:"header" locationName:"x-amz-missing-meta" type:"integer"`  // Indicates whether this object has an active legal hold. This field is only   // returned if you have permission to view an object's legal hold status. ObjectLockLegalHoldStatus * string `location:"header" locationName:"x-amz-object-lock-legal-hold" type:"string" enum:"ObjectLockLegalHoldStatus"`  // The Object Lock mode currently in place for this object.  ObjectLockMode * string `location:"header" locationName:"x-amz-object-lock-mode" type:"string" enum:"ObjectLockMode"`  // The date and time when this object's Object Lock will expire.  ObjectLockRetainUntilDate * time . Time `location:"header" locationName:"x-amz-object-lock-retain-until-date" type:"timestamp" timestampFormat:"iso8601"`  // The count of parts this object has. This value is only returned if you specify   // partNumber in your request and the object was uploaded as a multipart upload. PartsCount * int64 `location:"header" locationName:"x-amz-mp-parts-count" type:"integer"`  // Amazon S3 can return this if your request involves a bucket that is either   // a source or destination in a replication rule. ReplicationStatus * string `location:"header" locationName:"x-amz-replication-status" type:"string" enum:"ReplicationStatus"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // Provides information about object restoration action and expiration time   // of the restored object copy. Restore * string `location:"header" locationName:"x-amz-restore" type:"string"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header confirming the encryption algorithm  // used. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header to provide round-trip message integrity  // verification of the customer-provided encryption key. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // If present, specifies the ID of the Key Management Service (KMS) symmetric   // encryption customer managed key that was used for the object.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by GetObjectOutput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms, aws:kms:dsse). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"`  // Provides storage class information of the object. Amazon S3 returns this   // header for all objects except for S3 Standard storage class objects. StorageClass * string `location:"header" locationName:"x-amz-storage-class" type:"string" enum:"StorageClass"`  // The number of tags, if any, on the object.  TagCount * int64 `location:"header" locationName:"x-amz-tagging-count" type:"integer"`  // Version of the object.  VersionId * string `location:"header" locationName:"x-amz-version-id" type:"string"`  // If the bucket is configured as a website, redirects requests for this object   // to another object in the same bucket or to an external URL. Amazon S3 stores  // the value of this header in the object metadata. WebsiteRedirectLocation * string `location:"header" locationName:"x-amz-website-redirect-location" type:"string"` // contains filtered or unexported fields }

func (GetObjectOutput) GoString    added in  v0.6.5

func (s GetObjectOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectOutput) SetAcceptRanges    added in  v1.5.0

func (s * GetObjectOutput ) SetAcceptRanges(v string ) * GetObjectOutput
SetAcceptRanges sets the AcceptRanges field's value.

func (*GetObjectOutput) SetBody    added in  v1.5.0

func (s * GetObjectOutput ) SetBody(v io . ReadCloser ) * GetObjectOutput
SetBody sets the Body field's value.

func (*GetObjectOutput) SetBucketKeyEnabled    added in  v1.35.37

func (s * GetObjectOutput ) SetBucketKeyEnabled(v bool ) * GetObjectOutput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*GetObjectOutput) SetCacheControl    added in  v1.5.0

func (s * GetObjectOutput ) SetCacheControl(v string ) * GetObjectOutput
SetCacheControl sets the CacheControl field's value.

func (*GetObjectOutput) SetChecksumCRC32    added in  v1.43.6

func (s * GetObjectOutput ) SetChecksumCRC32(v string ) * GetObjectOutput
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*GetObjectOutput) SetChecksumCRC32C    added in  v1.43.6

func (s * GetObjectOutput ) SetChecksumCRC32C(v string ) * GetObjectOutput
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*GetObjectOutput) SetChecksumSHA1    added in  v1.43.6

func (s * GetObjectOutput ) SetChecksumSHA1(v string ) * GetObjectOutput
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*GetObjectOutput) SetChecksumSHA256    added in  v1.43.6

func (s * GetObjectOutput ) SetChecksumSHA256(v string ) * GetObjectOutput
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*GetObjectOutput) SetContentDisposition    added in  v1.5.0

func (s * GetObjectOutput ) SetContentDisposition(v string ) * GetObjectOutput
SetContentDisposition sets the ContentDisposition field's value.

func (*GetObjectOutput) SetContentEncoding    added in  v1.5.0

func (s * GetObjectOutput ) SetContentEncoding(v string ) * GetObjectOutput
SetContentEncoding sets the ContentEncoding field's value.

func (*GetObjectOutput) SetContentLanguage    added in  v1.5.0

func (s * GetObjectOutput ) SetContentLanguage(v string ) * GetObjectOutput
SetContentLanguage sets the ContentLanguage field's value.

func (*GetObjectOutput) SetContentLength    added in  v1.5.0

func (s * GetObjectOutput ) SetContentLength(v int64 ) * GetObjectOutput
SetContentLength sets the ContentLength field's value.

func (*GetObjectOutput) SetContentRange    added in  v1.5.0

func (s * GetObjectOutput ) SetContentRange(v string ) * GetObjectOutput
SetContentRange sets the ContentRange field's value.

func (*GetObjectOutput) SetContentType    added in  v1.5.0

func (s * GetObjectOutput ) SetContentType(v string ) * GetObjectOutput
SetContentType sets the ContentType field's value.

func (*GetObjectOutput) SetDeleteMarker    added in  v1.5.0

func (s * GetObjectOutput ) SetDeleteMarker(v bool ) * GetObjectOutput
SetDeleteMarker sets the DeleteMarker field's value.

func (*GetObjectOutput) SetETag    added in  v1.5.0

func (s * GetObjectOutput ) SetETag(v string ) * GetObjectOutput
SetETag sets the ETag field's value.

func (*GetObjectOutput) SetExpiration    added in  v1.5.0

func (s * GetObjectOutput ) SetExpiration(v string ) * GetObjectOutput
SetExpiration sets the Expiration field's value.

func (*GetObjectOutput) SetExpires    added in  v1.5.0

func (s * GetObjectOutput ) SetExpires(v string ) * GetObjectOutput
SetExpires sets the Expires field's value.

func (*GetObjectOutput) SetLastModified    added in  v1.5.0

func (s * GetObjectOutput ) SetLastModified(v time . Time ) * GetObjectOutput
SetLastModified sets the LastModified field's value.

func (*GetObjectOutput) SetMetadata    added in  v1.5.0

func (s * GetObjectOutput ) SetMetadata(v map[ string ]* string ) * GetObjectOutput
SetMetadata sets the Metadata field's value.

func (*GetObjectOutput) SetMissingMeta    added in  v1.5.0

func (s * GetObjectOutput ) SetMissingMeta(v int64 ) * GetObjectOutput
SetMissingMeta sets the MissingMeta field's value.

func (*GetObjectOutput) SetObjectLockLegalHoldStatus    added in  v1.15.83

func (s * GetObjectOutput ) SetObjectLockLegalHoldStatus(v string ) * GetObjectOutput
SetObjectLockLegalHoldStatus sets the ObjectLockLegalHoldStatus field's value.

func (*GetObjectOutput) SetObjectLockMode    added in  v1.15.83

func (s * GetObjectOutput ) SetObjectLockMode(v string ) * GetObjectOutput
SetObjectLockMode sets the ObjectLockMode field's value.

func (*GetObjectOutput) SetObjectLockRetainUntilDate    added in  v1.15.83

func (s * GetObjectOutput ) SetObjectLockRetainUntilDate(v time . Time ) * GetObjectOutput
SetObjectLockRetainUntilDate sets the ObjectLockRetainUntilDate field's value.

func (*GetObjectOutput) SetPartsCount    added in  v1.5.0

func (s * GetObjectOutput ) SetPartsCount(v int64 ) * GetObjectOutput
SetPartsCount sets the PartsCount field's value.

func (*GetObjectOutput) SetReplicationStatus    added in  v1.5.0

func (s * GetObjectOutput ) SetReplicationStatus(v string ) * GetObjectOutput
SetReplicationStatus sets the ReplicationStatus field's value.

func (*GetObjectOutput) SetRequestCharged    added in  v1.5.0

func (s * GetObjectOutput ) SetRequestCharged(v string ) * GetObjectOutput
SetRequestCharged sets the RequestCharged field's value.

func (*GetObjectOutput) SetRestore    added in  v1.5.0

func (s * GetObjectOutput ) SetRestore(v string ) * GetObjectOutput
SetRestore sets the Restore field's value.

func (*GetObjectOutput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * GetObjectOutput ) SetSSECustomerAlgorithm(v string ) * GetObjectOutput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*GetObjectOutput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * GetObjectOutput ) SetSSECustomerKeyMD5(v string ) * GetObjectOutput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*GetObjectOutput) SetSSEKMSKeyId    added in  v1.5.0

func (s * GetObjectOutput ) SetSSEKMSKeyId(v string ) * GetObjectOutput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*GetObjectOutput) SetServerSideEncryption    added in  v1.5.0

func (s * GetObjectOutput ) SetServerSideEncryption(v string ) * GetObjectOutput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (*GetObjectOutput) SetStorageClass    added in  v1.5.0

func (s * GetObjectOutput ) SetStorageClass(v string ) * GetObjectOutput
SetStorageClass sets the StorageClass field's value.

func (*GetObjectOutput) SetTagCount    added in  v1.5.11

func (s * GetObjectOutput ) SetTagCount(v int64 ) * GetObjectOutput
SetTagCount sets the TagCount field's value.

func (*GetObjectOutput) SetVersionId    added in  v1.5.0

func (s * GetObjectOutput ) SetVersionId(v string ) * GetObjectOutput
SetVersionId sets the VersionId field's value.

func (*GetObjectOutput) SetWebsiteRedirectLocation    added in  v1.5.0

func (s * GetObjectOutput ) SetWebsiteRedirectLocation(v string ) * GetObjectOutput
SetWebsiteRedirectLocation sets the WebsiteRedirectLocation field's value.

func (GetObjectOutput) String    added in  v0.6.5

func (s GetObjectOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetObjectRetentionInput    added in  v1.15.83
type GetObjectRetentionInput struct {  // The bucket name containing the object whose retention settings you want to   // retrieve.  //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The key name for the object whose retention settings you want to retrieve.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // The version ID for the object whose retention settings you want to retrieve.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (GetObjectRetentionInput) GoString    added in  v1.15.83

func (s GetObjectRetentionInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectRetentionInput) SetBucket    added in  v1.15.83

func (s * GetObjectRetentionInput ) SetBucket(v string ) * GetObjectRetentionInput
SetBucket sets the Bucket field's value.

func (*GetObjectRetentionInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetObjectRetentionInput ) SetExpectedBucketOwner(v string ) * GetObjectRetentionInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetObjectRetentionInput) SetKey    added in  v1.15.83

func (s * GetObjectRetentionInput ) SetKey(v string ) * GetObjectRetentionInput
SetKey sets the Key field's value.

func (*GetObjectRetentionInput) SetRequestPayer    added in  v1.15.83

func (s * GetObjectRetentionInput ) SetRequestPayer(v string ) * GetObjectRetentionInput
SetRequestPayer sets the RequestPayer field's value.

func (*GetObjectRetentionInput) SetVersionId    added in  v1.15.83

func (s * GetObjectRetentionInput ) SetVersionId(v string ) * GetObjectRetentionInput
SetVersionId sets the VersionId field's value.

func (GetObjectRetentionInput) String    added in  v1.15.83

func (s GetObjectRetentionInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectRetentionInput) Validate    added in  v1.15.83

func (s * GetObjectRetentionInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetObjectRetentionOutput    added in  v1.15.83
type GetObjectRetentionOutput struct {  // The container element for an object's retention settings.  Retention * ObjectLockRetention `type:"structure"` // contains filtered or unexported fields }

func (GetObjectRetentionOutput) GoString    added in  v1.15.83

func (s GetObjectRetentionOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectRetentionOutput) SetRetention    added in  v1.15.83

func (s * GetObjectRetentionOutput ) SetRetention(v * ObjectLockRetention ) * GetObjectRetentionOutput
SetRetention sets the Retention field's value.

func (GetObjectRetentionOutput) String    added in  v1.15.83

func (s GetObjectRetentionOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetObjectTaggingInput    added in  v1.5.11
type GetObjectTaggingInput struct {  // The bucket name containing the object for which to get the tagging information.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Object key for which to get the tagging information.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // The versionId of the object for which to get the tagging information.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (GetObjectTaggingInput) GoString    added in  v1.5.11

func (s GetObjectTaggingInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectTaggingInput) SetBucket    added in  v1.5.11

func (s * GetObjectTaggingInput ) SetBucket(v string ) * GetObjectTaggingInput
SetBucket sets the Bucket field's value.

func (*GetObjectTaggingInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetObjectTaggingInput ) SetExpectedBucketOwner(v string ) * GetObjectTaggingInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetObjectTaggingInput) SetKey    added in  v1.5.11

func (s * GetObjectTaggingInput ) SetKey(v string ) * GetObjectTaggingInput
SetKey sets the Key field's value.

func (*GetObjectTaggingInput) SetRequestPayer    added in  v1.37.20

func (s * GetObjectTaggingInput ) SetRequestPayer(v string ) * GetObjectTaggingInput
SetRequestPayer sets the RequestPayer field's value.

func (*GetObjectTaggingInput) SetVersionId    added in  v1.5.11

func (s * GetObjectTaggingInput ) SetVersionId(v string ) * GetObjectTaggingInput
SetVersionId sets the VersionId field's value.

func (GetObjectTaggingInput) String    added in  v1.5.11

func (s GetObjectTaggingInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectTaggingInput) Validate    added in  v1.5.11

func (s * GetObjectTaggingInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetObjectTaggingOutput    added in  v1.5.11
type GetObjectTaggingOutput struct {  // Contains the tag set.   //  // TagSet is a required field TagSet []* Tag `locationNameList:"Tag" type:"list" required:"true"`  // The versionId of the object for which you got the tagging information.  VersionId * string `location:"header" locationName:"x-amz-version-id" type:"string"` // contains filtered or unexported fields }

func (GetObjectTaggingOutput) GoString    added in  v1.5.11

func (s GetObjectTaggingOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectTaggingOutput) SetTagSet    added in  v1.5.11

func (s * GetObjectTaggingOutput ) SetTagSet(v []* Tag ) * GetObjectTaggingOutput
SetTagSet sets the TagSet field's value.

func (*GetObjectTaggingOutput) SetVersionId    added in  v1.5.11

func (s * GetObjectTaggingOutput ) SetVersionId(v string ) * GetObjectTaggingOutput
SetVersionId sets the VersionId field's value.

func (GetObjectTaggingOutput) String    added in  v1.5.11

func (s GetObjectTaggingOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetObjectTorrentInput
type GetObjectTorrentInput struct {  // The name of the bucket containing the object for which to get the torrent   // files.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The object key for which to get the information.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"` // contains filtered or unexported fields }

func (GetObjectTorrentInput) GoString    added in  v0.6.5

func (s GetObjectTorrentInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectTorrentInput) SetBucket    added in  v1.5.0

func (s * GetObjectTorrentInput ) SetBucket(v string ) * GetObjectTorrentInput
SetBucket sets the Bucket field's value.

func (*GetObjectTorrentInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetObjectTorrentInput ) SetExpectedBucketOwner(v string ) * GetObjectTorrentInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*GetObjectTorrentInput) SetKey    added in  v1.5.0

func (s * GetObjectTorrentInput ) SetKey(v string ) * GetObjectTorrentInput
SetKey sets the Key field's value.

func (*GetObjectTorrentInput) SetRequestPayer    added in  v1.5.0

func (s * GetObjectTorrentInput ) SetRequestPayer(v string ) * GetObjectTorrentInput
SetRequestPayer sets the RequestPayer field's value.

func (GetObjectTorrentInput) String    added in  v0.6.5

func (s GetObjectTorrentInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectTorrentInput) Validate    added in  v1.1.21

func (s * GetObjectTorrentInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetObjectTorrentOutput
type GetObjectTorrentOutput struct {  // A Bencoded dictionary as defined by the BitTorrent specification  Body io . ReadCloser `type:"blob"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"` // contains filtered or unexported fields }

func (GetObjectTorrentOutput) GoString    added in  v0.6.5

func (s GetObjectTorrentOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetObjectTorrentOutput) SetBody    added in  v1.5.0

func (s * GetObjectTorrentOutput ) SetBody(v io . ReadCloser ) * GetObjectTorrentOutput
SetBody sets the Body field's value.

func (*GetObjectTorrentOutput) SetRequestCharged    added in  v1.5.0

func (s * GetObjectTorrentOutput ) SetRequestCharged(v string ) * GetObjectTorrentOutput
SetRequestCharged sets the RequestCharged field's value.

func (GetObjectTorrentOutput) String    added in  v0.6.5

func (s GetObjectTorrentOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GetPublicAccessBlockInput    added in  v1.15.77
type GetPublicAccessBlockInput struct {  // The name of the Amazon S3 bucket whose PublicAccessBlock configuration you   // want to retrieve.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (GetPublicAccessBlockInput) GoString    added in  v1.15.77

func (s GetPublicAccessBlockInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetPublicAccessBlockInput) SetBucket    added in  v1.15.77

func (s * GetPublicAccessBlockInput ) SetBucket(v string ) * GetPublicAccessBlockInput
SetBucket sets the Bucket field's value.

func (*GetPublicAccessBlockInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * GetPublicAccessBlockInput ) SetExpectedBucketOwner(v string ) * GetPublicAccessBlockInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (GetPublicAccessBlockInput) String    added in  v1.15.77

func (s GetPublicAccessBlockInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetPublicAccessBlockInput) Validate    added in  v1.15.77

func (s * GetPublicAccessBlockInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type GetPublicAccessBlockOutput    added in  v1.15.77
type GetPublicAccessBlockOutput struct {  // The PublicAccessBlock configuration currently in effect for this Amazon S3   // bucket. PublicAccessBlockConfiguration * PublicAccessBlockConfiguration `type:"structure"` // contains filtered or unexported fields }

func (GetPublicAccessBlockOutput) GoString    added in  v1.15.77

func (s GetPublicAccessBlockOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GetPublicAccessBlockOutput) SetPublicAccessBlockConfiguration    added in  v1.15.77

func (s * GetPublicAccessBlockOutput ) SetPublicAccessBlockConfiguration(v * PublicAccessBlockConfiguration ) * GetPublicAccessBlockOutput
SetPublicAccessBlockConfiguration sets the PublicAccessBlockConfiguration field's value.

func (GetPublicAccessBlockOutput) String    added in  v1.15.77

func (s GetPublicAccessBlockOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type GlacierJobParameters    added in  v1.5.10
type GlacierJobParameters struct {  // Retrieval tier at which the restore will be processed.   //  // Tier is a required field Tier * string `type:"string" required:"true" enum:"Tier"` // contains filtered or unexported fields }
Container for S3 Glacier job parameters.

func (GlacierJobParameters) GoString    added in  v1.5.10

func (s GlacierJobParameters ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GlacierJobParameters) SetTier    added in  v1.5.10

func (s * GlacierJobParameters ) SetTier(v string ) * GlacierJobParameters
SetTier sets the Tier field's value.

func (GlacierJobParameters) String    added in  v1.5.10

func (s GlacierJobParameters ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*GlacierJobParameters) Validate    added in  v1.5.10

func (s * GlacierJobParameters ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type Grant
type Grant struct {  // The person being granted permissions.  Grantee * Grantee `type:"structure" xmlPrefix:"xsi" xmlURI:"http://www.w3.org/2001/XMLSchema-instance"`  // Specifies the permission given to the grantee.  Permission * string `type:"string" enum:"Permission"` // contains filtered or unexported fields }
Container for grant information.

func (Grant) GoString    added in  v0.6.5

func (s Grant ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Grant) SetGrantee    added in  v1.5.0

func (s * Grant ) SetGrantee(v * Grantee ) * Grant
SetGrantee sets the Grantee field's value.

func (*Grant) SetPermission    added in  v1.5.0

func (s * Grant ) SetPermission(v string ) * Grant
SetPermission sets the Permission field's value.

func (Grant) String    added in  v0.6.5

func (s Grant ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Grant) Validate    added in  v1.1.21

func (s * Grant ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type Grantee
type Grantee struct {  // Screen name of the grantee.  DisplayName * string `type:"string"`  // Email address of the grantee.   //  // Using email addresses to specify a grantee is only supported in the following  // Amazon Web Services Regions:  //  //    * US East (N. Virginia)  //  //    * US West (N. California)  //  //    * US West (Oregon)  //  //    * Asia Pacific (Singapore)  //  //    * Asia Pacific (Sydney)  //  //    * Asia Pacific (Tokyo)  //  //    * Europe (Ireland)  //  //    * South America (São Paulo)  //  // For a list of all the Amazon S3 supported Regions and endpoints, see Regions  // and Endpoints ( https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region )  // in the Amazon Web Services General Reference. EmailAddress * string `type:"string"`  // The canonical user ID of the grantee.  ID * string `type:"string"`  // Type of grantee   //  // Type is a required field Type * string `locationName:"xsi:type" type:"string" xmlAttribute:"true" required:"true" enum:"Type"`  // URI of the grantee group.  URI * string `type:"string"` // contains filtered or unexported fields }
Container for the person being granted permissions.

func (Grantee) GoString    added in  v0.6.5

func (s Grantee ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Grantee) SetDisplayName    added in  v1.5.0

func (s * Grantee ) SetDisplayName(v string ) * Grantee
SetDisplayName sets the DisplayName field's value.

func (*Grantee) SetEmailAddress    added in  v1.5.0

func (s * Grantee ) SetEmailAddress(v string ) * Grantee
SetEmailAddress sets the EmailAddress field's value.

func (*Grantee) SetID    added in  v1.5.0

func (s * Grantee ) SetID(v string ) * Grantee
SetID sets the ID field's value.

func (*Grantee) SetType    added in  v1.5.0

func (s * Grantee ) SetType(v string ) * Grantee
SetType sets the Type field's value.

func (*Grantee) SetURI    added in  v1.5.0

func (s * Grantee ) SetURI(v string ) * Grantee
SetURI sets the URI field's value.

func (Grantee) String    added in  v0.6.5

func (s Grantee ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Grantee) Validate    added in  v1.1.21

func (s * Grantee ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type HeadBucketInput
type HeadBucketInput struct {  // The bucket name.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with an Object Lambda access point, provide the  // alias of the Object Lambda access point in place of the bucket name. If the  // Object Lambda access point alias in a request is not valid, the error code  // InvalidAccessPointAliasError is returned. For more information about InvalidAccessPointAliasError,  // see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (HeadBucketInput) GoString    added in  v0.6.5

func (s HeadBucketInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*HeadBucketInput) SetBucket    added in  v1.5.0

func (s * HeadBucketInput ) SetBucket(v string ) * HeadBucketInput
SetBucket sets the Bucket field's value.

func (*HeadBucketInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * HeadBucketInput ) SetExpectedBucketOwner(v string ) * HeadBucketInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (HeadBucketInput) String    added in  v0.6.5

func (s HeadBucketInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*HeadBucketInput) Validate    added in  v1.1.21

func (s * HeadBucketInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type HeadBucketOutput
type HeadBucketOutput struct { // contains filtered or unexported fields }

func (HeadBucketOutput) GoString    added in  v0.6.5

func (s HeadBucketOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (HeadBucketOutput) String    added in  v0.6.5

func (s HeadBucketOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type HeadObjectInput
type HeadObjectInput struct {  // The name of the bucket containing the object.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // To retrieve the checksum, this parameter must be enabled.   //  // In addition, if you enable ChecksumMode and the object is encrypted with  // Amazon Web Services Key Management Service (Amazon Web Services KMS), you  // must have permission to use the kms:Decrypt action for the request to succeed. ChecksumMode * string `location:"header" locationName:"x-amz-checksum-mode" type:"string" enum:"ChecksumMode"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Return the object only if its entity tag (ETag) is the same as the one specified;   // otherwise, return a 412 (precondition failed) error. IfMatch * string `location:"header" locationName:"If-Match" type:"string"`  // Return the object only if it has been modified since the specified time;   // otherwise, return a 304 (not modified) error. IfModifiedSince * time . Time `location:"header" locationName:"If-Modified-Since" type:"timestamp"`  // Return the object only if its entity tag (ETag) is different from the one   // specified; otherwise, return a 304 (not modified) error. IfNoneMatch * string `location:"header" locationName:"If-None-Match" type:"string"`  // Return the object only if it has not been modified since the specified time;   // otherwise, return a 412 (precondition failed) error. IfUnmodifiedSince * time . Time `location:"header" locationName:"If-Unmodified-Since" type:"timestamp"`  // The object key.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Part number of the object being read. This is a positive integer between   // 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified.  // Useful querying about the size of the part and the number of parts in this  // object. PartNumber * int64 `location:"querystring" locationName:"partNumber" type:"integer"`  // HeadObject returns only the metadata for an object. If the Range is satisfiable,   // only the ContentLength is affected in the response. If the Range is not satisfiable,  // S3 returns a 416 - Requested Range Not Satisfiable error. Range * string `location:"header" locationName:"Range" type:"string"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Specifies the algorithm to use to when encrypting the object (for example,   // AES256). SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // Specifies the customer-provided encryption key for Amazon S3 to use in encrypting   // data. This value is used to store the object and then it is discarded; Amazon  // S3 does not store the encryption key. The key must be appropriate for use  // with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm  // header.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by HeadObjectInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321 .   // Amazon S3 uses this header for a message integrity check to ensure that the  // encryption key was transmitted without error. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // VersionId used to reference a specific version of the object.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (HeadObjectInput) GoString    added in  v0.6.5

func (s HeadObjectInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*HeadObjectInput) SetBucket    added in  v1.5.0

func (s * HeadObjectInput ) SetBucket(v string ) * HeadObjectInput
SetBucket sets the Bucket field's value.

func (*HeadObjectInput) SetChecksumMode    added in  v1.43.6

func (s * HeadObjectInput ) SetChecksumMode(v string ) * HeadObjectInput
SetChecksumMode sets the ChecksumMode field's value.

func (*HeadObjectInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * HeadObjectInput ) SetExpectedBucketOwner(v string ) * HeadObjectInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*HeadObjectInput) SetIfMatch    added in  v1.5.0

func (s * HeadObjectInput ) SetIfMatch(v string ) * HeadObjectInput
SetIfMatch sets the IfMatch field's value.

func (*HeadObjectInput) SetIfModifiedSince    added in  v1.5.0

func (s * HeadObjectInput ) SetIfModifiedSince(v time . Time ) * HeadObjectInput
SetIfModifiedSince sets the IfModifiedSince field's value.

func (*HeadObjectInput) SetIfNoneMatch    added in  v1.5.0

func (s * HeadObjectInput ) SetIfNoneMatch(v string ) * HeadObjectInput
SetIfNoneMatch sets the IfNoneMatch field's value.

func (*HeadObjectInput) SetIfUnmodifiedSince    added in  v1.5.0

func (s * HeadObjectInput ) SetIfUnmodifiedSince(v time . Time ) * HeadObjectInput
SetIfUnmodifiedSince sets the IfUnmodifiedSince field's value.

func (*HeadObjectInput) SetKey    added in  v1.5.0

func (s * HeadObjectInput ) SetKey(v string ) * HeadObjectInput
SetKey sets the Key field's value.

func (*HeadObjectInput) SetPartNumber    added in  v1.5.0

func (s * HeadObjectInput ) SetPartNumber(v int64 ) * HeadObjectInput
SetPartNumber sets the PartNumber field's value.

func (*HeadObjectInput) SetRange    added in  v1.5.0

func (s * HeadObjectInput ) SetRange(v string ) * HeadObjectInput
SetRange sets the Range field's value.

func (*HeadObjectInput) SetRequestPayer    added in  v1.5.0

func (s * HeadObjectInput ) SetRequestPayer(v string ) * HeadObjectInput
SetRequestPayer sets the RequestPayer field's value.

func (*HeadObjectInput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * HeadObjectInput ) SetSSECustomerAlgorithm(v string ) * HeadObjectInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*HeadObjectInput) SetSSECustomerKey    added in  v1.5.0

func (s * HeadObjectInput ) SetSSECustomerKey(v string ) * HeadObjectInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*HeadObjectInput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * HeadObjectInput ) SetSSECustomerKeyMD5(v string ) * HeadObjectInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*HeadObjectInput) SetVersionId    added in  v1.5.0

func (s * HeadObjectInput ) SetVersionId(v string ) * HeadObjectInput
SetVersionId sets the VersionId field's value.

func (HeadObjectInput) String    added in  v0.6.5

func (s HeadObjectInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*HeadObjectInput) Validate    added in  v1.1.21

func (s * HeadObjectInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type HeadObjectOutput
type HeadObjectOutput struct {  // Indicates that a range of bytes was specified.  AcceptRanges * string `location:"header" locationName:"accept-ranges" type:"string"`  // The archive state of the head object.  ArchiveStatus * string `location:"header" locationName:"x-amz-archive-status" type:"string" enum:"ArchiveStatus"`  // Indicates whether the object uses an S3 Bucket Key for server-side encryption   // with Key Management Service (KMS) keys (SSE-KMS). BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // Specifies caching behavior along the request/reply chain.  CacheControl * string `location:"header" locationName:"Cache-Control" type:"string"`  // The base64-encoded, 32-bit CRC32 checksum of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `location:"header" locationName:"x-amz-checksum-crc32" type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `location:"header" locationName:"x-amz-checksum-crc32c" type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `location:"header" locationName:"x-amz-checksum-sha1" type:"string"`  // The base64-encoded, 256-bit SHA-256 digest of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `location:"header" locationName:"x-amz-checksum-sha256" type:"string"`  // Specifies presentational information for the object.  ContentDisposition * string `location:"header" locationName:"Content-Disposition" type:"string"`  // Specifies what content encodings have been applied to the object and thus   // what decoding mechanisms must be applied to obtain the media-type referenced  // by the Content-Type header field. ContentEncoding * string `location:"header" locationName:"Content-Encoding" type:"string"`  // The language the content is in.  ContentLanguage * string `location:"header" locationName:"Content-Language" type:"string"`  // Size of the body in bytes.  ContentLength * int64 `location:"header" locationName:"Content-Length" type:"long"`  // A standard MIME type describing the format of the object data.  ContentType * string `location:"header" locationName:"Content-Type" type:"string"`  // Specifies whether the object retrieved was (true) or was not (false) a Delete   // Marker. If false, this response header does not appear in the response. DeleteMarker * bool `location:"header" locationName:"x-amz-delete-marker" type:"boolean"`  // An entity tag (ETag) is an opaque identifier assigned by a web server to   // a specific version of a resource found at a URL. ETag * string `location:"header" locationName:"ETag" type:"string"`  // If the object expiration is configured (see PUT Bucket lifecycle), the response   // includes this header. It includes the expiry-date and rule-id key-value pairs  // providing object expiration information. The value of the rule-id is URL-encoded. Expiration * string `location:"header" locationName:"x-amz-expiration" type:"string"`  // The date and time at which the object is no longer cacheable.  Expires * string `location:"header" locationName:"Expires" type:"string"`  // Creation date of the object.  LastModified * time . Time `location:"header" locationName:"Last-Modified" type:"timestamp"`  // A map of metadata to store with the object in S3.   //  // By default unmarshaled keys are written as a map keys in following canonicalized format:  // the first letter and any letter following a hyphen will be capitalized, and the rest as lowercase.  // Set `aws.Config.LowerCaseHeaderMaps` to `true` to write unmarshaled keys to the map as lowercase. Metadata map[ string ]* string `location:"headers" locationName:"x-amz-meta-" type:"map"`  // This is set to the number of metadata entries not returned in x-amz-meta   // headers. This can happen if you create metadata using an API like SOAP that  // supports more flexible metadata than the REST API. For example, using SOAP,  // you can create metadata whose values are not legal HTTP headers. MissingMeta * int64 `location:"header" locationName:"x-amz-missing-meta" type:"integer"`  // Specifies whether a legal hold is in effect for this object. This header   // is only returned if the requester has the s3:GetObjectLegalHold permission.  // This header is not returned if the specified version of this object has never  // had a legal hold applied. For more information about S3 Object Lock, see  // Object Lock ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html ). ObjectLockLegalHoldStatus * string `location:"header" locationName:"x-amz-object-lock-legal-hold" type:"string" enum:"ObjectLockLegalHoldStatus"`  // The Object Lock mode, if any, that's in effect for this object. This header   // is only returned if the requester has the s3:GetObjectRetention permission.  // For more information about S3 Object Lock, see Object Lock ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html ). ObjectLockMode * string `location:"header" locationName:"x-amz-object-lock-mode" type:"string" enum:"ObjectLockMode"`  // The date and time when the Object Lock retention period expires. This header   // is only returned if the requester has the s3:GetObjectRetention permission. ObjectLockRetainUntilDate * time . Time `location:"header" locationName:"x-amz-object-lock-retain-until-date" type:"timestamp" timestampFormat:"iso8601"`  // The count of parts this object has. This value is only returned if you specify   // partNumber in your request and the object was uploaded as a multipart upload. PartsCount * int64 `location:"header" locationName:"x-amz-mp-parts-count" type:"integer"`  // Amazon S3 can return this header if your request involves a bucket that is   // either a source or a destination in a replication rule.  //  // In replication, you have a source bucket on which you configure replication  // and destination bucket or buckets where Amazon S3 stores object replicas.  // When you request an object (GetObject) or object metadata (HeadObject) from  // these buckets, Amazon S3 will return the x-amz-replication-status header  // in the response as follows:  //  //    * If requesting an object from the source bucket, Amazon S3 will return  //    the x-amz-replication-status header if the object in your request is eligible  //    for replication. For example, suppose that in your replication configuration,  //    you specify object prefix TaxDocs requesting Amazon S3 to replicate objects  //    with key prefix TaxDocs. Any objects you upload with this key name prefix,  //    for example TaxDocs/document1.pdf, are eligible for replication. For any  //    object request with this key name prefix, Amazon S3 will return the x-amz-replication-status  //    header with value PENDING, COMPLETED or FAILED indicating object replication  //    status.  //  //    * If requesting an object from a destination bucket, Amazon S3 will return  //    the x-amz-replication-status header with value REPLICA if the object in  //    your request is a replica that Amazon S3 created and there is no replica  //    modification replication in progress.  //  //    * When replicating objects to multiple destination buckets, the x-amz-replication-status  //    header acts differently. The header of the source object will only return  //    a value of COMPLETED when replication is successful to all destinations.  //    The header will remain at value PENDING until replication has completed  //    for all destinations. If one or more destinations fails replication the  //    header will return FAILED.  //  // For more information, see Replication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html ). ReplicationStatus * string `location:"header" locationName:"x-amz-replication-status" type:"string" enum:"ReplicationStatus"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // If the object is an archived object (an object whose storage class is GLACIER),   // the response includes this header if either the archive restoration is in  // progress (see RestoreObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html )  // or an archive copy is already restored.  //  // If an archive copy is already restored, the header value indicates when Amazon  // S3 is scheduled to delete the object copy. For example:  //  // x-amz-restore: ongoing-request="false", expiry-date="Fri, 21 Dec 2012 00:00:00  // GMT"  //  // If the object restoration is in progress, the header returns the value ongoing-request="true".  //  // For more information about archiving objects, see Transitioning Objects:  // General Considerations ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html#lifecycle-transition-general-considerations ). Restore * string `location:"header" locationName:"x-amz-restore" type:"string"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header confirming the encryption algorithm  // used. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header to provide round-trip message integrity  // verification of the customer-provided encryption key. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // If present, specifies the ID of the Key Management Service (KMS) symmetric   // encryption customer managed key that was used for the object.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by HeadObjectOutput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms, aws:kms:dsse). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"`  // Provides storage class information of the object. Amazon S3 returns this   // header for all objects except for S3 Standard storage class objects.  //  // For more information, see Storage Classes ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html ). StorageClass * string `location:"header" locationName:"x-amz-storage-class" type:"string" enum:"StorageClass"`  // Version of the object.  VersionId * string `location:"header" locationName:"x-amz-version-id" type:"string"`  // If the bucket is configured as a website, redirects requests for this object   // to another object in the same bucket or to an external URL. Amazon S3 stores  // the value of this header in the object metadata. WebsiteRedirectLocation * string `location:"header" locationName:"x-amz-website-redirect-location" type:"string"` // contains filtered or unexported fields }

func (HeadObjectOutput) GoString    added in  v0.6.5

func (s HeadObjectOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*HeadObjectOutput) SetAcceptRanges    added in  v1.5.0

func (s * HeadObjectOutput ) SetAcceptRanges(v string ) * HeadObjectOutput
SetAcceptRanges sets the AcceptRanges field's value.

func (*HeadObjectOutput) SetArchiveStatus    added in  v1.35.24

func (s * HeadObjectOutput ) SetArchiveStatus(v string ) * HeadObjectOutput
SetArchiveStatus sets the ArchiveStatus field's value.

func (*HeadObjectOutput) SetBucketKeyEnabled    added in  v1.35.37

func (s * HeadObjectOutput ) SetBucketKeyEnabled(v bool ) * HeadObjectOutput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*HeadObjectOutput) SetCacheControl    added in  v1.5.0

func (s * HeadObjectOutput ) SetCacheControl(v string ) * HeadObjectOutput
SetCacheControl sets the CacheControl field's value.

func (*HeadObjectOutput) SetChecksumCRC32    added in  v1.43.6

func (s * HeadObjectOutput ) SetChecksumCRC32(v string ) * HeadObjectOutput
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*HeadObjectOutput) SetChecksumCRC32C    added in  v1.43.6

func (s * HeadObjectOutput ) SetChecksumCRC32C(v string ) * HeadObjectOutput
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*HeadObjectOutput) SetChecksumSHA1    added in  v1.43.6

func (s * HeadObjectOutput ) SetChecksumSHA1(v string ) * HeadObjectOutput
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*HeadObjectOutput) SetChecksumSHA256    added in  v1.43.6

func (s * HeadObjectOutput ) SetChecksumSHA256(v string ) * HeadObjectOutput
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*HeadObjectOutput) SetContentDisposition    added in  v1.5.0

func (s * HeadObjectOutput ) SetContentDisposition(v string ) * HeadObjectOutput
SetContentDisposition sets the ContentDisposition field's value.

func (*HeadObjectOutput) SetContentEncoding    added in  v1.5.0

func (s * HeadObjectOutput ) SetContentEncoding(v string ) * HeadObjectOutput
SetContentEncoding sets the ContentEncoding field's value.

func (*HeadObjectOutput) SetContentLanguage    added in  v1.5.0

func (s * HeadObjectOutput ) SetContentLanguage(v string ) * HeadObjectOutput
SetContentLanguage sets the ContentLanguage field's value.

func (*HeadObjectOutput) SetContentLength    added in  v1.5.0

func (s * HeadObjectOutput ) SetContentLength(v int64 ) * HeadObjectOutput
SetContentLength sets the ContentLength field's value.

func (*HeadObjectOutput) SetContentType    added in  v1.5.0

func (s * HeadObjectOutput ) SetContentType(v string ) * HeadObjectOutput
SetContentType sets the ContentType field's value.

func (*HeadObjectOutput) SetDeleteMarker    added in  v1.5.0

func (s * HeadObjectOutput ) SetDeleteMarker(v bool ) * HeadObjectOutput
SetDeleteMarker sets the DeleteMarker field's value.

func (*HeadObjectOutput) SetETag    added in  v1.5.0

func (s * HeadObjectOutput ) SetETag(v string ) * HeadObjectOutput
SetETag sets the ETag field's value.

func (*HeadObjectOutput) SetExpiration    added in  v1.5.0

func (s * HeadObjectOutput ) SetExpiration(v string ) * HeadObjectOutput
SetExpiration sets the Expiration field's value.

func (*HeadObjectOutput) SetExpires    added in  v1.5.0

func (s * HeadObjectOutput ) SetExpires(v string ) * HeadObjectOutput
SetExpires sets the Expires field's value.

func (*HeadObjectOutput) SetLastModified    added in  v1.5.0

func (s * HeadObjectOutput ) SetLastModified(v time . Time ) * HeadObjectOutput
SetLastModified sets the LastModified field's value.

func (*HeadObjectOutput) SetMetadata    added in  v1.5.0

func (s * HeadObjectOutput ) SetMetadata(v map[ string ]* string ) * HeadObjectOutput
SetMetadata sets the Metadata field's value.

func (*HeadObjectOutput) SetMissingMeta    added in  v1.5.0

func (s * HeadObjectOutput ) SetMissingMeta(v int64 ) * HeadObjectOutput
SetMissingMeta sets the MissingMeta field's value.

func (*HeadObjectOutput) SetObjectLockLegalHoldStatus    added in  v1.15.83

func (s * HeadObjectOutput ) SetObjectLockLegalHoldStatus(v string ) * HeadObjectOutput
SetObjectLockLegalHoldStatus sets the ObjectLockLegalHoldStatus field's value.

func (*HeadObjectOutput) SetObjectLockMode    added in  v1.15.83

func (s * HeadObjectOutput ) SetObjectLockMode(v string ) * HeadObjectOutput
SetObjectLockMode sets the ObjectLockMode field's value.

func (*HeadObjectOutput) SetObjectLockRetainUntilDate    added in  v1.15.83

func (s * HeadObjectOutput ) SetObjectLockRetainUntilDate(v time . Time ) * HeadObjectOutput
SetObjectLockRetainUntilDate sets the ObjectLockRetainUntilDate field's value.

func (*HeadObjectOutput) SetPartsCount    added in  v1.5.0

func (s * HeadObjectOutput ) SetPartsCount(v int64 ) * HeadObjectOutput
SetPartsCount sets the PartsCount field's value.

func (*HeadObjectOutput) SetReplicationStatus    added in  v1.5.0

func (s * HeadObjectOutput ) SetReplicationStatus(v string ) * HeadObjectOutput
SetReplicationStatus sets the ReplicationStatus field's value.

func (*HeadObjectOutput) SetRequestCharged    added in  v1.5.0

func (s * HeadObjectOutput ) SetRequestCharged(v string ) * HeadObjectOutput
SetRequestCharged sets the RequestCharged field's value.

func (*HeadObjectOutput) SetRestore    added in  v1.5.0

func (s * HeadObjectOutput ) SetRestore(v string ) * HeadObjectOutput
SetRestore sets the Restore field's value.

func (*HeadObjectOutput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * HeadObjectOutput ) SetSSECustomerAlgorithm(v string ) * HeadObjectOutput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*HeadObjectOutput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * HeadObjectOutput ) SetSSECustomerKeyMD5(v string ) * HeadObjectOutput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*HeadObjectOutput) SetSSEKMSKeyId    added in  v1.5.0

func (s * HeadObjectOutput ) SetSSEKMSKeyId(v string ) * HeadObjectOutput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*HeadObjectOutput) SetServerSideEncryption    added in  v1.5.0

func (s * HeadObjectOutput ) SetServerSideEncryption(v string ) * HeadObjectOutput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (*HeadObjectOutput) SetStorageClass    added in  v1.5.0

func (s * HeadObjectOutput ) SetStorageClass(v string ) * HeadObjectOutput
SetStorageClass sets the StorageClass field's value.

func (*HeadObjectOutput) SetVersionId    added in  v1.5.0

func (s * HeadObjectOutput ) SetVersionId(v string ) * HeadObjectOutput
SetVersionId sets the VersionId field's value.

func (*HeadObjectOutput) SetWebsiteRedirectLocation    added in  v1.5.0

func (s * HeadObjectOutput ) SetWebsiteRedirectLocation(v string ) * HeadObjectOutput
SetWebsiteRedirectLocation sets the WebsiteRedirectLocation field's value.

func (HeadObjectOutput) String    added in  v0.6.5

func (s HeadObjectOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type IndexDocument
type IndexDocument struct {  // A suffix that is appended to a request that is for a directory on the website   // endpoint (for example,if the suffix is index.html and you make a request  // to samplebucket/images/ the data that is returned will be for the object  // with the key name images/index.html) The suffix must not be empty and must  // not include a slash character.  //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ).  //  // Suffix is a required field Suffix * string `type:"string" required:"true"` // contains filtered or unexported fields }
Container for the Suffix element.

func (IndexDocument) GoString    added in  v0.6.5

func (s IndexDocument ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*IndexDocument) SetSuffix    added in  v1.5.0

func (s * IndexDocument ) SetSuffix(v string ) * IndexDocument
SetSuffix sets the Suffix field's value.

func (IndexDocument) String    added in  v0.6.5

func (s IndexDocument ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*IndexDocument) Validate    added in  v1.1.21

func (s * IndexDocument ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type Initiator
type Initiator struct {  // Name of the Principal.  DisplayName * string `type:"string"`  // If the principal is an Amazon Web Services account, it provides the Canonical   // User ID. If the principal is an IAM User, it provides a user ARN value. ID * string `type:"string"` // contains filtered or unexported fields }
Container element that identifies who initiated the multipart upload.

func (Initiator) GoString    added in  v0.6.5

func (s Initiator ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Initiator) SetDisplayName    added in  v1.5.0

func (s * Initiator ) SetDisplayName(v string ) * Initiator
SetDisplayName sets the DisplayName field's value.

func (*Initiator) SetID    added in  v1.5.0

func (s * Initiator ) SetID(v string ) * Initiator
SetID sets the ID field's value.

func (Initiator) String    added in  v0.6.5

func (s Initiator ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type InputSerialization    added in  v1.12.36
type InputSerialization struct {  // Describes the serialization of a CSV-encoded object.  CSV * CSVInput `type:"structure"`  // Specifies object's compression format. Valid values: NONE, GZIP, BZIP2. Default   // Value: NONE. CompressionType * string `type:"string" enum:"CompressionType"`  // Specifies JSON as object's input serialization format.  JSON * JSONInput `type:"structure"`  // Specifies Parquet as object's input serialization format.  Parquet * ParquetInput `type:"structure"` // contains filtered or unexported fields }
Describes the serialization format of the object.

func (InputSerialization) GoString    added in  v1.12.36

func (s InputSerialization ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InputSerialization) SetCSV    added in  v1.12.36

func (s * InputSerialization ) SetCSV(v * CSVInput ) * InputSerialization
SetCSV sets the CSV field's value.

func (*InputSerialization) SetCompressionType    added in  v1.13.28

func (s * InputSerialization ) SetCompressionType(v string ) * InputSerialization
SetCompressionType sets the CompressionType field's value.

func (*InputSerialization) SetJSON    added in  v1.13.28

func (s * InputSerialization ) SetJSON(v * JSONInput ) * InputSerialization
SetJSON sets the JSON field's value.

func (*InputSerialization) SetParquet    added in  v1.15.28

func (s * InputSerialization ) SetParquet(v * ParquetInput ) * InputSerialization
SetParquet sets the Parquet field's value.

func (InputSerialization) String    added in  v1.12.36

func (s InputSerialization ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type IntelligentTieringAndOperator    added in  v1.35.24
type IntelligentTieringAndOperator struct {  // An object key name prefix that identifies the subset of objects to which   // the configuration applies. Prefix * string `type:"string"`  // All of these tags must exist in the object's tag set in order for the configuration   // to apply. Tags []* Tag `locationName:"Tag" locationNameList:"Tag" type:"list" flattened:"true"` // contains filtered or unexported fields }
A container for specifying S3 Intelligent-Tiering filters. The filters determine
the subset of objects to which the rule applies.

func (IntelligentTieringAndOperator) GoString    added in  v1.35.24

func (s IntelligentTieringAndOperator ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*IntelligentTieringAndOperator) SetPrefix    added in  v1.35.24

func (s * IntelligentTieringAndOperator ) SetPrefix(v string ) * IntelligentTieringAndOperator
SetPrefix sets the Prefix field's value.

func (*IntelligentTieringAndOperator) SetTags    added in  v1.35.24

func (s * IntelligentTieringAndOperator ) SetTags(v []* Tag ) * IntelligentTieringAndOperator
SetTags sets the Tags field's value.

func (IntelligentTieringAndOperator) String    added in  v1.35.24

func (s IntelligentTieringAndOperator ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*IntelligentTieringAndOperator) Validate    added in  v1.35.24

func (s * IntelligentTieringAndOperator ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type IntelligentTieringConfiguration    added in  v1.35.24
type IntelligentTieringConfiguration struct {  // Specifies a bucket filter. The configuration only includes objects that meet   // the filter's criteria. Filter * IntelligentTieringFilter `type:"structure"`  // The ID used to identify the S3 Intelligent-Tiering configuration.   //  // Id is a required field Id * string `type:"string" required:"true"`  // Specifies the status of the configuration.   //  // Status is a required field Status * string `type:"string" required:"true" enum:"IntelligentTieringStatus"`  // Specifies the S3 Intelligent-Tiering storage class tier of the configuration.   //  // Tierings is a required field Tierings []* Tiering `locationName:"Tiering" type:"list" flattened:"true" required:"true"` // contains filtered or unexported fields }
Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
For information about the S3 Intelligent-Tiering storage class, see Storage
class for automatically optimizing frequently and infrequently accessed objects
( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access ).

func (IntelligentTieringConfiguration) GoString    added in  v1.35.24

func (s IntelligentTieringConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*IntelligentTieringConfiguration) SetFilter    added in  v1.35.24

func (s * IntelligentTieringConfiguration ) SetFilter(v * IntelligentTieringFilter ) * IntelligentTieringConfiguration
SetFilter sets the Filter field's value.

func (*IntelligentTieringConfiguration) SetId    added in  v1.35.24

func (s * IntelligentTieringConfiguration ) SetId(v string ) * IntelligentTieringConfiguration
SetId sets the Id field's value.

func (*IntelligentTieringConfiguration) SetStatus    added in  v1.35.24

func (s * IntelligentTieringConfiguration ) SetStatus(v string ) * IntelligentTieringConfiguration
SetStatus sets the Status field's value.

func (*IntelligentTieringConfiguration) SetTierings    added in  v1.35.24

func (s * IntelligentTieringConfiguration ) SetTierings(v []* Tiering ) * IntelligentTieringConfiguration
SetTierings sets the Tierings field's value.

func (IntelligentTieringConfiguration) String    added in  v1.35.24

func (s IntelligentTieringConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*IntelligentTieringConfiguration) Validate    added in  v1.35.24

func (s * IntelligentTieringConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type IntelligentTieringFilter    added in  v1.35.24
type IntelligentTieringFilter struct {  // A conjunction (logical AND) of predicates, which is used in evaluating a   // metrics filter. The operator must have at least two predicates, and an object  // must match all of the predicates in order for the filter to apply. And * IntelligentTieringAndOperator `type:"structure"`  // An object key name prefix that identifies the subset of objects to which   // the rule applies.  //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ). Prefix * string `type:"string"`  // A container of a key value name pair.  Tag * Tag `type:"structure"` // contains filtered or unexported fields }
The Filter is used to identify objects that the S3 Intelligent-Tiering configuration
applies to.

func (IntelligentTieringFilter) GoString    added in  v1.35.24

func (s IntelligentTieringFilter ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*IntelligentTieringFilter) SetAnd    added in  v1.35.24

func (s * IntelligentTieringFilter ) SetAnd(v * IntelligentTieringAndOperator ) * IntelligentTieringFilter
SetAnd sets the And field's value.

func (*IntelligentTieringFilter) SetPrefix    added in  v1.35.24

func (s * IntelligentTieringFilter ) SetPrefix(v string ) * IntelligentTieringFilter
SetPrefix sets the Prefix field's value.

func (*IntelligentTieringFilter) SetTag    added in  v1.35.24

func (s * IntelligentTieringFilter ) SetTag(v * Tag ) * IntelligentTieringFilter
SetTag sets the Tag field's value.

func (IntelligentTieringFilter) String    added in  v1.35.24

func (s IntelligentTieringFilter ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*IntelligentTieringFilter) Validate    added in  v1.35.24

func (s * IntelligentTieringFilter ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type InventoryConfiguration    added in  v1.5.11
type InventoryConfiguration struct {  // Contains information about where to publish the inventory results.   //  // Destination is a required field Destination * InventoryDestination `type:"structure" required:"true"`  // Specifies an inventory filter. The inventory only includes objects that meet   // the filter's criteria. Filter * InventoryFilter `type:"structure"`  // The ID used to identify the inventory configuration.   //  // Id is a required field Id * string `type:"string" required:"true"`  // Object versions to include in the inventory list. If set to All, the list   // includes all the object versions, which adds the version-related fields VersionId,  // IsLatest, and DeleteMarker to the list. If set to Current, the list does  // not contain these version-related fields.  //  // IncludedObjectVersions is a required field IncludedObjectVersions * string `type:"string" required:"true" enum:"InventoryIncludedObjectVersions"`  // Specifies whether the inventory is enabled or disabled. If set to True, an   // inventory list is generated. If set to False, no inventory list is generated.  //  // IsEnabled is a required field IsEnabled * bool `type:"boolean" required:"true"`  // Contains the optional fields that are included in the inventory results.  OptionalFields []* string `locationNameList:"Field" type:"list" enum:"InventoryOptionalField"`  // Specifies the schedule for generating inventory results.   //  // Schedule is a required field Schedule * InventorySchedule `type:"structure" required:"true"` // contains filtered or unexported fields }
Specifies the inventory configuration for an Amazon S3 bucket. For more information,
see GET Bucket inventory ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html )
in the Amazon S3 API Reference.

func (InventoryConfiguration) GoString    added in  v1.5.11

func (s InventoryConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventoryConfiguration) SetDestination    added in  v1.5.11

func (s * InventoryConfiguration ) SetDestination(v * InventoryDestination ) * InventoryConfiguration
SetDestination sets the Destination field's value.

func (*InventoryConfiguration) SetFilter    added in  v1.5.11

func (s * InventoryConfiguration ) SetFilter(v * InventoryFilter ) * InventoryConfiguration
SetFilter sets the Filter field's value.

func (*InventoryConfiguration) SetId    added in  v1.5.11

func (s * InventoryConfiguration ) SetId(v string ) * InventoryConfiguration
SetId sets the Id field's value.

func (*InventoryConfiguration) SetIncludedObjectVersions    added in  v1.5.11

func (s * InventoryConfiguration ) SetIncludedObjectVersions(v string ) * InventoryConfiguration
SetIncludedObjectVersions sets the IncludedObjectVersions field's value.

func (*InventoryConfiguration) SetIsEnabled    added in  v1.5.11

func (s * InventoryConfiguration ) SetIsEnabled(v bool ) * InventoryConfiguration
SetIsEnabled sets the IsEnabled field's value.

func (*InventoryConfiguration) SetOptionalFields    added in  v1.5.11

func (s * InventoryConfiguration ) SetOptionalFields(v []* string ) * InventoryConfiguration
SetOptionalFields sets the OptionalFields field's value.

func (*InventoryConfiguration) SetSchedule    added in  v1.5.11

func (s * InventoryConfiguration ) SetSchedule(v * InventorySchedule ) * InventoryConfiguration
SetSchedule sets the Schedule field's value.

func (InventoryConfiguration) String    added in  v1.5.11

func (s InventoryConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventoryConfiguration) Validate    added in  v1.5.11

func (s * InventoryConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type InventoryDestination    added in  v1.5.11
type InventoryDestination struct {  // Contains the bucket name, file format, bucket owner (optional), and prefix   // (optional) where inventory results are published.  //  // S3BucketDestination is a required field S3BucketDestination * InventoryS3BucketDestination `type:"structure" required:"true"` // contains filtered or unexported fields }
Specifies the inventory configuration for an Amazon S3 bucket.

func (InventoryDestination) GoString    added in  v1.5.11

func (s InventoryDestination ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventoryDestination) SetS3BucketDestination    added in  v1.5.11

func (s * InventoryDestination ) SetS3BucketDestination(v * InventoryS3BucketDestination ) * InventoryDestination
SetS3BucketDestination sets the S3BucketDestination field's value.

func (InventoryDestination) String    added in  v1.5.11

func (s InventoryDestination ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventoryDestination) Validate    added in  v1.5.11

func (s * InventoryDestination ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type InventoryEncryption    added in  v1.12.24
type InventoryEncryption struct {  // Specifies the use of SSE-KMS to encrypt delivered inventory reports.  SSEKMS * SSEKMS `locationName:"SSE-KMS" type:"structure"`  // Specifies the use of SSE-S3 to encrypt delivered inventory reports.  SSES3 * SSES3 `locationName:"SSE-S3" type:"structure"` // contains filtered or unexported fields }
Contains the type of server-side encryption used to encrypt the inventory
results.

func (InventoryEncryption) GoString    added in  v1.12.24

func (s InventoryEncryption ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventoryEncryption) SetSSEKMS    added in  v1.12.24

func (s * InventoryEncryption ) SetSSEKMS(v * SSEKMS ) * InventoryEncryption
SetSSEKMS sets the SSEKMS field's value.

func (*InventoryEncryption) SetSSES3    added in  v1.12.24

func (s * InventoryEncryption ) SetSSES3(v * SSES3 ) * InventoryEncryption
SetSSES3 sets the SSES3 field's value.

func (InventoryEncryption) String    added in  v1.12.24

func (s InventoryEncryption ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventoryEncryption) Validate    added in  v1.12.24

func (s * InventoryEncryption ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type InventoryFilter    added in  v1.5.11
type InventoryFilter struct {  // The prefix that an object must have to be included in the inventory results.   //  // Prefix is a required field Prefix * string `type:"string" required:"true"` // contains filtered or unexported fields }
Specifies an inventory filter. The inventory only includes objects that meet
the filter's criteria.

func (InventoryFilter) GoString    added in  v1.5.11

func (s InventoryFilter ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventoryFilter) SetPrefix    added in  v1.5.11

func (s * InventoryFilter ) SetPrefix(v string ) * InventoryFilter
SetPrefix sets the Prefix field's value.

func (InventoryFilter) String    added in  v1.5.11

func (s InventoryFilter ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventoryFilter) Validate    added in  v1.5.11

func (s * InventoryFilter ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type InventoryS3BucketDestination    added in  v1.5.11
type InventoryS3BucketDestination struct {  // The account ID that owns the destination S3 bucket. If no account ID is provided,   // the owner is not validated before exporting data.  //  // Although this value is optional, we strongly recommend that you set it to  // help prevent problems if the destination bucket ownership changes. AccountId * string `type:"string"`  // The Amazon Resource Name (ARN) of the bucket where inventory results will   // be published.  //  // Bucket is a required field Bucket * string `type:"string" required:"true"`  // Contains the type of server-side encryption used to encrypt the inventory   // results. Encryption * InventoryEncryption `type:"structure"`  // Specifies the output format of the inventory results.   //  // Format is a required field Format * string `type:"string" required:"true" enum:"InventoryFormat"`  // The prefix that is prepended to all inventory results.  Prefix * string `type:"string"` // contains filtered or unexported fields }
Contains the bucket name, file format, bucket owner (optional), and prefix
(optional) where inventory results are published.

func (InventoryS3BucketDestination) GoString    added in  v1.5.11

func (s InventoryS3BucketDestination ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventoryS3BucketDestination) SetAccountId    added in  v1.5.11

func (s * InventoryS3BucketDestination ) SetAccountId(v string ) * InventoryS3BucketDestination
SetAccountId sets the AccountId field's value.

func (*InventoryS3BucketDestination) SetBucket    added in  v1.5.11

func (s * InventoryS3BucketDestination ) SetBucket(v string ) * InventoryS3BucketDestination
SetBucket sets the Bucket field's value.

func (*InventoryS3BucketDestination) SetEncryption    added in  v1.12.24

func (s * InventoryS3BucketDestination ) SetEncryption(v * InventoryEncryption ) * InventoryS3BucketDestination
SetEncryption sets the Encryption field's value.

func (*InventoryS3BucketDestination) SetFormat    added in  v1.5.11

func (s * InventoryS3BucketDestination ) SetFormat(v string ) * InventoryS3BucketDestination
SetFormat sets the Format field's value.

func (*InventoryS3BucketDestination) SetPrefix    added in  v1.5.11

func (s * InventoryS3BucketDestination ) SetPrefix(v string ) * InventoryS3BucketDestination
SetPrefix sets the Prefix field's value.

func (InventoryS3BucketDestination) String    added in  v1.5.11

func (s InventoryS3BucketDestination ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventoryS3BucketDestination) Validate    added in  v1.5.11

func (s * InventoryS3BucketDestination ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type InventorySchedule    added in  v1.5.11
type InventorySchedule struct {  // Specifies how frequently inventory results are produced.   //  // Frequency is a required field Frequency * string `type:"string" required:"true" enum:"InventoryFrequency"` // contains filtered or unexported fields }
Specifies the schedule for generating inventory results.

func (InventorySchedule) GoString    added in  v1.5.11

func (s InventorySchedule ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventorySchedule) SetFrequency    added in  v1.5.11

func (s * InventorySchedule ) SetFrequency(v string ) * InventorySchedule
SetFrequency sets the Frequency field's value.

func (InventorySchedule) String    added in  v1.5.11

func (s InventorySchedule ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*InventorySchedule) Validate    added in  v1.5.11

func (s * InventorySchedule ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type JSONInput    added in  v1.13.28
type JSONInput struct {  // The type of JSON. Valid values: Document, Lines.  Type * string `type:"string" enum:"JSONType"` // contains filtered or unexported fields }
Specifies JSON as object's input serialization format.

func (JSONInput) GoString    added in  v1.13.28

func (s JSONInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*JSONInput) SetType    added in  v1.13.28

func (s * JSONInput ) SetType(v string ) * JSONInput
SetType sets the Type field's value.

func (JSONInput) String    added in  v1.13.28

func (s JSONInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type JSONOutput    added in  v1.13.28
type JSONOutput struct {  // The value used to separate individual records in the output. If no value   // is specified, Amazon S3 uses a newline character ('\n'). RecordDelimiter * string `type:"string"` // contains filtered or unexported fields }
Specifies JSON as request's output serialization format.

func (JSONOutput) GoString    added in  v1.13.28

func (s JSONOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*JSONOutput) SetRecordDelimiter    added in  v1.13.28

func (s * JSONOutput ) SetRecordDelimiter(v string ) * JSONOutput
SetRecordDelimiter sets the RecordDelimiter field's value.

func (JSONOutput) String    added in  v1.13.28

func (s JSONOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type KeyFilter    added in  v0.9.5
type KeyFilter struct {  // A list of containers for the key-value pair that defines the criteria for   // the filter rule. FilterRules []* FilterRule `locationName:"FilterRule" type:"list" flattened:"true"` // contains filtered or unexported fields }
A container for object key name prefix and suffix filtering rules.

func (KeyFilter) GoString    added in  v0.9.5

func (s KeyFilter ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*KeyFilter) SetFilterRules    added in  v1.5.0

func (s * KeyFilter ) SetFilterRules(v []* FilterRule ) * KeyFilter
SetFilterRules sets the FilterRules field's value.

func (KeyFilter) String    added in  v0.9.5

func (s KeyFilter ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type LambdaFunctionConfiguration
type LambdaFunctionConfiguration struct {  // The Amazon S3 bucket event for which to invoke the Lambda function. For more   // information, see Supported Event Types ( https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html )  // in the Amazon S3 User Guide.  //  // Events is a required field Events []* string `locationName:"Event" type:"list" flattened:"true" required:"true" enum:"Event"`  // Specifies object key name filtering rules. For information about key name   // filtering, see Configuring event notifications using object key name filtering  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html )  // in the Amazon S3 User Guide. Filter * NotificationConfigurationFilter `type:"structure"`  // An optional unique identifier for configurations in a notification configuration.   // If you don't provide one, Amazon S3 will assign an ID. Id * string `type:"string"`  // The Amazon Resource Name (ARN) of the Lambda function that Amazon S3 invokes   // when the specified event type occurs.  //  // LambdaFunctionArn is a required field LambdaFunctionArn * string `locationName:"CloudFunction" type:"string" required:"true"` // contains filtered or unexported fields }
A container for specifying the configuration for Lambda notifications.

func (LambdaFunctionConfiguration) GoString    added in  v0.6.5

func (s LambdaFunctionConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LambdaFunctionConfiguration) SetEvents    added in  v1.5.0

func (s * LambdaFunctionConfiguration ) SetEvents(v []* string ) * LambdaFunctionConfiguration
SetEvents sets the Events field's value.

func (*LambdaFunctionConfiguration) SetFilter    added in  v1.5.0

func (s * LambdaFunctionConfiguration ) SetFilter(v * NotificationConfigurationFilter ) * LambdaFunctionConfiguration
SetFilter sets the Filter field's value.

func (*LambdaFunctionConfiguration) SetId    added in  v1.5.0

func (s * LambdaFunctionConfiguration ) SetId(v string ) * LambdaFunctionConfiguration
SetId sets the Id field's value.

func (*LambdaFunctionConfiguration) SetLambdaFunctionArn    added in  v1.5.0

func (s * LambdaFunctionConfiguration ) SetLambdaFunctionArn(v string ) * LambdaFunctionConfiguration
SetLambdaFunctionArn sets the LambdaFunctionArn field's value.

func (LambdaFunctionConfiguration) String    added in  v0.6.5

func (s LambdaFunctionConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LambdaFunctionConfiguration) Validate    added in  v1.1.21

func (s * LambdaFunctionConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type LifecycleConfiguration
type LifecycleConfiguration struct {  // Specifies lifecycle configuration rules for an Amazon S3 bucket.   //  // Rules is a required field Rules []* Rule `locationName:"Rule" type:"list" flattened:"true" required:"true"` // contains filtered or unexported fields }
Container for lifecycle rules. You can add as many as 1000 rules.
For more information see, Managing your storage lifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html )
in the Amazon S3 User Guide.

func (LifecycleConfiguration) GoString    added in  v0.6.5

func (s LifecycleConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LifecycleConfiguration) SetRules    added in  v1.5.0

func (s * LifecycleConfiguration ) SetRules(v []* Rule ) * LifecycleConfiguration
SetRules sets the Rules field's value.

func (LifecycleConfiguration) String    added in  v0.6.5

func (s LifecycleConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LifecycleConfiguration) Validate    added in  v1.1.21

func (s * LifecycleConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type LifecycleExpiration
type LifecycleExpiration struct {  // Indicates at what date the object is to be moved or deleted. The date value   // must conform to the ISO 8601 format. The time is always midnight UTC. Date * time . Time `type:"timestamp" timestampFormat:"iso8601"`  // Indicates the lifetime, in days, of the objects that are subject to the rule.   // The value must be a non-zero positive integer. Days * int64 `type:"integer"`  // Indicates whether Amazon S3 will remove a delete marker with no noncurrent   // versions. If set to true, the delete marker will be expired; if set to false  // the policy takes no action. This cannot be specified with Days or Date in  // a Lifecycle Expiration Policy. ExpiredObjectDeleteMarker * bool `type:"boolean"` // contains filtered or unexported fields }
Container for the expiration for the lifecycle of the object.
For more information see, Managing your storage lifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html )
in the Amazon S3 User Guide.

func (LifecycleExpiration) GoString    added in  v0.6.5

func (s LifecycleExpiration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LifecycleExpiration) SetDate    added in  v1.5.0

func (s * LifecycleExpiration ) SetDate(v time . Time ) * LifecycleExpiration
SetDate sets the Date field's value.

func (*LifecycleExpiration) SetDays    added in  v1.5.0

func (s * LifecycleExpiration ) SetDays(v int64 ) * LifecycleExpiration
SetDays sets the Days field's value.

func (*LifecycleExpiration) SetExpiredObjectDeleteMarker    added in  v1.5.0

func (s * LifecycleExpiration ) SetExpiredObjectDeleteMarker(v bool ) * LifecycleExpiration
SetExpiredObjectDeleteMarker sets the ExpiredObjectDeleteMarker field's value.

func (LifecycleExpiration) String    added in  v0.6.5

func (s LifecycleExpiration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type LifecycleRule
type LifecycleRule struct {  // Specifies the days since the initiation of an incomplete multipart upload   // that Amazon S3 will wait before permanently removing all parts of the upload.  // For more information, see Aborting Incomplete Multipart Uploads Using a Bucket  // Lifecycle Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config )  // in the Amazon S3 User Guide. AbortIncompleteMultipartUpload * AbortIncompleteMultipartUpload `type:"structure"`  // Specifies the expiration for the lifecycle of the object in the form of date,   // days and, whether the object has a delete marker. Expiration * LifecycleExpiration `type:"structure"`  // The Filter is used to identify objects that a Lifecycle Rule applies to.   // A Filter must have exactly one of Prefix, Tag, or And specified. Filter is  // required if the LifecycleRule does not contain a Prefix element. Filter * LifecycleRuleFilter `type:"structure"`  // Unique identifier for the rule. The value cannot be longer than 255 characters.  ID * string `type:"string"`  // Specifies when noncurrent object versions expire. Upon expiration, Amazon   // S3 permanently deletes the noncurrent object versions. You set this lifecycle  // configuration action on a bucket that has versioning enabled (or suspended)  // to request that Amazon S3 delete noncurrent object versions at a specific  // period in the object's lifetime. NoncurrentVersionExpiration * NoncurrentVersionExpiration `type:"structure"`  // Specifies the transition rule for the lifecycle rule that describes when   // noncurrent objects transition to a specific storage class. If your bucket  // is versioning-enabled (or versioning is suspended), you can set this action  // to request that Amazon S3 transition noncurrent object versions to a specific  // storage class at a set period in the object's lifetime. NoncurrentVersionTransitions []* NoncurrentVersionTransition `locationName:"NoncurrentVersionTransition" type:"list" flattened:"true"`  // Prefix identifying one or more objects to which the rule applies. This is   // no longer used; use Filter instead.  //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ).  //  // Deprecated: Prefix has been deprecated Prefix * string `deprecated:"true" type:"string"`  // If 'Enabled', the rule is currently being applied. If 'Disabled', the rule   // is not currently being applied.  //  // Status is a required field Status * string `type:"string" required:"true" enum:"ExpirationStatus"`  // Specifies when an Amazon S3 object transitions to a specified storage class.  Transitions []* Transition `locationName:"Transition" type:"list" flattened:"true"` // contains filtered or unexported fields }
A lifecycle rule for individual objects in an Amazon S3 bucket.
For more information see, Managing your storage lifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html )
in the Amazon S3 User Guide.

func (LifecycleRule) GoString    added in  v0.6.5

func (s LifecycleRule ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LifecycleRule) SetAbortIncompleteMultipartUpload    added in  v1.5.0

func (s * LifecycleRule ) SetAbortIncompleteMultipartUpload(v * AbortIncompleteMultipartUpload ) * LifecycleRule
SetAbortIncompleteMultipartUpload sets the AbortIncompleteMultipartUpload field's value.

func (*LifecycleRule) SetExpiration    added in  v1.5.0

func (s * LifecycleRule ) SetExpiration(v * LifecycleExpiration ) * LifecycleRule
SetExpiration sets the Expiration field's value.

func (*LifecycleRule) SetFilter    added in  v1.5.11

func (s * LifecycleRule ) SetFilter(v * LifecycleRuleFilter ) * LifecycleRule
SetFilter sets the Filter field's value.

func (*LifecycleRule) SetID    added in  v1.5.0

func (s * LifecycleRule ) SetID(v string ) * LifecycleRule
SetID sets the ID field's value.

func (*LifecycleRule) SetNoncurrentVersionExpiration    added in  v1.5.0

func (s * LifecycleRule ) SetNoncurrentVersionExpiration(v * NoncurrentVersionExpiration ) * LifecycleRule
SetNoncurrentVersionExpiration sets the NoncurrentVersionExpiration field's value.

func (*LifecycleRule) SetNoncurrentVersionTransitions    added in  v1.5.0

func (s * LifecycleRule ) SetNoncurrentVersionTransitions(v []* NoncurrentVersionTransition ) * LifecycleRule
SetNoncurrentVersionTransitions sets the NoncurrentVersionTransitions field's value.

func (*LifecycleRule) SetPrefix    added in  v1.5.0

func (s * LifecycleRule ) SetPrefix(v string ) * LifecycleRule
SetPrefix sets the Prefix field's value.

func (*LifecycleRule) SetStatus    added in  v1.5.0

func (s * LifecycleRule ) SetStatus(v string ) * LifecycleRule
SetStatus sets the Status field's value.

func (*LifecycleRule) SetTransitions    added in  v1.5.0

func (s * LifecycleRule ) SetTransitions(v []* Transition ) * LifecycleRule
SetTransitions sets the Transitions field's value.

func (LifecycleRule) String    added in  v0.6.5

func (s LifecycleRule ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LifecycleRule) Validate    added in  v1.1.21

func (s * LifecycleRule ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type LifecycleRuleAndOperator    added in  v1.5.11
type LifecycleRuleAndOperator struct {  // Minimum object size to which the rule applies.  ObjectSizeGreaterThan * int64 `type:"long"`  // Maximum object size to which the rule applies.  ObjectSizeLessThan * int64 `type:"long"`  // Prefix identifying one or more objects to which the rule applies.  Prefix * string `type:"string"`  // All of these tags must exist in the object's tag set in order for the rule   // to apply. Tags []* Tag `locationName:"Tag" locationNameList:"Tag" type:"list" flattened:"true"` // contains filtered or unexported fields }
This is used in a Lifecycle Rule Filter to apply a logical AND to two or
more predicates. The Lifecycle Rule will apply to any object matching all
of the predicates configured inside the And operator.

func (LifecycleRuleAndOperator) GoString    added in  v1.5.11

func (s LifecycleRuleAndOperator ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LifecycleRuleAndOperator) SetObjectSizeGreaterThan    added in  v1.42.11

func (s * LifecycleRuleAndOperator ) SetObjectSizeGreaterThan(v int64 ) * LifecycleRuleAndOperator
SetObjectSizeGreaterThan sets the ObjectSizeGreaterThan field's value.

func (*LifecycleRuleAndOperator) SetObjectSizeLessThan    added in  v1.42.11

func (s * LifecycleRuleAndOperator ) SetObjectSizeLessThan(v int64 ) * LifecycleRuleAndOperator
SetObjectSizeLessThan sets the ObjectSizeLessThan field's value.

func (*LifecycleRuleAndOperator) SetPrefix    added in  v1.5.11

func (s * LifecycleRuleAndOperator ) SetPrefix(v string ) * LifecycleRuleAndOperator
SetPrefix sets the Prefix field's value.

func (*LifecycleRuleAndOperator) SetTags    added in  v1.5.11

func (s * LifecycleRuleAndOperator ) SetTags(v []* Tag ) * LifecycleRuleAndOperator
SetTags sets the Tags field's value.

func (LifecycleRuleAndOperator) String    added in  v1.5.11

func (s LifecycleRuleAndOperator ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LifecycleRuleAndOperator) Validate    added in  v1.5.11

func (s * LifecycleRuleAndOperator ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type LifecycleRuleFilter    added in  v1.5.11
type LifecycleRuleFilter struct {  // This is used in a Lifecycle Rule Filter to apply a logical AND to two or   // more predicates. The Lifecycle Rule will apply to any object matching all  // of the predicates configured inside the And operator. And * LifecycleRuleAndOperator `type:"structure"`  // Minimum object size to which the rule applies.  ObjectSizeGreaterThan * int64 `type:"long"`  // Maximum object size to which the rule applies.  ObjectSizeLessThan * int64 `type:"long"`  // Prefix identifying one or more objects to which the rule applies.   //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ). Prefix * string `type:"string"`  // This tag must exist in the object's tag set in order for the rule to apply.  Tag * Tag `type:"structure"` // contains filtered or unexported fields }
The Filter is used to identify objects that a Lifecycle Rule applies to.
A Filter must have exactly one of Prefix, Tag, or And specified.

func (LifecycleRuleFilter) GoString    added in  v1.5.11

func (s LifecycleRuleFilter ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LifecycleRuleFilter) SetAnd    added in  v1.5.11

func (s * LifecycleRuleFilter ) SetAnd(v * LifecycleRuleAndOperator ) * LifecycleRuleFilter
SetAnd sets the And field's value.

func (*LifecycleRuleFilter) SetObjectSizeGreaterThan    added in  v1.42.11

func (s * LifecycleRuleFilter ) SetObjectSizeGreaterThan(v int64 ) * LifecycleRuleFilter
SetObjectSizeGreaterThan sets the ObjectSizeGreaterThan field's value.

func (*LifecycleRuleFilter) SetObjectSizeLessThan    added in  v1.42.11

func (s * LifecycleRuleFilter ) SetObjectSizeLessThan(v int64 ) * LifecycleRuleFilter
SetObjectSizeLessThan sets the ObjectSizeLessThan field's value.

func (*LifecycleRuleFilter) SetPrefix    added in  v1.5.11

func (s * LifecycleRuleFilter ) SetPrefix(v string ) * LifecycleRuleFilter
SetPrefix sets the Prefix field's value.

func (*LifecycleRuleFilter) SetTag    added in  v1.5.11

func (s * LifecycleRuleFilter ) SetTag(v * Tag ) * LifecycleRuleFilter
SetTag sets the Tag field's value.

func (LifecycleRuleFilter) String    added in  v1.5.11

func (s LifecycleRuleFilter ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LifecycleRuleFilter) Validate    added in  v1.5.11

func (s * LifecycleRuleFilter ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ListBucketAnalyticsConfigurationsInput    added in  v1.5.11
type ListBucketAnalyticsConfigurationsInput struct {  // The name of the bucket from which analytics configurations are retrieved.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The ContinuationToken that represents a placeholder from where this request   // should begin. ContinuationToken * string `location:"querystring" locationName:"continuation-token" type:"string"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (ListBucketAnalyticsConfigurationsInput) GoString    added in  v1.5.11

func (s ListBucketAnalyticsConfigurationsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketAnalyticsConfigurationsInput) SetBucket    added in  v1.5.11

func (s * ListBucketAnalyticsConfigurationsInput ) SetBucket(v string ) * ListBucketAnalyticsConfigurationsInput
SetBucket sets the Bucket field's value.

func (*ListBucketAnalyticsConfigurationsInput) SetContinuationToken    added in  v1.5.11

func (s * ListBucketAnalyticsConfigurationsInput ) SetContinuationToken(v string ) * ListBucketAnalyticsConfigurationsInput
SetContinuationToken sets the ContinuationToken field's value.

func (*ListBucketAnalyticsConfigurationsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * ListBucketAnalyticsConfigurationsInput ) SetExpectedBucketOwner(v string ) * ListBucketAnalyticsConfigurationsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (ListBucketAnalyticsConfigurationsInput) String    added in  v1.5.11

func (s ListBucketAnalyticsConfigurationsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketAnalyticsConfigurationsInput) Validate    added in  v1.5.11

func (s * ListBucketAnalyticsConfigurationsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ListBucketAnalyticsConfigurationsOutput    added in  v1.5.11
type ListBucketAnalyticsConfigurationsOutput struct {  // The list of analytics configurations for a bucket.  AnalyticsConfigurationList []* AnalyticsConfiguration `locationName:"AnalyticsConfiguration" type:"list" flattened:"true"`  // The marker that is used as a starting point for this analytics configuration   // list response. This value is present if it was sent in the request. ContinuationToken * string `type:"string"`  // Indicates whether the returned list of analytics configurations is complete.   // A value of true indicates that the list is not complete and the NextContinuationToken  // will be provided for a subsequent request. IsTruncated * bool `type:"boolean"`  // NextContinuationToken is sent when isTruncated is true, which indicates that   // there are more analytics configurations to list. The next request must include  // this NextContinuationToken. The token is obfuscated and is not a usable value. NextContinuationToken * string `type:"string"` // contains filtered or unexported fields }

func (ListBucketAnalyticsConfigurationsOutput) GoString    added in  v1.5.11

func (s ListBucketAnalyticsConfigurationsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketAnalyticsConfigurationsOutput) SetAnalyticsConfigurationList    added in  v1.5.11

func (s * ListBucketAnalyticsConfigurationsOutput ) SetAnalyticsConfigurationList(v []* AnalyticsConfiguration ) * ListBucketAnalyticsConfigurationsOutput
SetAnalyticsConfigurationList sets the AnalyticsConfigurationList field's value.

func (*ListBucketAnalyticsConfigurationsOutput) SetContinuationToken    added in  v1.5.11

func (s * ListBucketAnalyticsConfigurationsOutput ) SetContinuationToken(v string ) * ListBucketAnalyticsConfigurationsOutput
SetContinuationToken sets the ContinuationToken field's value.

func (*ListBucketAnalyticsConfigurationsOutput) SetIsTruncated    added in  v1.5.11

func (s * ListBucketAnalyticsConfigurationsOutput ) SetIsTruncated(v bool ) * ListBucketAnalyticsConfigurationsOutput
SetIsTruncated sets the IsTruncated field's value.

func (*ListBucketAnalyticsConfigurationsOutput) SetNextContinuationToken    added in  v1.5.11

func (s * ListBucketAnalyticsConfigurationsOutput ) SetNextContinuationToken(v string ) * ListBucketAnalyticsConfigurationsOutput
SetNextContinuationToken sets the NextContinuationToken field's value.

func (ListBucketAnalyticsConfigurationsOutput) String    added in  v1.5.11

func (s ListBucketAnalyticsConfigurationsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ListBucketIntelligentTieringConfigurationsInput    added in  v1.35.24
type ListBucketIntelligentTieringConfigurationsInput struct {  // The name of the Amazon S3 bucket whose configuration you want to modify or   // retrieve.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The ContinuationToken that represents a placeholder from where this request   // should begin. ContinuationToken * string `location:"querystring" locationName:"continuation-token" type:"string"` // contains filtered or unexported fields }

func (ListBucketIntelligentTieringConfigurationsInput) GoString    added in  v1.35.24

func (s ListBucketIntelligentTieringConfigurationsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketIntelligentTieringConfigurationsInput) SetBucket    added in  v1.35.24

func (s * ListBucketIntelligentTieringConfigurationsInput ) SetBucket(v string ) * ListBucketIntelligentTieringConfigurationsInput
SetBucket sets the Bucket field's value.

func (*ListBucketIntelligentTieringConfigurationsInput) SetContinuationToken    added in  v1.35.24

func (s * ListBucketIntelligentTieringConfigurationsInput ) SetContinuationToken(v string ) * ListBucketIntelligentTieringConfigurationsInput
SetContinuationToken sets the ContinuationToken field's value.

func (ListBucketIntelligentTieringConfigurationsInput) String    added in  v1.35.24

func (s ListBucketIntelligentTieringConfigurationsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketIntelligentTieringConfigurationsInput) Validate    added in  v1.35.24

func (s * ListBucketIntelligentTieringConfigurationsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ListBucketIntelligentTieringConfigurationsOutput    added in  v1.35.24
type ListBucketIntelligentTieringConfigurationsOutput struct {  // The ContinuationToken that represents a placeholder from where this request   // should begin. ContinuationToken * string `type:"string"`  // The list of S3 Intelligent-Tiering configurations for a bucket.  IntelligentTieringConfigurationList []* IntelligentTieringConfiguration `locationName:"IntelligentTieringConfiguration" type:"list" flattened:"true"`  // Indicates whether the returned list of analytics configurations is complete.   // A value of true indicates that the list is not complete and the NextContinuationToken  // will be provided for a subsequent request. IsTruncated * bool `type:"boolean"`  // The marker used to continue this inventory configuration listing. Use the   // NextContinuationToken from this response to continue the listing in a subsequent  // request. The continuation token is an opaque value that Amazon S3 understands. NextContinuationToken * string `type:"string"` // contains filtered or unexported fields }

func (ListBucketIntelligentTieringConfigurationsOutput) GoString    added in  v1.35.24

func (s ListBucketIntelligentTieringConfigurationsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketIntelligentTieringConfigurationsOutput) SetContinuationToken    added in  v1.35.24

func (s * ListBucketIntelligentTieringConfigurationsOutput ) SetContinuationToken(v string ) * ListBucketIntelligentTieringConfigurationsOutput
SetContinuationToken sets the ContinuationToken field's value.

func (*ListBucketIntelligentTieringConfigurationsOutput) SetIntelligentTieringConfigurationList    added in  v1.35.24

func (s * ListBucketIntelligentTieringConfigurationsOutput ) SetIntelligentTieringConfigurationList(v []* IntelligentTieringConfiguration ) * ListBucketIntelligentTieringConfigurationsOutput
SetIntelligentTieringConfigurationList sets the IntelligentTieringConfigurationList field's value.

func (*ListBucketIntelligentTieringConfigurationsOutput) SetIsTruncated    added in  v1.35.24

func (s * ListBucketIntelligentTieringConfigurationsOutput ) SetIsTruncated(v bool ) * ListBucketIntelligentTieringConfigurationsOutput
SetIsTruncated sets the IsTruncated field's value.

func (*ListBucketIntelligentTieringConfigurationsOutput) SetNextContinuationToken    added in  v1.35.24

func (s * ListBucketIntelligentTieringConfigurationsOutput ) SetNextContinuationToken(v string ) * ListBucketIntelligentTieringConfigurationsOutput
SetNextContinuationToken sets the NextContinuationToken field's value.

func (ListBucketIntelligentTieringConfigurationsOutput) String    added in  v1.35.24

func (s ListBucketIntelligentTieringConfigurationsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ListBucketInventoryConfigurationsInput    added in  v1.5.11
type ListBucketInventoryConfigurationsInput struct {  // The name of the bucket containing the inventory configurations to retrieve.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The marker used to continue an inventory configuration listing that has been   // truncated. Use the NextContinuationToken from a previously truncated list  // response to continue the listing. The continuation token is an opaque value  // that Amazon S3 understands. ContinuationToken * string `location:"querystring" locationName:"continuation-token" type:"string"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (ListBucketInventoryConfigurationsInput) GoString    added in  v1.5.11

func (s ListBucketInventoryConfigurationsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketInventoryConfigurationsInput) SetBucket    added in  v1.5.11

func (s * ListBucketInventoryConfigurationsInput ) SetBucket(v string ) * ListBucketInventoryConfigurationsInput
SetBucket sets the Bucket field's value.

func (*ListBucketInventoryConfigurationsInput) SetContinuationToken    added in  v1.5.11

func (s * ListBucketInventoryConfigurationsInput ) SetContinuationToken(v string ) * ListBucketInventoryConfigurationsInput
SetContinuationToken sets the ContinuationToken field's value.

func (*ListBucketInventoryConfigurationsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * ListBucketInventoryConfigurationsInput ) SetExpectedBucketOwner(v string ) * ListBucketInventoryConfigurationsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (ListBucketInventoryConfigurationsInput) String    added in  v1.5.11

func (s ListBucketInventoryConfigurationsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketInventoryConfigurationsInput) Validate    added in  v1.5.11

func (s * ListBucketInventoryConfigurationsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ListBucketInventoryConfigurationsOutput    added in  v1.5.11
type ListBucketInventoryConfigurationsOutput struct {  // If sent in the request, the marker that is used as a starting point for this   // inventory configuration list response. ContinuationToken * string `type:"string"`  // The list of inventory configurations for a bucket.  InventoryConfigurationList []* InventoryConfiguration `locationName:"InventoryConfiguration" type:"list" flattened:"true"`  // Tells whether the returned list of inventory configurations is complete.   // A value of true indicates that the list is not complete and the NextContinuationToken  // is provided for a subsequent request. IsTruncated * bool `type:"boolean"`  // The marker used to continue this inventory configuration listing. Use the   // NextContinuationToken from this response to continue the listing in a subsequent  // request. The continuation token is an opaque value that Amazon S3 understands. NextContinuationToken * string `type:"string"` // contains filtered or unexported fields }

func (ListBucketInventoryConfigurationsOutput) GoString    added in  v1.5.11

func (s ListBucketInventoryConfigurationsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketInventoryConfigurationsOutput) SetContinuationToken    added in  v1.5.11

func (s * ListBucketInventoryConfigurationsOutput ) SetContinuationToken(v string ) * ListBucketInventoryConfigurationsOutput
SetContinuationToken sets the ContinuationToken field's value.

func (*ListBucketInventoryConfigurationsOutput) SetInventoryConfigurationList    added in  v1.5.11

func (s * ListBucketInventoryConfigurationsOutput ) SetInventoryConfigurationList(v []* InventoryConfiguration ) * ListBucketInventoryConfigurationsOutput
SetInventoryConfigurationList sets the InventoryConfigurationList field's value.

func (*ListBucketInventoryConfigurationsOutput) SetIsTruncated    added in  v1.5.11

func (s * ListBucketInventoryConfigurationsOutput ) SetIsTruncated(v bool ) * ListBucketInventoryConfigurationsOutput
SetIsTruncated sets the IsTruncated field's value.

func (*ListBucketInventoryConfigurationsOutput) SetNextContinuationToken    added in  v1.5.11

func (s * ListBucketInventoryConfigurationsOutput ) SetNextContinuationToken(v string ) * ListBucketInventoryConfigurationsOutput
SetNextContinuationToken sets the NextContinuationToken field's value.

func (ListBucketInventoryConfigurationsOutput) String    added in  v1.5.11

func (s ListBucketInventoryConfigurationsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ListBucketMetricsConfigurationsInput    added in  v1.5.11
type ListBucketMetricsConfigurationsInput struct {  // The name of the bucket containing the metrics configurations to retrieve.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The marker that is used to continue a metrics configuration listing that   // has been truncated. Use the NextContinuationToken from a previously truncated  // list response to continue the listing. The continuation token is an opaque  // value that Amazon S3 understands. ContinuationToken * string `location:"querystring" locationName:"continuation-token" type:"string"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (ListBucketMetricsConfigurationsInput) GoString    added in  v1.5.11

func (s ListBucketMetricsConfigurationsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketMetricsConfigurationsInput) SetBucket    added in  v1.5.11

func (s * ListBucketMetricsConfigurationsInput ) SetBucket(v string ) * ListBucketMetricsConfigurationsInput
SetBucket sets the Bucket field's value.

func (*ListBucketMetricsConfigurationsInput) SetContinuationToken    added in  v1.5.11

func (s * ListBucketMetricsConfigurationsInput ) SetContinuationToken(v string ) * ListBucketMetricsConfigurationsInput
SetContinuationToken sets the ContinuationToken field's value.

func (*ListBucketMetricsConfigurationsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * ListBucketMetricsConfigurationsInput ) SetExpectedBucketOwner(v string ) * ListBucketMetricsConfigurationsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (ListBucketMetricsConfigurationsInput) String    added in  v1.5.11

func (s ListBucketMetricsConfigurationsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketMetricsConfigurationsInput) Validate    added in  v1.5.11

func (s * ListBucketMetricsConfigurationsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ListBucketMetricsConfigurationsOutput    added in  v1.5.11
type ListBucketMetricsConfigurationsOutput struct {  // The marker that is used as a starting point for this metrics configuration   // list response. This value is present if it was sent in the request. ContinuationToken * string `type:"string"`  // Indicates whether the returned list of metrics configurations is complete.   // A value of true indicates that the list is not complete and the NextContinuationToken  // will be provided for a subsequent request. IsTruncated * bool `type:"boolean"`  // The list of metrics configurations for a bucket.  MetricsConfigurationList []* MetricsConfiguration `locationName:"MetricsConfiguration" type:"list" flattened:"true"`  // The marker used to continue a metrics configuration listing that has been   // truncated. Use the NextContinuationToken from a previously truncated list  // response to continue the listing. The continuation token is an opaque value  // that Amazon S3 understands. NextContinuationToken * string `type:"string"` // contains filtered or unexported fields }

func (ListBucketMetricsConfigurationsOutput) GoString    added in  v1.5.11

func (s ListBucketMetricsConfigurationsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketMetricsConfigurationsOutput) SetContinuationToken    added in  v1.5.11

func (s * ListBucketMetricsConfigurationsOutput ) SetContinuationToken(v string ) * ListBucketMetricsConfigurationsOutput
SetContinuationToken sets the ContinuationToken field's value.

func (*ListBucketMetricsConfigurationsOutput) SetIsTruncated    added in  v1.5.11

func (s * ListBucketMetricsConfigurationsOutput ) SetIsTruncated(v bool ) * ListBucketMetricsConfigurationsOutput
SetIsTruncated sets the IsTruncated field's value.

func (*ListBucketMetricsConfigurationsOutput) SetMetricsConfigurationList    added in  v1.5.11

func (s * ListBucketMetricsConfigurationsOutput ) SetMetricsConfigurationList(v []* MetricsConfiguration ) * ListBucketMetricsConfigurationsOutput
SetMetricsConfigurationList sets the MetricsConfigurationList field's value.

func (*ListBucketMetricsConfigurationsOutput) SetNextContinuationToken    added in  v1.5.11

func (s * ListBucketMetricsConfigurationsOutput ) SetNextContinuationToken(v string ) * ListBucketMetricsConfigurationsOutput
SetNextContinuationToken sets the NextContinuationToken field's value.

func (ListBucketMetricsConfigurationsOutput) String    added in  v1.5.11

func (s ListBucketMetricsConfigurationsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ListBucketsInput
type ListBucketsInput struct { // contains filtered or unexported fields }

func (ListBucketsInput) GoString    added in  v0.6.5

func (s ListBucketsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (ListBucketsInput) String    added in  v0.6.5

func (s ListBucketsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ListBucketsOutput
type ListBucketsOutput struct {  // The list of buckets owned by the requester.  Buckets []* Bucket `locationNameList:"Bucket" type:"list"`  // The owner of the buckets listed.  Owner * Owner `type:"structure"` // contains filtered or unexported fields }

func (ListBucketsOutput) GoString    added in  v0.6.5

func (s ListBucketsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListBucketsOutput) SetBuckets    added in  v1.5.0

func (s * ListBucketsOutput ) SetBuckets(v []* Bucket ) * ListBucketsOutput
SetBuckets sets the Buckets field's value.

func (*ListBucketsOutput) SetOwner    added in  v1.5.0

func (s * ListBucketsOutput ) SetOwner(v * Owner ) * ListBucketsOutput
SetOwner sets the Owner field's value.

func (ListBucketsOutput) String    added in  v0.6.5

func (s ListBucketsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ListMultipartUploadsInput
type ListMultipartUploadsInput struct {  // The name of the bucket to which the multipart upload was initiated.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Character you use to group keys.   //  // All keys that contain the same string between the prefix, if specified, and  // the first occurrence of the delimiter after the prefix are grouped under  // a single result element, CommonPrefixes. If you don't specify the prefix  // parameter, then the substring starts at the beginning of the key. The keys  // that are grouped under CommonPrefixes result element are not returned elsewhere  // in the response. Delimiter * string `location:"querystring" locationName:"delimiter" type:"string"`  // Requests Amazon S3 to encode the object keys in the response and specifies   // the encoding method to use. An object key can contain any Unicode character;  // however, the XML 1.0 parser cannot parse some characters, such as characters  // with an ASCII value from 0 to 10. For characters that are not supported in  // XML 1.0, you can add this parameter to request that Amazon S3 encode the  // keys in the response. EncodingType * string `location:"querystring" locationName:"encoding-type" type:"string" enum:"EncodingType"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Together with upload-id-marker, this parameter specifies the multipart upload   // after which listing should begin.  //  // If upload-id-marker is not specified, only the keys lexicographically greater  // than the specified key-marker will be included in the list.  //  // If upload-id-marker is specified, any multipart uploads for a key equal to  // the key-marker might also be included, provided those multipart uploads have  // upload IDs lexicographically greater than the specified upload-id-marker. KeyMarker * string `location:"querystring" locationName:"key-marker" type:"string"`  // Sets the maximum number of multipart uploads, from 1 to 1,000, to return   // in the response body. 1,000 is the maximum number of uploads that can be  // returned in a response. MaxUploads * int64 `location:"querystring" locationName:"max-uploads" type:"integer"`  // Lists in-progress uploads only for those keys that begin with the specified   // prefix. You can use prefixes to separate a bucket into different grouping  // of keys. (You can think of using prefix to make groups in the same way that  // you'd use a folder in a file system.) Prefix * string `location:"querystring" locationName:"prefix" type:"string"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Together with key-marker, specifies the multipart upload after which listing   // should begin. If key-marker is not specified, the upload-id-marker parameter  // is ignored. Otherwise, any multipart uploads for a key equal to the key-marker  // might be included in the list only if they have an upload ID lexicographically  // greater than the specified upload-id-marker. UploadIdMarker * string `location:"querystring" locationName:"upload-id-marker" type:"string"` // contains filtered or unexported fields }

func (ListMultipartUploadsInput) GoString    added in  v0.6.5

func (s ListMultipartUploadsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListMultipartUploadsInput) SetBucket    added in  v1.5.0

func (s * ListMultipartUploadsInput ) SetBucket(v string ) * ListMultipartUploadsInput
SetBucket sets the Bucket field's value.

func (*ListMultipartUploadsInput) SetDelimiter    added in  v1.5.0

func (s * ListMultipartUploadsInput ) SetDelimiter(v string ) * ListMultipartUploadsInput
SetDelimiter sets the Delimiter field's value.

func (*ListMultipartUploadsInput) SetEncodingType    added in  v1.5.0

func (s * ListMultipartUploadsInput ) SetEncodingType(v string ) * ListMultipartUploadsInput
SetEncodingType sets the EncodingType field's value.

func (*ListMultipartUploadsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * ListMultipartUploadsInput ) SetExpectedBucketOwner(v string ) * ListMultipartUploadsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*ListMultipartUploadsInput) SetKeyMarker    added in  v1.5.0

func (s * ListMultipartUploadsInput ) SetKeyMarker(v string ) * ListMultipartUploadsInput
SetKeyMarker sets the KeyMarker field's value.

func (*ListMultipartUploadsInput) SetMaxUploads    added in  v1.5.0

func (s * ListMultipartUploadsInput ) SetMaxUploads(v int64 ) * ListMultipartUploadsInput
SetMaxUploads sets the MaxUploads field's value.

func (*ListMultipartUploadsInput) SetPrefix    added in  v1.5.0

func (s * ListMultipartUploadsInput ) SetPrefix(v string ) * ListMultipartUploadsInput
SetPrefix sets the Prefix field's value.

func (*ListMultipartUploadsInput) SetRequestPayer    added in  v1.44.284

func (s * ListMultipartUploadsInput ) SetRequestPayer(v string ) * ListMultipartUploadsInput
SetRequestPayer sets the RequestPayer field's value.

func (*ListMultipartUploadsInput) SetUploadIdMarker    added in  v1.5.0

func (s * ListMultipartUploadsInput ) SetUploadIdMarker(v string ) * ListMultipartUploadsInput
SetUploadIdMarker sets the UploadIdMarker field's value.

func (ListMultipartUploadsInput) String    added in  v0.6.5

func (s ListMultipartUploadsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListMultipartUploadsInput) Validate    added in  v1.1.21

func (s * ListMultipartUploadsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ListMultipartUploadsOutput
type ListMultipartUploadsOutput struct {  // The name of the bucket to which the multipart upload was initiated. Does   // not return the access point ARN or access point alias if used. Bucket * string `type:"string"`  // If you specify a delimiter in the request, then the result returns each distinct   // key prefix containing the delimiter in a CommonPrefixes element. The distinct  // key prefixes are returned in the Prefix child element. CommonPrefixes []* CommonPrefix `type:"list" flattened:"true"`  // Contains the delimiter you specified in the request. If you don't specify   // a delimiter in your request, this element is absent from the response. Delimiter * string `type:"string"`  // Encoding type used by Amazon S3 to encode object keys in the response.   //  // If you specify the encoding-type request parameter, Amazon S3 includes this  // element in the response, and returns encoded key name values in the following  // response elements:  //  // Delimiter, KeyMarker, Prefix, NextKeyMarker, Key. EncodingType * string `type:"string" enum:"EncodingType"`  // Indicates whether the returned list of multipart uploads is truncated. A   // value of true indicates that the list was truncated. The list can be truncated  // if the number of multipart uploads exceeds the limit allowed or specified  // by max uploads. IsTruncated * bool `type:"boolean"`  // The key at or after which the listing began.  KeyMarker * string `type:"string"`  // Maximum number of multipart uploads that could have been included in the   // response. MaxUploads * int64 `type:"integer"`  // When a list is truncated, this element specifies the value that should be   // used for the key-marker request parameter in a subsequent request. NextKeyMarker * string `type:"string"`  // When a list is truncated, this element specifies the value that should be   // used for the upload-id-marker request parameter in a subsequent request. NextUploadIdMarker * string `type:"string"`  // When a prefix is provided in the request, this field contains the specified   // prefix. The result contains only keys starting with the specified prefix. Prefix * string `type:"string"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // Upload ID after which listing began.  UploadIdMarker * string `type:"string"`  // Container for elements related to a particular multipart upload. A response   // can contain zero or more Upload elements. Uploads []* MultipartUpload `locationName:"Upload" type:"list" flattened:"true"` // contains filtered or unexported fields }

func (ListMultipartUploadsOutput) GoString    added in  v0.6.5

func (s ListMultipartUploadsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListMultipartUploadsOutput) SetBucket    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetBucket(v string ) * ListMultipartUploadsOutput
SetBucket sets the Bucket field's value.

func (*ListMultipartUploadsOutput) SetCommonPrefixes    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetCommonPrefixes(v []* CommonPrefix ) * ListMultipartUploadsOutput
SetCommonPrefixes sets the CommonPrefixes field's value.

func (*ListMultipartUploadsOutput) SetDelimiter    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetDelimiter(v string ) * ListMultipartUploadsOutput
SetDelimiter sets the Delimiter field's value.

func (*ListMultipartUploadsOutput) SetEncodingType    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetEncodingType(v string ) * ListMultipartUploadsOutput
SetEncodingType sets the EncodingType field's value.

func (*ListMultipartUploadsOutput) SetIsTruncated    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetIsTruncated(v bool ) * ListMultipartUploadsOutput
SetIsTruncated sets the IsTruncated field's value.

func (*ListMultipartUploadsOutput) SetKeyMarker    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetKeyMarker(v string ) * ListMultipartUploadsOutput
SetKeyMarker sets the KeyMarker field's value.

func (*ListMultipartUploadsOutput) SetMaxUploads    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetMaxUploads(v int64 ) * ListMultipartUploadsOutput
SetMaxUploads sets the MaxUploads field's value.

func (*ListMultipartUploadsOutput) SetNextKeyMarker    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetNextKeyMarker(v string ) * ListMultipartUploadsOutput
SetNextKeyMarker sets the NextKeyMarker field's value.

func (*ListMultipartUploadsOutput) SetNextUploadIdMarker    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetNextUploadIdMarker(v string ) * ListMultipartUploadsOutput
SetNextUploadIdMarker sets the NextUploadIdMarker field's value.

func (*ListMultipartUploadsOutput) SetPrefix    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetPrefix(v string ) * ListMultipartUploadsOutput
SetPrefix sets the Prefix field's value.

func (*ListMultipartUploadsOutput) SetRequestCharged    added in  v1.44.284

func (s * ListMultipartUploadsOutput ) SetRequestCharged(v string ) * ListMultipartUploadsOutput
SetRequestCharged sets the RequestCharged field's value.

func (*ListMultipartUploadsOutput) SetUploadIdMarker    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetUploadIdMarker(v string ) * ListMultipartUploadsOutput
SetUploadIdMarker sets the UploadIdMarker field's value.

func (*ListMultipartUploadsOutput) SetUploads    added in  v1.5.0

func (s * ListMultipartUploadsOutput ) SetUploads(v []* MultipartUpload ) * ListMultipartUploadsOutput
SetUploads sets the Uploads field's value.

func (ListMultipartUploadsOutput) String    added in  v0.6.5

func (s ListMultipartUploadsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ListObjectVersionsInput
type ListObjectVersionsInput struct {  // The bucket name that contains the objects.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // A delimiter is a character that you specify to group keys. All keys that   // contain the same string between the prefix and the first occurrence of the  // delimiter are grouped under a single result element in CommonPrefixes. These  // groups are counted as one result against the max-keys limitation. These keys  // are not returned elsewhere in the response. Delimiter * string `location:"querystring" locationName:"delimiter" type:"string"`  // Requests Amazon S3 to encode the object keys in the response and specifies   // the encoding method to use. An object key can contain any Unicode character;  // however, the XML 1.0 parser cannot parse some characters, such as characters  // with an ASCII value from 0 to 10. For characters that are not supported in  // XML 1.0, you can add this parameter to request that Amazon S3 encode the  // keys in the response. EncodingType * string `location:"querystring" locationName:"encoding-type" type:"string" enum:"EncodingType"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Specifies the key to start with when listing objects in a bucket.  KeyMarker * string `location:"querystring" locationName:"key-marker" type:"string"`  // Sets the maximum number of keys returned in the response. By default, the   // action returns up to 1,000 key names. The response might contain fewer keys  // but will never contain more. If additional keys satisfy the search criteria,  // but were not returned because max-keys was exceeded, the response contains  // <isTruncated>true</isTruncated>. To return the additional keys, see key-marker  // and version-id-marker. MaxKeys * int64 `location:"querystring" locationName:"max-keys" type:"integer"`  // Specifies the optional fields that you want returned in the response. Fields   // that you do not specify are not returned. OptionalObjectAttributes []* string `location:"header" locationName:"x-amz-optional-object-attributes" type:"list" enum:"OptionalObjectAttributes"`  // Use this parameter to select only those keys that begin with the specified   // prefix. You can use prefixes to separate a bucket into different groupings  // of keys. (You can think of using prefix to make groups in the same way that  // you'd use a folder in a file system.) You can use prefix with delimiter to  // roll up numerous objects into a single result under CommonPrefixes. Prefix * string `location:"querystring" locationName:"prefix" type:"string"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Specifies the object version you want to start listing from.  VersionIdMarker * string `location:"querystring" locationName:"version-id-marker" type:"string"` // contains filtered or unexported fields }

func (ListObjectVersionsInput) GoString    added in  v0.6.5

func (s ListObjectVersionsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListObjectVersionsInput) SetBucket    added in  v1.5.0

func (s * ListObjectVersionsInput ) SetBucket(v string ) * ListObjectVersionsInput
SetBucket sets the Bucket field's value.

func (*ListObjectVersionsInput) SetDelimiter    added in  v1.5.0

func (s * ListObjectVersionsInput ) SetDelimiter(v string ) * ListObjectVersionsInput
SetDelimiter sets the Delimiter field's value.

func (*ListObjectVersionsInput) SetEncodingType    added in  v1.5.0

func (s * ListObjectVersionsInput ) SetEncodingType(v string ) * ListObjectVersionsInput
SetEncodingType sets the EncodingType field's value.

func (*ListObjectVersionsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * ListObjectVersionsInput ) SetExpectedBucketOwner(v string ) * ListObjectVersionsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*ListObjectVersionsInput) SetKeyMarker    added in  v1.5.0

func (s * ListObjectVersionsInput ) SetKeyMarker(v string ) * ListObjectVersionsInput
SetKeyMarker sets the KeyMarker field's value.

func (*ListObjectVersionsInput) SetMaxKeys    added in  v1.5.0

func (s * ListObjectVersionsInput ) SetMaxKeys(v int64 ) * ListObjectVersionsInput
SetMaxKeys sets the MaxKeys field's value.

func (*ListObjectVersionsInput) SetOptionalObjectAttributes    added in  v1.44.292

func (s * ListObjectVersionsInput ) SetOptionalObjectAttributes(v []* string ) * ListObjectVersionsInput
SetOptionalObjectAttributes sets the OptionalObjectAttributes field's value.

func (*ListObjectVersionsInput) SetPrefix    added in  v1.5.0

func (s * ListObjectVersionsInput ) SetPrefix(v string ) * ListObjectVersionsInput
SetPrefix sets the Prefix field's value.

func (*ListObjectVersionsInput) SetRequestPayer    added in  v1.44.284

func (s * ListObjectVersionsInput ) SetRequestPayer(v string ) * ListObjectVersionsInput
SetRequestPayer sets the RequestPayer field's value.

func (*ListObjectVersionsInput) SetVersionIdMarker    added in  v1.5.0

func (s * ListObjectVersionsInput ) SetVersionIdMarker(v string ) * ListObjectVersionsInput
SetVersionIdMarker sets the VersionIdMarker field's value.

func (ListObjectVersionsInput) String    added in  v0.6.5

func (s ListObjectVersionsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListObjectVersionsInput) Validate    added in  v1.1.21

func (s * ListObjectVersionsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ListObjectVersionsOutput
type ListObjectVersionsOutput struct {  // All of the keys rolled up into a common prefix count as a single return when   // calculating the number of returns. CommonPrefixes []* CommonPrefix `type:"list" flattened:"true"`  // Container for an object that is a delete marker.  DeleteMarkers []* DeleteMarkerEntry `locationName:"DeleteMarker" type:"list" flattened:"true"`  // The delimiter grouping the included keys. A delimiter is a character that   // you specify to group keys. All keys that contain the same string between  // the prefix and the first occurrence of the delimiter are grouped under a  // single result element in CommonPrefixes. These groups are counted as one  // result against the max-keys limitation. These keys are not returned elsewhere  // in the response. Delimiter * string `type:"string"`  // Encoding type used by Amazon S3 to encode object key names in the XML response.   //  // If you specify the encoding-type request parameter, Amazon S3 includes this  // element in the response, and returns encoded key name values in the following  // response elements:  //  // KeyMarker, NextKeyMarker, Prefix, Key, and Delimiter. EncodingType * string `type:"string" enum:"EncodingType"`  // A flag that indicates whether Amazon S3 returned all of the results that   // satisfied the search criteria. If your results were truncated, you can make  // a follow-up paginated request by using the NextKeyMarker and NextVersionIdMarker  // response parameters as a starting place in another request to return the  // rest of the results. IsTruncated * bool `type:"boolean"`  // Marks the last key returned in a truncated response.  KeyMarker * string `type:"string"`  // Specifies the maximum number of objects to return.  MaxKeys * int64 `type:"integer"`  // The bucket name.  Name * string `type:"string"`  // When the number of responses exceeds the value of MaxKeys, NextKeyMarker   // specifies the first key not returned that satisfies the search criteria.  // Use this value for the key-marker request parameter in a subsequent request. NextKeyMarker * string `type:"string"`  // When the number of responses exceeds the value of MaxKeys, NextVersionIdMarker   // specifies the first object version not returned that satisfies the search  // criteria. Use this value for the version-id-marker request parameter in a  // subsequent request. NextVersionIdMarker * string `type:"string"`  // Selects objects that start with the value supplied by this parameter.  Prefix * string `type:"string"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // Marks the last version of the key returned in a truncated response.  VersionIdMarker * string `type:"string"`  // Container for version information.  Versions []* ObjectVersion `locationName:"Version" type:"list" flattened:"true"` // contains filtered or unexported fields }

func (ListObjectVersionsOutput) GoString    added in  v0.6.5

func (s ListObjectVersionsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListObjectVersionsOutput) SetCommonPrefixes    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetCommonPrefixes(v []* CommonPrefix ) * ListObjectVersionsOutput
SetCommonPrefixes sets the CommonPrefixes field's value.

func (*ListObjectVersionsOutput) SetDeleteMarkers    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetDeleteMarkers(v []* DeleteMarkerEntry ) * ListObjectVersionsOutput
SetDeleteMarkers sets the DeleteMarkers field's value.

func (*ListObjectVersionsOutput) SetDelimiter    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetDelimiter(v string ) * ListObjectVersionsOutput
SetDelimiter sets the Delimiter field's value.

func (*ListObjectVersionsOutput) SetEncodingType    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetEncodingType(v string ) * ListObjectVersionsOutput
SetEncodingType sets the EncodingType field's value.

func (*ListObjectVersionsOutput) SetIsTruncated    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetIsTruncated(v bool ) * ListObjectVersionsOutput
SetIsTruncated sets the IsTruncated field's value.

func (*ListObjectVersionsOutput) SetKeyMarker    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetKeyMarker(v string ) * ListObjectVersionsOutput
SetKeyMarker sets the KeyMarker field's value.

func (*ListObjectVersionsOutput) SetMaxKeys    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetMaxKeys(v int64 ) * ListObjectVersionsOutput
SetMaxKeys sets the MaxKeys field's value.

func (*ListObjectVersionsOutput) SetName    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetName(v string ) * ListObjectVersionsOutput
SetName sets the Name field's value.

func (*ListObjectVersionsOutput) SetNextKeyMarker    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetNextKeyMarker(v string ) * ListObjectVersionsOutput
SetNextKeyMarker sets the NextKeyMarker field's value.

func (*ListObjectVersionsOutput) SetNextVersionIdMarker    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetNextVersionIdMarker(v string ) * ListObjectVersionsOutput
SetNextVersionIdMarker sets the NextVersionIdMarker field's value.

func (*ListObjectVersionsOutput) SetPrefix    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetPrefix(v string ) * ListObjectVersionsOutput
SetPrefix sets the Prefix field's value.

func (*ListObjectVersionsOutput) SetRequestCharged    added in  v1.44.284

func (s * ListObjectVersionsOutput ) SetRequestCharged(v string ) * ListObjectVersionsOutput
SetRequestCharged sets the RequestCharged field's value.

func (*ListObjectVersionsOutput) SetVersionIdMarker    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetVersionIdMarker(v string ) * ListObjectVersionsOutput
SetVersionIdMarker sets the VersionIdMarker field's value.

func (*ListObjectVersionsOutput) SetVersions    added in  v1.5.0

func (s * ListObjectVersionsOutput ) SetVersions(v []* ObjectVersion ) * ListObjectVersionsOutput
SetVersions sets the Versions field's value.

func (ListObjectVersionsOutput) String    added in  v0.6.5

func (s ListObjectVersionsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ListObjectsInput
type ListObjectsInput struct {  // The name of the bucket containing the objects.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // A delimiter is a character that you use to group keys.  Delimiter * string `location:"querystring" locationName:"delimiter" type:"string"`  // Requests Amazon S3 to encode the object keys in the response and specifies   // the encoding method to use. An object key can contain any Unicode character;  // however, the XML 1.0 parser cannot parse some characters, such as characters  // with an ASCII value from 0 to 10. For characters that are not supported in  // XML 1.0, you can add this parameter to request that Amazon S3 encode the  // keys in the response. EncodingType * string `location:"querystring" locationName:"encoding-type" type:"string" enum:"EncodingType"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Marker is where you want Amazon S3 to start listing from. Amazon S3 starts   // listing after this specified key. Marker can be any key in the bucket. Marker * string `location:"querystring" locationName:"marker" type:"string"`  // Sets the maximum number of keys returned in the response. By default, the   // action returns up to 1,000 key names. The response might contain fewer keys  // but will never contain more. MaxKeys * int64 `location:"querystring" locationName:"max-keys" type:"integer"`  // Specifies the optional fields that you want returned in the response. Fields   // that you do not specify are not returned. OptionalObjectAttributes []* string `location:"header" locationName:"x-amz-optional-object-attributes" type:"list" enum:"OptionalObjectAttributes"`  // Limits the response to keys that begin with the specified prefix.  Prefix * string `location:"querystring" locationName:"prefix" type:"string"`  // Confirms that the requester knows that she or he will be charged for the   // list objects request. Bucket owners need not specify this parameter in their  // requests. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"` // contains filtered or unexported fields }

func (ListObjectsInput) GoString    added in  v0.6.5

func (s ListObjectsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListObjectsInput) SetBucket    added in  v1.5.0

func (s * ListObjectsInput ) SetBucket(v string ) * ListObjectsInput
SetBucket sets the Bucket field's value.

func (*ListObjectsInput) SetDelimiter    added in  v1.5.0

func (s * ListObjectsInput ) SetDelimiter(v string ) * ListObjectsInput
SetDelimiter sets the Delimiter field's value.

func (*ListObjectsInput) SetEncodingType    added in  v1.5.0

func (s * ListObjectsInput ) SetEncodingType(v string ) * ListObjectsInput
SetEncodingType sets the EncodingType field's value.

func (*ListObjectsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * ListObjectsInput ) SetExpectedBucketOwner(v string ) * ListObjectsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*ListObjectsInput) SetMarker    added in  v1.5.0

func (s * ListObjectsInput ) SetMarker(v string ) * ListObjectsInput
SetMarker sets the Marker field's value.

func (*ListObjectsInput) SetMaxKeys    added in  v1.5.0

func (s * ListObjectsInput ) SetMaxKeys(v int64 ) * ListObjectsInput
SetMaxKeys sets the MaxKeys field's value.

func (*ListObjectsInput) SetOptionalObjectAttributes    added in  v1.44.292

func (s * ListObjectsInput ) SetOptionalObjectAttributes(v []* string ) * ListObjectsInput
SetOptionalObjectAttributes sets the OptionalObjectAttributes field's value.

func (*ListObjectsInput) SetPrefix    added in  v1.5.0

func (s * ListObjectsInput ) SetPrefix(v string ) * ListObjectsInput
SetPrefix sets the Prefix field's value.

func (*ListObjectsInput) SetRequestPayer    added in  v1.5.0

func (s * ListObjectsInput ) SetRequestPayer(v string ) * ListObjectsInput
SetRequestPayer sets the RequestPayer field's value.

func (ListObjectsInput) String    added in  v0.6.5

func (s ListObjectsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListObjectsInput) Validate    added in  v1.1.21

func (s * ListObjectsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ListObjectsOutput
type ListObjectsOutput struct {  // All of the keys (up to 1,000) rolled up in a common prefix count as a single   // return when calculating the number of returns.  //  // A response can contain CommonPrefixes only if you specify a delimiter.  //  // CommonPrefixes contains all (if there are any) keys between Prefix and the  // next occurrence of the string specified by the delimiter.  //  // CommonPrefixes lists keys that act like subdirectories in the directory specified  // by Prefix.  //  // For example, if the prefix is notes/ and the delimiter is a slash (/), as  // in notes/summer/july, the common prefix is notes/summer/. All of the keys  // that roll up into a common prefix count as a single return when calculating  // the number of returns. CommonPrefixes []* CommonPrefix `type:"list" flattened:"true"`  // Metadata about each object returned.  Contents []* Object `type:"list" flattened:"true"`  // Causes keys that contain the same string between the prefix and the first   // occurrence of the delimiter to be rolled up into a single result element  // in the CommonPrefixes collection. These rolled-up keys are not returned elsewhere  // in the response. Each rolled-up result counts as only one return against  // the MaxKeys value. Delimiter * string `type:"string"`  // Encoding type used by Amazon S3 to encode object keys in the response.  EncodingType * string `type:"string" enum:"EncodingType"`  // A flag that indicates whether Amazon S3 returned all of the results that   // satisfied the search criteria. IsTruncated * bool `type:"boolean"`  // Indicates where in the bucket listing begins. Marker is included in the response   // if it was sent with the request. Marker * string `type:"string"`  // The maximum number of keys returned in the response body.  MaxKeys * int64 `type:"integer"`  // The bucket name.  Name * string `type:"string"`  // When the response is truncated (the IsTruncated element value in the response   // is true), you can use the key name in this field as the marker parameter  // in the subsequent request to get the next set of objects. Amazon S3 lists  // objects in alphabetical order.  //  // This element is returned only if you have the delimiter request parameter  // specified. If the response does not include the NextMarker element and it  // is truncated, you can use the value of the last Key element in the response  // as the marker parameter in the subsequent request to get the next set of  // object keys. NextMarker * string `type:"string"`  // Keys that begin with the indicated prefix.  Prefix * string `type:"string"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"` // contains filtered or unexported fields }

func (ListObjectsOutput) GoString    added in  v0.6.5

func (s ListObjectsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListObjectsOutput) SetCommonPrefixes    added in  v1.5.0

func (s * ListObjectsOutput ) SetCommonPrefixes(v []* CommonPrefix ) * ListObjectsOutput
SetCommonPrefixes sets the CommonPrefixes field's value.

func (*ListObjectsOutput) SetContents    added in  v1.5.0

func (s * ListObjectsOutput ) SetContents(v []* Object ) * ListObjectsOutput
SetContents sets the Contents field's value.

func (*ListObjectsOutput) SetDelimiter    added in  v1.5.0

func (s * ListObjectsOutput ) SetDelimiter(v string ) * ListObjectsOutput
SetDelimiter sets the Delimiter field's value.

func (*ListObjectsOutput) SetEncodingType    added in  v1.5.0

func (s * ListObjectsOutput ) SetEncodingType(v string ) * ListObjectsOutput
SetEncodingType sets the EncodingType field's value.

func (*ListObjectsOutput) SetIsTruncated    added in  v1.5.0

func (s * ListObjectsOutput ) SetIsTruncated(v bool ) * ListObjectsOutput
SetIsTruncated sets the IsTruncated field's value.

func (*ListObjectsOutput) SetMarker    added in  v1.5.0

func (s * ListObjectsOutput ) SetMarker(v string ) * ListObjectsOutput
SetMarker sets the Marker field's value.

func (*ListObjectsOutput) SetMaxKeys    added in  v1.5.0

func (s * ListObjectsOutput ) SetMaxKeys(v int64 ) * ListObjectsOutput
SetMaxKeys sets the MaxKeys field's value.

func (*ListObjectsOutput) SetName    added in  v1.5.0

func (s * ListObjectsOutput ) SetName(v string ) * ListObjectsOutput
SetName sets the Name field's value.

func (*ListObjectsOutput) SetNextMarker    added in  v1.5.0

func (s * ListObjectsOutput ) SetNextMarker(v string ) * ListObjectsOutput
SetNextMarker sets the NextMarker field's value.

func (*ListObjectsOutput) SetPrefix    added in  v1.5.0

func (s * ListObjectsOutput ) SetPrefix(v string ) * ListObjectsOutput
SetPrefix sets the Prefix field's value.

func (*ListObjectsOutput) SetRequestCharged    added in  v1.44.284

func (s * ListObjectsOutput ) SetRequestCharged(v string ) * ListObjectsOutput
SetRequestCharged sets the RequestCharged field's value.

func (ListObjectsOutput) String    added in  v0.6.5

func (s ListObjectsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ListObjectsV2Input    added in  v1.1.24
type ListObjectsV2Input struct {  // Bucket name to list.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // ContinuationToken indicates to Amazon S3 that the list is being continued   // on this bucket with a token. ContinuationToken is obfuscated and is not a  // real key. ContinuationToken * string `location:"querystring" locationName:"continuation-token" type:"string"`  // A delimiter is a character that you use to group keys.  Delimiter * string `location:"querystring" locationName:"delimiter" type:"string"`  // Encoding type used by Amazon S3 to encode object keys in the response.  EncodingType * string `location:"querystring" locationName:"encoding-type" type:"string" enum:"EncodingType"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The owner field is not present in ListObjectsV2 by default. If you want to   // return the owner field with each key in the result, then set the FetchOwner  // field to true. FetchOwner * bool `location:"querystring" locationName:"fetch-owner" type:"boolean"`  // Sets the maximum number of keys returned in the response. By default, the   // action returns up to 1,000 key names. The response might contain fewer keys  // but will never contain more. MaxKeys * int64 `location:"querystring" locationName:"max-keys" type:"integer"`  // Specifies the optional fields that you want returned in the response. Fields   // that you do not specify are not returned. OptionalObjectAttributes []* string `location:"header" locationName:"x-amz-optional-object-attributes" type:"list" enum:"OptionalObjectAttributes"`  // Limits the response to keys that begin with the specified prefix.  Prefix * string `location:"querystring" locationName:"prefix" type:"string"`  // Confirms that the requester knows that she or he will be charged for the   // list objects request in V2 style. Bucket owners need not specify this parameter  // in their requests. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts   // listing after this specified key. StartAfter can be any key in the bucket. StartAfter * string `location:"querystring" locationName:"start-after" type:"string"` // contains filtered or unexported fields }

func (ListObjectsV2Input) GoString    added in  v1.1.24

func (s ListObjectsV2Input ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListObjectsV2Input) SetBucket    added in  v1.5.0

func (s * ListObjectsV2Input ) SetBucket(v string ) * ListObjectsV2Input
SetBucket sets the Bucket field's value.

func (*ListObjectsV2Input) SetContinuationToken    added in  v1.5.0

func (s * ListObjectsV2Input ) SetContinuationToken(v string ) * ListObjectsV2Input
SetContinuationToken sets the ContinuationToken field's value.

func (*ListObjectsV2Input) SetDelimiter    added in  v1.5.0

func (s * ListObjectsV2Input ) SetDelimiter(v string ) * ListObjectsV2Input
SetDelimiter sets the Delimiter field's value.

func (*ListObjectsV2Input) SetEncodingType    added in  v1.5.0

func (s * ListObjectsV2Input ) SetEncodingType(v string ) * ListObjectsV2Input
SetEncodingType sets the EncodingType field's value.

func (*ListObjectsV2Input) SetExpectedBucketOwner    added in  v1.34.21

func (s * ListObjectsV2Input ) SetExpectedBucketOwner(v string ) * ListObjectsV2Input
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*ListObjectsV2Input) SetFetchOwner    added in  v1.5.0

func (s * ListObjectsV2Input ) SetFetchOwner(v bool ) * ListObjectsV2Input
SetFetchOwner sets the FetchOwner field's value.

func (*ListObjectsV2Input) SetMaxKeys    added in  v1.5.0

func (s * ListObjectsV2Input ) SetMaxKeys(v int64 ) * ListObjectsV2Input
SetMaxKeys sets the MaxKeys field's value.

func (*ListObjectsV2Input) SetOptionalObjectAttributes    added in  v1.44.292

func (s * ListObjectsV2Input ) SetOptionalObjectAttributes(v []* string ) * ListObjectsV2Input
SetOptionalObjectAttributes sets the OptionalObjectAttributes field's value.

func (*ListObjectsV2Input) SetPrefix    added in  v1.5.0

func (s * ListObjectsV2Input ) SetPrefix(v string ) * ListObjectsV2Input
SetPrefix sets the Prefix field's value.

func (*ListObjectsV2Input) SetRequestPayer    added in  v1.5.0

func (s * ListObjectsV2Input ) SetRequestPayer(v string ) * ListObjectsV2Input
SetRequestPayer sets the RequestPayer field's value.

func (*ListObjectsV2Input) SetStartAfter    added in  v1.5.0

func (s * ListObjectsV2Input ) SetStartAfter(v string ) * ListObjectsV2Input
SetStartAfter sets the StartAfter field's value.

func (ListObjectsV2Input) String    added in  v1.1.24

func (s ListObjectsV2Input ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListObjectsV2Input) Validate    added in  v1.1.24

func (s * ListObjectsV2Input ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ListObjectsV2Output    added in  v1.1.24
type ListObjectsV2Output struct {  // All of the keys (up to 1,000) rolled up into a common prefix count as a single   // return when calculating the number of returns.  //  // A response can contain CommonPrefixes only if you specify a delimiter.  //  // CommonPrefixes contains all (if there are any) keys between Prefix and the  // next occurrence of the string specified by a delimiter.  //  // CommonPrefixes lists keys that act like subdirectories in the directory specified  // by Prefix.  //  // For example, if the prefix is notes/ and the delimiter is a slash (/) as  // in notes/summer/july, the common prefix is notes/summer/. All of the keys  // that roll up into a common prefix count as a single return when calculating  // the number of returns. CommonPrefixes []* CommonPrefix `type:"list" flattened:"true"`  // Metadata about each object returned.  Contents []* Object `type:"list" flattened:"true"`  // If ContinuationToken was sent with the request, it is included in the response.  ContinuationToken * string `type:"string"`  // Causes keys that contain the same string between the prefix and the first   // occurrence of the delimiter to be rolled up into a single result element  // in the CommonPrefixes collection. These rolled-up keys are not returned elsewhere  // in the response. Each rolled-up result counts as only one return against  // the MaxKeys value. Delimiter * string `type:"string"`  // Encoding type used by Amazon S3 to encode object key names in the XML response.   //  // If you specify the encoding-type request parameter, Amazon S3 includes this  // element in the response, and returns encoded key name values in the following  // response elements:  //  // Delimiter, Prefix, Key, and StartAfter. EncodingType * string `type:"string" enum:"EncodingType"`  // Set to false if all of the results were returned. Set to true if more keys   // are available to return. If the number of results exceeds that specified  // by MaxKeys, all of the results might not be returned. IsTruncated * bool `type:"boolean"`  // KeyCount is the number of keys returned with this request. KeyCount will   // always be less than or equal to the MaxKeys field. For example, if you ask  // for 50 keys, your result will include 50 keys or fewer. KeyCount * int64 `type:"integer"`  // Sets the maximum number of keys returned in the response. By default, the   // action returns up to 1,000 key names. The response might contain fewer keys  // but will never contain more. MaxKeys * int64 `type:"integer"`  // The bucket name.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide. Name * string `type:"string"`  // NextContinuationToken is sent when isTruncated is true, which means there   // are more keys in the bucket that can be listed. The next list requests to  // Amazon S3 can be continued with this NextContinuationToken. NextContinuationToken  // is obfuscated and is not a real key NextContinuationToken * string `type:"string"`  // Keys that begin with the indicated prefix.  Prefix * string `type:"string"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // If StartAfter was sent with the request, it is included in the response.  StartAfter * string `type:"string"` // contains filtered or unexported fields }

func (ListObjectsV2Output) GoString    added in  v1.1.24

func (s ListObjectsV2Output ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListObjectsV2Output) SetCommonPrefixes    added in  v1.5.0

func (s * ListObjectsV2Output ) SetCommonPrefixes(v []* CommonPrefix ) * ListObjectsV2Output
SetCommonPrefixes sets the CommonPrefixes field's value.

func (*ListObjectsV2Output) SetContents    added in  v1.5.0

func (s * ListObjectsV2Output ) SetContents(v []* Object ) * ListObjectsV2Output
SetContents sets the Contents field's value.

func (*ListObjectsV2Output) SetContinuationToken    added in  v1.5.0

func (s * ListObjectsV2Output ) SetContinuationToken(v string ) * ListObjectsV2Output
SetContinuationToken sets the ContinuationToken field's value.

func (*ListObjectsV2Output) SetDelimiter    added in  v1.5.0

func (s * ListObjectsV2Output ) SetDelimiter(v string ) * ListObjectsV2Output
SetDelimiter sets the Delimiter field's value.

func (*ListObjectsV2Output) SetEncodingType    added in  v1.5.0

func (s * ListObjectsV2Output ) SetEncodingType(v string ) * ListObjectsV2Output
SetEncodingType sets the EncodingType field's value.

func (*ListObjectsV2Output) SetIsTruncated    added in  v1.5.0

func (s * ListObjectsV2Output ) SetIsTruncated(v bool ) * ListObjectsV2Output
SetIsTruncated sets the IsTruncated field's value.

func (*ListObjectsV2Output) SetKeyCount    added in  v1.5.0

func (s * ListObjectsV2Output ) SetKeyCount(v int64 ) * ListObjectsV2Output
SetKeyCount sets the KeyCount field's value.

func (*ListObjectsV2Output) SetMaxKeys    added in  v1.5.0

func (s * ListObjectsV2Output ) SetMaxKeys(v int64 ) * ListObjectsV2Output
SetMaxKeys sets the MaxKeys field's value.

func (*ListObjectsV2Output) SetName    added in  v1.5.0

func (s * ListObjectsV2Output ) SetName(v string ) * ListObjectsV2Output
SetName sets the Name field's value.

func (*ListObjectsV2Output) SetNextContinuationToken    added in  v1.5.0

func (s * ListObjectsV2Output ) SetNextContinuationToken(v string ) * ListObjectsV2Output
SetNextContinuationToken sets the NextContinuationToken field's value.

func (*ListObjectsV2Output) SetPrefix    added in  v1.5.0

func (s * ListObjectsV2Output ) SetPrefix(v string ) * ListObjectsV2Output
SetPrefix sets the Prefix field's value.

func (*ListObjectsV2Output) SetRequestCharged    added in  v1.44.284

func (s * ListObjectsV2Output ) SetRequestCharged(v string ) * ListObjectsV2Output
SetRequestCharged sets the RequestCharged field's value.

func (*ListObjectsV2Output) SetStartAfter    added in  v1.5.0

func (s * ListObjectsV2Output ) SetStartAfter(v string ) * ListObjectsV2Output
SetStartAfter sets the StartAfter field's value.

func (ListObjectsV2Output) String    added in  v1.1.24

func (s ListObjectsV2Output ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ListPartsInput
type ListPartsInput struct {  // The name of the bucket to which the parts are being uploaded.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Object key for which the multipart upload was initiated.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Sets the maximum number of parts to return.  MaxParts * int64 `location:"querystring" locationName:"max-parts" type:"integer"`  // Specifies the part after which listing should begin. Only parts with higher   // part numbers will be listed. PartNumberMarker * int64 `location:"querystring" locationName:"part-number-marker" type:"integer"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // The server-side encryption (SSE) algorithm used to encrypt the object. This   // parameter is needed only when the object was created using a checksum algorithm.  // For more information, see Protecting data using SSE-C keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )  // in the Amazon S3 User Guide. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // The server-side encryption (SSE) customer managed key. This parameter is   // needed only when the object was created using a checksum algorithm. For more  // information, see Protecting data using SSE-C keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )  // in the Amazon S3 User Guide.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by ListPartsInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // The MD5 server-side encryption (SSE) customer managed key. This parameter   // is needed only when the object was created using a checksum algorithm. For  // more information, see Protecting data using SSE-C keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )  // in the Amazon S3 User Guide. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // Upload ID identifying the multipart upload whose parts are being listed.   //  // UploadId is a required field UploadId * string `location:"querystring" locationName:"uploadId" type:"string" required:"true"` // contains filtered or unexported fields }

func (ListPartsInput) GoString    added in  v0.6.5

func (s ListPartsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListPartsInput) SetBucket    added in  v1.5.0

func (s * ListPartsInput ) SetBucket(v string ) * ListPartsInput
SetBucket sets the Bucket field's value.

func (*ListPartsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * ListPartsInput ) SetExpectedBucketOwner(v string ) * ListPartsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*ListPartsInput) SetKey    added in  v1.5.0

func (s * ListPartsInput ) SetKey(v string ) * ListPartsInput
SetKey sets the Key field's value.

func (*ListPartsInput) SetMaxParts    added in  v1.5.0

func (s * ListPartsInput ) SetMaxParts(v int64 ) * ListPartsInput
SetMaxParts sets the MaxParts field's value.

func (*ListPartsInput) SetPartNumberMarker    added in  v1.5.0

func (s * ListPartsInput ) SetPartNumberMarker(v int64 ) * ListPartsInput
SetPartNumberMarker sets the PartNumberMarker field's value.

func (*ListPartsInput) SetRequestPayer    added in  v1.5.0

func (s * ListPartsInput ) SetRequestPayer(v string ) * ListPartsInput
SetRequestPayer sets the RequestPayer field's value.

func (*ListPartsInput) SetSSECustomerAlgorithm    added in  v1.43.6

func (s * ListPartsInput ) SetSSECustomerAlgorithm(v string ) * ListPartsInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*ListPartsInput) SetSSECustomerKey    added in  v1.43.6

func (s * ListPartsInput ) SetSSECustomerKey(v string ) * ListPartsInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*ListPartsInput) SetSSECustomerKeyMD5    added in  v1.43.6

func (s * ListPartsInput ) SetSSECustomerKeyMD5(v string ) * ListPartsInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*ListPartsInput) SetUploadId    added in  v1.5.0

func (s * ListPartsInput ) SetUploadId(v string ) * ListPartsInput
SetUploadId sets the UploadId field's value.

func (ListPartsInput) String    added in  v0.6.5

func (s ListPartsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListPartsInput) Validate    added in  v1.1.21

func (s * ListPartsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ListPartsOutput
type ListPartsOutput struct {  // If the bucket has a lifecycle rule configured with an action to abort incomplete   // multipart uploads and the prefix in the lifecycle rule matches the object  // name in the request, then the response includes this header indicating when  // the initiated multipart upload will become eligible for abort operation.  // For more information, see Aborting Incomplete Multipart Uploads Using a Bucket  // Lifecycle Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config ).  //  // The response will also include the x-amz-abort-rule-id header that will provide  // the ID of the lifecycle configuration rule that defines this action. AbortDate * time . Time `location:"header" locationName:"x-amz-abort-date" type:"timestamp"`  // This header is returned along with the x-amz-abort-date header. It identifies   // applicable lifecycle configuration rule that defines the action to abort  // incomplete multipart uploads. AbortRuleId * string `location:"header" locationName:"x-amz-abort-rule-id" type:"string"`  // The name of the bucket to which the multipart upload was initiated. Does   // not return the access point ARN or access point alias if used. Bucket * string `type:"string"`  // The algorithm that was used to create a checksum of the object.  ChecksumAlgorithm * string `type:"string" enum:"ChecksumAlgorithm"`  // Container element that identifies who initiated the multipart upload. If   // the initiator is an Amazon Web Services account, this element provides the  // same information as the Owner element. If the initiator is an IAM User, this  // element provides the user ARN and display name. Initiator * Initiator `type:"structure"`  // Indicates whether the returned list of parts is truncated. A true value indicates   // that the list was truncated. A list can be truncated if the number of parts  // exceeds the limit returned in the MaxParts element. IsTruncated * bool `type:"boolean"`  // Object key for which the multipart upload was initiated.  Key * string `min:"1" type:"string"`  // Maximum number of parts that were allowed in the response.  MaxParts * int64 `type:"integer"`  // When a list is truncated, this element specifies the last part in the list,   // as well as the value to use for the part-number-marker request parameter  // in a subsequent request. NextPartNumberMarker * int64 `type:"integer"`  // Container element that identifies the object owner, after the object is created.   // If multipart upload is initiated by an IAM user, this element provides the  // parent account ID and display name. Owner * Owner `type:"structure"`  // When a list is truncated, this element specifies the last part in the list,   // as well as the value to use for the part-number-marker request parameter  // in a subsequent request. PartNumberMarker * int64 `type:"integer"`  // Container for elements related to a particular part. A response can contain   // zero or more Part elements. Parts []* Part `locationName:"Part" type:"list" flattened:"true"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // Class of storage (STANDARD or REDUCED_REDUNDANCY) used to store the uploaded   // object. StorageClass * string `type:"string" enum:"StorageClass"`  // Upload ID identifying the multipart upload whose parts are being listed.  UploadId * string `type:"string"` // contains filtered or unexported fields }

func (ListPartsOutput) GoString    added in  v0.6.5

func (s ListPartsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ListPartsOutput) SetAbortDate    added in  v1.5.0

func (s * ListPartsOutput ) SetAbortDate(v time . Time ) * ListPartsOutput
SetAbortDate sets the AbortDate field's value.

func (*ListPartsOutput) SetAbortRuleId    added in  v1.5.0

func (s * ListPartsOutput ) SetAbortRuleId(v string ) * ListPartsOutput
SetAbortRuleId sets the AbortRuleId field's value.

func (*ListPartsOutput) SetBucket    added in  v1.5.0

func (s * ListPartsOutput ) SetBucket(v string ) * ListPartsOutput
SetBucket sets the Bucket field's value.

func (*ListPartsOutput) SetChecksumAlgorithm    added in  v1.43.6

func (s * ListPartsOutput ) SetChecksumAlgorithm(v string ) * ListPartsOutput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*ListPartsOutput) SetInitiator    added in  v1.5.0

func (s * ListPartsOutput ) SetInitiator(v * Initiator ) * ListPartsOutput
SetInitiator sets the Initiator field's value.

func (*ListPartsOutput) SetIsTruncated    added in  v1.5.0

func (s * ListPartsOutput ) SetIsTruncated(v bool ) * ListPartsOutput
SetIsTruncated sets the IsTruncated field's value.

func (*ListPartsOutput) SetKey    added in  v1.5.0

func (s * ListPartsOutput ) SetKey(v string ) * ListPartsOutput
SetKey sets the Key field's value.

func (*ListPartsOutput) SetMaxParts    added in  v1.5.0

func (s * ListPartsOutput ) SetMaxParts(v int64 ) * ListPartsOutput
SetMaxParts sets the MaxParts field's value.

func (*ListPartsOutput) SetNextPartNumberMarker    added in  v1.5.0

func (s * ListPartsOutput ) SetNextPartNumberMarker(v int64 ) * ListPartsOutput
SetNextPartNumberMarker sets the NextPartNumberMarker field's value.

func (*ListPartsOutput) SetOwner    added in  v1.5.0

func (s * ListPartsOutput ) SetOwner(v * Owner ) * ListPartsOutput
SetOwner sets the Owner field's value.

func (*ListPartsOutput) SetPartNumberMarker    added in  v1.5.0

func (s * ListPartsOutput ) SetPartNumberMarker(v int64 ) * ListPartsOutput
SetPartNumberMarker sets the PartNumberMarker field's value.

func (*ListPartsOutput) SetParts    added in  v1.5.0

func (s * ListPartsOutput ) SetParts(v []* Part ) * ListPartsOutput
SetParts sets the Parts field's value.

func (*ListPartsOutput) SetRequestCharged    added in  v1.5.0

func (s * ListPartsOutput ) SetRequestCharged(v string ) * ListPartsOutput
SetRequestCharged sets the RequestCharged field's value.

func (*ListPartsOutput) SetStorageClass    added in  v1.5.0

func (s * ListPartsOutput ) SetStorageClass(v string ) * ListPartsOutput
SetStorageClass sets the StorageClass field's value.

func (*ListPartsOutput) SetUploadId    added in  v1.5.0

func (s * ListPartsOutput ) SetUploadId(v string ) * ListPartsOutput
SetUploadId sets the UploadId field's value.

func (ListPartsOutput) String    added in  v0.6.5

func (s ListPartsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Location    added in  v1.12.36
type Location struct {  // A list of grants that control access to the staged results.  AccessControlList []* Grant `locationNameList:"Grant" type:"list"`  // The name of the bucket where the restore results will be placed.   //  // BucketName is a required field BucketName * string `type:"string" required:"true"`  // The canned ACL to apply to the restore results.  CannedACL * string `type:"string" enum:"ObjectCannedACL"`  // Contains the type of server-side encryption used.  Encryption * Encryption `type:"structure"`  // The prefix that is prepended to the restore results for this request.   //  // Prefix is a required field Prefix * string `type:"string" required:"true"`  // The class of storage used to store the restore results.  StorageClass * string `type:"string" enum:"StorageClass"`  // The tag-set that is applied to the restore results.  Tagging * Tagging `type:"structure"`  // A list of metadata to store with the restore results in S3.  UserMetadata []* MetadataEntry `locationNameList:"MetadataEntry" type:"list"` // contains filtered or unexported fields }
Describes an Amazon S3 location that will receive the results of the restore
request.

func (Location) GoString    added in  v1.12.36

func (s Location ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Location) SetAccessControlList    added in  v1.12.36

func (s * Location ) SetAccessControlList(v []* Grant ) * Location
SetAccessControlList sets the AccessControlList field's value.

func (*Location) SetBucketName    added in  v1.12.36

func (s * Location ) SetBucketName(v string ) * Location
SetBucketName sets the BucketName field's value.

func (*Location) SetCannedACL    added in  v1.12.36

func (s * Location ) SetCannedACL(v string ) * Location
SetCannedACL sets the CannedACL field's value.

func (*Location) SetEncryption    added in  v1.12.36

func (s * Location ) SetEncryption(v * Encryption ) * Location
SetEncryption sets the Encryption field's value.

func (*Location) SetPrefix    added in  v1.12.36

func (s * Location ) SetPrefix(v string ) * Location
SetPrefix sets the Prefix field's value.

func (*Location) SetStorageClass    added in  v1.12.36

func (s * Location ) SetStorageClass(v string ) * Location
SetStorageClass sets the StorageClass field's value.

func (*Location) SetTagging    added in  v1.12.36

func (s * Location ) SetTagging(v * Tagging ) * Location
SetTagging sets the Tagging field's value.

func (*Location) SetUserMetadata    added in  v1.12.36

func (s * Location ) SetUserMetadata(v []* MetadataEntry ) * Location
SetUserMetadata sets the UserMetadata field's value.

func (Location) String    added in  v1.12.36

func (s Location ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Location) Validate    added in  v1.12.36

func (s * Location ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type LoggingEnabled
type LoggingEnabled struct {  // Specifies the bucket where you want Amazon S3 to store server access logs.   // You can have your logs delivered to any bucket that you own, including the  // same bucket that is being logged. You can also configure multiple buckets  // to deliver their logs to the same target bucket. In this case, you should  // choose a different TargetPrefix for each source bucket so that the delivered  // log files can be distinguished by key.  //  // TargetBucket is a required field TargetBucket * string `type:"string" required:"true"`  // Container for granting information.   //  // Buckets that use the bucket owner enforced setting for Object Ownership don't  // support target grants. For more information, see Permissions for server access  // log delivery ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html#grant-log-delivery-permissions-general )  // in the Amazon S3 User Guide. TargetGrants []* TargetGrant `locationNameList:"Grant" type:"list"`  // A prefix for all log object keys. If you store log files from multiple Amazon   // S3 buckets in a single bucket, you can use a prefix to distinguish which  // log files came from which bucket.  //  // TargetPrefix is a required field TargetPrefix * string `type:"string" required:"true"` // contains filtered or unexported fields }
Describes where logs are stored and the prefix that Amazon S3 assigns to
all log object keys for a bucket. For more information, see PUT Bucket logging
( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html )
in the Amazon S3 API Reference.

func (LoggingEnabled) GoString    added in  v0.6.5

func (s LoggingEnabled ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LoggingEnabled) SetTargetBucket    added in  v1.5.0

func (s * LoggingEnabled ) SetTargetBucket(v string ) * LoggingEnabled
SetTargetBucket sets the TargetBucket field's value.

func (*LoggingEnabled) SetTargetGrants    added in  v1.5.0

func (s * LoggingEnabled ) SetTargetGrants(v []* TargetGrant ) * LoggingEnabled
SetTargetGrants sets the TargetGrants field's value.

func (*LoggingEnabled) SetTargetPrefix    added in  v1.5.0

func (s * LoggingEnabled ) SetTargetPrefix(v string ) * LoggingEnabled
SetTargetPrefix sets the TargetPrefix field's value.

func (LoggingEnabled) String    added in  v0.6.5

func (s LoggingEnabled ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*LoggingEnabled) Validate    added in  v1.1.21

func (s * LoggingEnabled ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type MetadataEntry    added in  v1.12.36
type MetadataEntry struct {  // Name of the object.  Name * string `type:"string"`  // Value of the object.  Value * string `type:"string"` // contains filtered or unexported fields }
A metadata key-value pair to store with an object.

func (MetadataEntry) GoString    added in  v1.12.36

func (s MetadataEntry ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*MetadataEntry) SetName    added in  v1.12.36

func (s * MetadataEntry ) SetName(v string ) * MetadataEntry
SetName sets the Name field's value.

func (*MetadataEntry) SetValue    added in  v1.12.36

func (s * MetadataEntry ) SetValue(v string ) * MetadataEntry
SetValue sets the Value field's value.

func (MetadataEntry) String    added in  v1.12.36

func (s MetadataEntry ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Metrics    added in  v1.25.39
type Metrics struct {  // A container specifying the time threshold for emitting the s3:Replication:OperationMissedThreshold   // event. EventThreshold * ReplicationTimeValue `type:"structure"`  // Specifies whether the replication metrics are enabled.   //  // Status is a required field Status * string `type:"string" required:"true" enum:"MetricsStatus"` // contains filtered or unexported fields }
A container specifying replication metrics-related settings enabling replication
metrics and events.

func (Metrics) GoString    added in  v1.25.39

func (s Metrics ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Metrics) SetEventThreshold    added in  v1.25.39

func (s * Metrics ) SetEventThreshold(v * ReplicationTimeValue ) * Metrics
SetEventThreshold sets the EventThreshold field's value.

func (*Metrics) SetStatus    added in  v1.25.39

func (s * Metrics ) SetStatus(v string ) * Metrics
SetStatus sets the Status field's value.

func (Metrics) String    added in  v1.25.39

func (s Metrics ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Metrics) Validate    added in  v1.25.39

func (s * Metrics ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type MetricsAndOperator    added in  v1.5.11
type MetricsAndOperator struct {  // The access point ARN used when evaluating an AND predicate.  AccessPointArn * string `type:"string"`  // The prefix used when evaluating an AND predicate.  Prefix * string `type:"string"`  // The list of tags used when evaluating an AND predicate.  Tags []* Tag `locationName:"Tag" locationNameList:"Tag" type:"list" flattened:"true"` // contains filtered or unexported fields }
A conjunction (logical AND) of predicates, which is used in evaluating a
metrics filter. The operator must have at least two predicates, and an object
must match all of the predicates in order for the filter to apply.

func (MetricsAndOperator) GoString    added in  v1.5.11

func (s MetricsAndOperator ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*MetricsAndOperator) SetAccessPointArn    added in  v1.40.44

func (s * MetricsAndOperator ) SetAccessPointArn(v string ) * MetricsAndOperator
SetAccessPointArn sets the AccessPointArn field's value.

func (*MetricsAndOperator) SetPrefix    added in  v1.5.11

func (s * MetricsAndOperator ) SetPrefix(v string ) * MetricsAndOperator
SetPrefix sets the Prefix field's value.

func (*MetricsAndOperator) SetTags    added in  v1.5.11

func (s * MetricsAndOperator ) SetTags(v []* Tag ) * MetricsAndOperator
SetTags sets the Tags field's value.

func (MetricsAndOperator) String    added in  v1.5.11

func (s MetricsAndOperator ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*MetricsAndOperator) Validate    added in  v1.5.11

func (s * MetricsAndOperator ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type MetricsConfiguration    added in  v1.5.11
type MetricsConfiguration struct {  // Specifies a metrics configuration filter. The metrics configuration will   // only include objects that meet the filter's criteria. A filter must be a  // prefix, an object tag, an access point ARN, or a conjunction (MetricsAndOperator). Filter * MetricsFilter `type:"structure"`  // The ID used to identify the metrics configuration. The ID has a 64 character   // limit and can only contain letters, numbers, periods, dashes, and underscores.  //  // Id is a required field Id * string `type:"string" required:"true"` // contains filtered or unexported fields }
Specifies a metrics configuration for the CloudWatch request metrics (specified
by the metrics configuration ID) from an Amazon S3 bucket. If you're updating
an existing metrics configuration, note that this is a full replacement of
the existing metrics configuration. If you don't include the elements you
want to keep, they are erased. For more information, see PutBucketMetricsConfiguration
( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html ).

func (MetricsConfiguration) GoString    added in  v1.5.11

func (s MetricsConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*MetricsConfiguration) SetFilter    added in  v1.5.11

func (s * MetricsConfiguration ) SetFilter(v * MetricsFilter ) * MetricsConfiguration
SetFilter sets the Filter field's value.

func (*MetricsConfiguration) SetId    added in  v1.5.11

func (s * MetricsConfiguration ) SetId(v string ) * MetricsConfiguration
SetId sets the Id field's value.

func (MetricsConfiguration) String    added in  v1.5.11

func (s MetricsConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*MetricsConfiguration) Validate    added in  v1.5.11

func (s * MetricsConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type MetricsFilter    added in  v1.5.11
type MetricsFilter struct {  // The access point ARN used when evaluating a metrics filter.  AccessPointArn * string `type:"string"`  // A conjunction (logical AND) of predicates, which is used in evaluating a   // metrics filter. The operator must have at least two predicates, and an object  // must match all of the predicates in order for the filter to apply. And * MetricsAndOperator `type:"structure"`  // The prefix used when evaluating a metrics filter.  Prefix * string `type:"string"`  // The tag used when evaluating a metrics filter.  Tag * Tag `type:"structure"` // contains filtered or unexported fields }
Specifies a metrics configuration filter. The metrics configuration only
includes objects that meet the filter's criteria. A filter must be a prefix,
an object tag, an access point ARN, or a conjunction (MetricsAndOperator).
For more information, see PutBucketMetricsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html ).

func (MetricsFilter) GoString    added in  v1.5.11

func (s MetricsFilter ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*MetricsFilter) SetAccessPointArn    added in  v1.40.44

func (s * MetricsFilter ) SetAccessPointArn(v string ) * MetricsFilter
SetAccessPointArn sets the AccessPointArn field's value.

func (*MetricsFilter) SetAnd    added in  v1.5.11

func (s * MetricsFilter ) SetAnd(v * MetricsAndOperator ) * MetricsFilter
SetAnd sets the And field's value.

func (*MetricsFilter) SetPrefix    added in  v1.5.11

func (s * MetricsFilter ) SetPrefix(v string ) * MetricsFilter
SetPrefix sets the Prefix field's value.

func (*MetricsFilter) SetTag    added in  v1.5.11

func (s * MetricsFilter ) SetTag(v * Tag ) * MetricsFilter
SetTag sets the Tag field's value.

func (MetricsFilter) String    added in  v1.5.11

func (s MetricsFilter ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*MetricsFilter) Validate    added in  v1.5.11

func (s * MetricsFilter ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type MultipartUpload
type MultipartUpload struct {  // The algorithm that was used to create a checksum of the object.  ChecksumAlgorithm * string `type:"string" enum:"ChecksumAlgorithm"`  // Date and time at which the multipart upload was initiated.  Initiated * time . Time `type:"timestamp"`  // Identifies who initiated the multipart upload.  Initiator * Initiator `type:"structure"`  // Key of the object for which the multipart upload was initiated.  Key * string `min:"1" type:"string"`  // Specifies the owner of the object that is part of the multipart upload.  Owner * Owner `type:"structure"`  // The class of storage used to store the object.  StorageClass * string `type:"string" enum:"StorageClass"`  // Upload ID that identifies the multipart upload.  UploadId * string `type:"string"` // contains filtered or unexported fields }
Container for the MultipartUpload for the Amazon S3 object.

func (MultipartUpload) GoString    added in  v0.6.5

func (s MultipartUpload ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*MultipartUpload) SetChecksumAlgorithm    added in  v1.43.6

func (s * MultipartUpload ) SetChecksumAlgorithm(v string ) * MultipartUpload
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*MultipartUpload) SetInitiated    added in  v1.5.0

func (s * MultipartUpload ) SetInitiated(v time . Time ) * MultipartUpload
SetInitiated sets the Initiated field's value.

func (*MultipartUpload) SetInitiator    added in  v1.5.0

func (s * MultipartUpload ) SetInitiator(v * Initiator ) * MultipartUpload
SetInitiator sets the Initiator field's value.

func (*MultipartUpload) SetKey    added in  v1.5.0

func (s * MultipartUpload ) SetKey(v string ) * MultipartUpload
SetKey sets the Key field's value.

func (*MultipartUpload) SetOwner    added in  v1.5.0

func (s * MultipartUpload ) SetOwner(v * Owner ) * MultipartUpload
SetOwner sets the Owner field's value.

func (*MultipartUpload) SetStorageClass    added in  v1.5.0

func (s * MultipartUpload ) SetStorageClass(v string ) * MultipartUpload
SetStorageClass sets the StorageClass field's value.

func (*MultipartUpload) SetUploadId    added in  v1.5.0

func (s * MultipartUpload ) SetUploadId(v string ) * MultipartUpload
SetUploadId sets the UploadId field's value.

func (MultipartUpload) String    added in  v0.6.5

func (s MultipartUpload ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type NoncurrentVersionExpiration
type NoncurrentVersionExpiration struct {  // Specifies how many noncurrent versions Amazon S3 will retain. If there are   // this many more recent noncurrent versions, Amazon S3 will take the associated  // action. For more information about noncurrent versions, see Lifecycle configuration  // elements ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html )  // in the Amazon S3 User Guide. NewerNoncurrentVersions * int64 `type:"integer"`  // Specifies the number of days an object is noncurrent before Amazon S3 can   // perform the associated action. The value must be a non-zero positive integer.  // For information about the noncurrent days calculations, see How Amazon S3  // Calculates When an Object Became Noncurrent ( https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations )  // in the Amazon S3 User Guide. NoncurrentDays * int64 `type:"integer"` // contains filtered or unexported fields }
Specifies when noncurrent object versions expire. Upon expiration, Amazon
S3 permanently deletes the noncurrent object versions. You set this lifecycle
configuration action on a bucket that has versioning enabled (or suspended)
to request that Amazon S3 delete noncurrent object versions at a specific
period in the object's lifetime.

func (NoncurrentVersionExpiration) GoString    added in  v0.6.5

func (s NoncurrentVersionExpiration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*NoncurrentVersionExpiration) SetNewerNoncurrentVersions    added in  v1.42.11

func (s * NoncurrentVersionExpiration ) SetNewerNoncurrentVersions(v int64 ) * NoncurrentVersionExpiration
SetNewerNoncurrentVersions sets the NewerNoncurrentVersions field's value.

func (*NoncurrentVersionExpiration) SetNoncurrentDays    added in  v1.5.0

func (s * NoncurrentVersionExpiration ) SetNoncurrentDays(v int64 ) * NoncurrentVersionExpiration
SetNoncurrentDays sets the NoncurrentDays field's value.

func (NoncurrentVersionExpiration) String    added in  v0.6.5

func (s NoncurrentVersionExpiration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type NoncurrentVersionTransition
type NoncurrentVersionTransition struct {  // Specifies how many noncurrent versions Amazon S3 will retain. If there are   // this many more recent noncurrent versions, Amazon S3 will take the associated  // action. For more information about noncurrent versions, see Lifecycle configuration  // elements ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html )  // in the Amazon S3 User Guide. NewerNoncurrentVersions * int64 `type:"integer"`  // Specifies the number of days an object is noncurrent before Amazon S3 can   // perform the associated action. For information about the noncurrent days  // calculations, see How Amazon S3 Calculates How Long an Object Has Been Noncurrent  // ( https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations )  // in the Amazon S3 User Guide. NoncurrentDays * int64 `type:"integer"`  // The class of storage used to store the object.  StorageClass * string `type:"string" enum:"TransitionStorageClass"` // contains filtered or unexported fields }
Container for the transition rule that describes when noncurrent objects
transition to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER_IR,
GLACIER, or DEEP_ARCHIVE storage class. If your bucket is versioning-enabled
(or versioning is suspended), you can set this action to request that Amazon
S3 transition noncurrent object versions to the STANDARD_IA, ONEZONE_IA,
INTELLIGENT_TIERING, GLACIER_IR, GLACIER, or DEEP_ARCHIVE storage class at
a specific period in the object's lifetime.

func (NoncurrentVersionTransition) GoString    added in  v0.6.5

func (s NoncurrentVersionTransition ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*NoncurrentVersionTransition) SetNewerNoncurrentVersions    added in  v1.42.11

func (s * NoncurrentVersionTransition ) SetNewerNoncurrentVersions(v int64 ) * NoncurrentVersionTransition
SetNewerNoncurrentVersions sets the NewerNoncurrentVersions field's value.

func (*NoncurrentVersionTransition) SetNoncurrentDays    added in  v1.5.0

func (s * NoncurrentVersionTransition ) SetNoncurrentDays(v int64 ) * NoncurrentVersionTransition
SetNoncurrentDays sets the NoncurrentDays field's value.

func (*NoncurrentVersionTransition) SetStorageClass    added in  v1.5.0

func (s * NoncurrentVersionTransition ) SetStorageClass(v string ) * NoncurrentVersionTransition
SetStorageClass sets the StorageClass field's value.

func (NoncurrentVersionTransition) String    added in  v0.6.5

func (s NoncurrentVersionTransition ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type NotificationConfiguration
type NotificationConfiguration struct {  // Enables delivery of events to Amazon EventBridge.  EventBridgeConfiguration * EventBridgeConfiguration `type:"structure"`  // Describes the Lambda functions to invoke and the events for which to invoke   // them. LambdaFunctionConfigurations []* LambdaFunctionConfiguration `locationName:"CloudFunctionConfiguration" type:"list" flattened:"true"`  // The Amazon Simple Queue Service queues to publish messages to and the events   // for which to publish messages. QueueConfigurations []* QueueConfiguration `locationName:"QueueConfiguration" type:"list" flattened:"true"`  // The topic to which notifications are sent and the events for which notifications   // are generated. TopicConfigurations []* TopicConfiguration `locationName:"TopicConfiguration" type:"list" flattened:"true"` // contains filtered or unexported fields }
A container for specifying the notification configuration of the bucket.
If this element is empty, notifications are turned off for the bucket.

func (NotificationConfiguration) GoString    added in  v0.6.5

func (s NotificationConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*NotificationConfiguration) SetEventBridgeConfiguration    added in  v1.42.15

func (s * NotificationConfiguration ) SetEventBridgeConfiguration(v * EventBridgeConfiguration ) * NotificationConfiguration
SetEventBridgeConfiguration sets the EventBridgeConfiguration field's value.

func (*NotificationConfiguration) SetLambdaFunctionConfigurations    added in  v1.5.0

func (s * NotificationConfiguration ) SetLambdaFunctionConfigurations(v []* LambdaFunctionConfiguration ) * NotificationConfiguration
SetLambdaFunctionConfigurations sets the LambdaFunctionConfigurations field's value.

func (*NotificationConfiguration) SetQueueConfigurations    added in  v1.5.0

func (s * NotificationConfiguration ) SetQueueConfigurations(v []* QueueConfiguration ) * NotificationConfiguration
SetQueueConfigurations sets the QueueConfigurations field's value.

func (*NotificationConfiguration) SetTopicConfigurations    added in  v1.5.0

func (s * NotificationConfiguration ) SetTopicConfigurations(v []* TopicConfiguration ) * NotificationConfiguration
SetTopicConfigurations sets the TopicConfigurations field's value.

func (NotificationConfiguration) String    added in  v0.6.5

func (s NotificationConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*NotificationConfiguration) Validate    added in  v1.1.21

func (s * NotificationConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type NotificationConfigurationDeprecated
type NotificationConfigurationDeprecated struct {  // Container for specifying the Lambda notification configuration.  CloudFunctionConfiguration * CloudFunctionConfiguration `type:"structure"`  // This data type is deprecated. This data type specifies the configuration   // for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue  // when Amazon S3 detects specified events. QueueConfiguration * QueueConfigurationDeprecated `type:"structure"`  // This data type is deprecated. A container for specifying the configuration   // for publication of messages to an Amazon Simple Notification Service (Amazon  // SNS) topic when Amazon S3 detects specified events. TopicConfiguration * TopicConfigurationDeprecated `type:"structure"` // contains filtered or unexported fields }

func (NotificationConfigurationDeprecated) GoString    added in  v0.6.5

func (s NotificationConfigurationDeprecated ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*NotificationConfigurationDeprecated) SetCloudFunctionConfiguration    added in  v1.5.0

func (s * NotificationConfigurationDeprecated ) SetCloudFunctionConfiguration(v * CloudFunctionConfiguration ) * NotificationConfigurationDeprecated
SetCloudFunctionConfiguration sets the CloudFunctionConfiguration field's value.

func (*NotificationConfigurationDeprecated) SetQueueConfiguration    added in  v1.5.0

func (s * NotificationConfigurationDeprecated ) SetQueueConfiguration(v * QueueConfigurationDeprecated ) * NotificationConfigurationDeprecated
SetQueueConfiguration sets the QueueConfiguration field's value.

func (*NotificationConfigurationDeprecated) SetTopicConfiguration    added in  v1.5.0

func (s * NotificationConfigurationDeprecated ) SetTopicConfiguration(v * TopicConfigurationDeprecated ) * NotificationConfigurationDeprecated
SetTopicConfiguration sets the TopicConfiguration field's value.

func (NotificationConfigurationDeprecated) String    added in  v0.6.5

func (s NotificationConfigurationDeprecated ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type NotificationConfigurationFilter    added in  v0.9.5
type NotificationConfigurationFilter struct {  // A container for object key name prefix and suffix filtering rules.  Key * KeyFilter `locationName:"S3Key" type:"structure"` // contains filtered or unexported fields }
Specifies object key name filtering rules. For information about key name
filtering, see Configuring event notifications using object key name filtering
( https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html )
in the Amazon S3 User Guide.

func (NotificationConfigurationFilter) GoString    added in  v0.9.5

func (s NotificationConfigurationFilter ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*NotificationConfigurationFilter) SetKey    added in  v1.5.0

func (s * NotificationConfigurationFilter ) SetKey(v * KeyFilter ) * NotificationConfigurationFilter
SetKey sets the Key field's value.

func (NotificationConfigurationFilter) String    added in  v0.9.5

func (s NotificationConfigurationFilter ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Object
type Object struct {  // The algorithm that was used to create a checksum of the object.  ChecksumAlgorithm []* string `type:"list" flattened:"true" enum:"ChecksumAlgorithm"`  // The entity tag is a hash of the object. The ETag reflects changes only to   // the contents of an object, not its metadata. The ETag may or may not be an  // MD5 digest of the object data. Whether or not it is depends on how the object  // was created and how it is encrypted as described below:  //  //    * Objects created by the PUT Object, POST Object, or Copy operation, or  //    through the Amazon Web Services Management Console, and are encrypted  //    by SSE-S3 or plaintext, have ETags that are an MD5 digest of their object  //    data.  //  //    * Objects created by the PUT Object, POST Object, or Copy operation, or  //    through the Amazon Web Services Management Console, and are encrypted  //    by SSE-C or SSE-KMS, have ETags that are not an MD5 digest of their object  //    data.  //  //    * If an object is created by either the Multipart Upload or Part Copy  //    operation, the ETag is not an MD5 digest, regardless of the method of  //    encryption. If an object is larger than 16 MB, the Amazon Web Services  //    Management Console will upload or copy that object as a Multipart Upload,  //    and therefore the ETag will not be an MD5 digest. ETag * string `type:"string"`  // The name that you assign to an object. You use the object key to retrieve   // the object. Key * string `min:"1" type:"string"`  // Creation date of the object.  LastModified * time . Time `type:"timestamp"`  // The owner of the object  Owner * Owner `type:"structure"`  // Specifies the restoration status of an object. Objects in certain storage   // classes must be restored before they can be retrieved. For more information  // about these storage classes and how to work with archived objects, see Working  // with archived objects ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/archived-objects.html )  // in the Amazon S3 User Guide. RestoreStatus * RestoreStatus `type:"structure"`  // Size in bytes of the object  Size * int64 `type:"long"`  // The class of storage used to store the object.  StorageClass * string `type:"string" enum:"ObjectStorageClass"` // contains filtered or unexported fields }
An object consists of data and its descriptive metadata.

func (Object) GoString    added in  v0.6.5

func (s Object ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Object) SetChecksumAlgorithm    added in  v1.43.6

func (s * Object ) SetChecksumAlgorithm(v []* string ) * Object
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*Object) SetETag    added in  v1.5.0

func (s * Object ) SetETag(v string ) * Object
SetETag sets the ETag field's value.

func (*Object) SetKey    added in  v1.5.0

func (s * Object ) SetKey(v string ) * Object
SetKey sets the Key field's value.

func (*Object) SetLastModified    added in  v1.5.0

func (s * Object ) SetLastModified(v time . Time ) * Object
SetLastModified sets the LastModified field's value.

func (*Object) SetOwner    added in  v1.5.0

func (s * Object ) SetOwner(v * Owner ) * Object
SetOwner sets the Owner field's value.

func (*Object) SetRestoreStatus    added in  v1.44.292

func (s * Object ) SetRestoreStatus(v * RestoreStatus ) * Object
SetRestoreStatus sets the RestoreStatus field's value.

func (*Object) SetSize    added in  v1.5.0

func (s * Object ) SetSize(v int64 ) * Object
SetSize sets the Size field's value.

func (*Object) SetStorageClass    added in  v1.5.0

func (s * Object ) SetStorageClass(v string ) * Object
SetStorageClass sets the StorageClass field's value.

func (Object) String    added in  v0.6.5

func (s Object ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ObjectIdentifier
type ObjectIdentifier struct {  // Key name of the object.   //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ).  //  // Key is a required field Key * string `min:"1" type:"string" required:"true"`  // VersionId for the specific version of the object to delete.  VersionId * string `type:"string"` // contains filtered or unexported fields }
Object Identifier is unique value to identify objects.

func (ObjectIdentifier) GoString    added in  v0.6.5

func (s ObjectIdentifier ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ObjectIdentifier) SetKey    added in  v1.5.0

func (s * ObjectIdentifier ) SetKey(v string ) * ObjectIdentifier
SetKey sets the Key field's value.

func (*ObjectIdentifier) SetVersionId    added in  v1.5.0

func (s * ObjectIdentifier ) SetVersionId(v string ) * ObjectIdentifier
SetVersionId sets the VersionId field's value.

func (ObjectIdentifier) String    added in  v0.6.5

func (s ObjectIdentifier ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ObjectIdentifier) Validate    added in  v1.1.21

func (s * ObjectIdentifier ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ObjectLockConfiguration    added in  v1.15.83
type ObjectLockConfiguration struct {  // Indicates whether this bucket has an Object Lock configuration enabled. Enable   // ObjectLockEnabled when you apply ObjectLockConfiguration to a bucket. ObjectLockEnabled * string `type:"string" enum:"ObjectLockEnabled"`  // Specifies the Object Lock rule for the specified object. Enable the this   // rule when you apply ObjectLockConfiguration to a bucket. Bucket settings  // require both a mode and a period. The period can be either Days or Years  // but you must select one. You cannot specify Days and Years at the same time. Rule * ObjectLockRule `type:"structure"` // contains filtered or unexported fields }
The container element for Object Lock configuration parameters.

func (ObjectLockConfiguration) GoString    added in  v1.15.83

func (s ObjectLockConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ObjectLockConfiguration) SetObjectLockEnabled    added in  v1.15.83

func (s * ObjectLockConfiguration ) SetObjectLockEnabled(v string ) * ObjectLockConfiguration
SetObjectLockEnabled sets the ObjectLockEnabled field's value.

func (*ObjectLockConfiguration) SetRule    added in  v1.15.83

func (s * ObjectLockConfiguration ) SetRule(v * ObjectLockRule ) * ObjectLockConfiguration
SetRule sets the Rule field's value.

func (ObjectLockConfiguration) String    added in  v1.15.83

func (s ObjectLockConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ObjectLockLegalHold    added in  v1.15.83
type ObjectLockLegalHold struct {  // Indicates whether the specified object has a legal hold in place.  Status * string `type:"string" enum:"ObjectLockLegalHoldStatus"` // contains filtered or unexported fields }
A legal hold configuration for an object.

func (ObjectLockLegalHold) GoString    added in  v1.15.83

func (s ObjectLockLegalHold ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ObjectLockLegalHold) SetStatus    added in  v1.15.83

func (s * ObjectLockLegalHold ) SetStatus(v string ) * ObjectLockLegalHold
SetStatus sets the Status field's value.

func (ObjectLockLegalHold) String    added in  v1.15.83

func (s ObjectLockLegalHold ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ObjectLockRetention    added in  v1.15.83
type ObjectLockRetention struct {  // Indicates the Retention mode for the specified object.  Mode * string `type:"string" enum:"ObjectLockRetentionMode"`  // The date on which this Object Lock Retention will expire.  RetainUntilDate * time . Time `type:"timestamp" timestampFormat:"iso8601"` // contains filtered or unexported fields }
A Retention configuration for an object.

func (ObjectLockRetention) GoString    added in  v1.15.83

func (s ObjectLockRetention ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ObjectLockRetention) SetMode    added in  v1.15.83

func (s * ObjectLockRetention ) SetMode(v string ) * ObjectLockRetention
SetMode sets the Mode field's value.

func (*ObjectLockRetention) SetRetainUntilDate    added in  v1.15.83

func (s * ObjectLockRetention ) SetRetainUntilDate(v time . Time ) * ObjectLockRetention
SetRetainUntilDate sets the RetainUntilDate field's value.

func (ObjectLockRetention) String    added in  v1.15.83

func (s ObjectLockRetention ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ObjectLockRule    added in  v1.15.83
type ObjectLockRule struct {  // The default Object Lock retention mode and period that you want to apply   // to new objects placed in the specified bucket. Bucket settings require both  // a mode and a period. The period can be either Days or Years but you must  // select one. You cannot specify Days and Years at the same time. DefaultRetention * DefaultRetention `type:"structure"` // contains filtered or unexported fields }
The container element for an Object Lock rule.

func (ObjectLockRule) GoString    added in  v1.15.83

func (s ObjectLockRule ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ObjectLockRule) SetDefaultRetention    added in  v1.15.83

func (s * ObjectLockRule ) SetDefaultRetention(v * DefaultRetention ) * ObjectLockRule
SetDefaultRetention sets the DefaultRetention field's value.

func (ObjectLockRule) String    added in  v1.15.83

func (s ObjectLockRule ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ObjectPart    added in  v1.43.6
type ObjectPart struct {  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 32-bit CRC32 checksum of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `type:"string"`  // The base64-encoded, 256-bit SHA-256 digest of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `type:"string"`  // The part number identifying the part. This value is a positive integer between   // 1 and 10,000. PartNumber * int64 `type:"integer"`  // The size of the uploaded part in bytes.  Size * int64 `type:"long"` // contains filtered or unexported fields }
A container for elements related to an individual part.

func (ObjectPart) GoString    added in  v1.43.6

func (s ObjectPart ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ObjectPart) SetChecksumCRC32    added in  v1.43.6

func (s * ObjectPart ) SetChecksumCRC32(v string ) * ObjectPart
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*ObjectPart) SetChecksumCRC32C    added in  v1.43.6

func (s * ObjectPart ) SetChecksumCRC32C(v string ) * ObjectPart
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*ObjectPart) SetChecksumSHA1    added in  v1.43.6

func (s * ObjectPart ) SetChecksumSHA1(v string ) * ObjectPart
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*ObjectPart) SetChecksumSHA256    added in  v1.43.6

func (s * ObjectPart ) SetChecksumSHA256(v string ) * ObjectPart
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*ObjectPart) SetPartNumber    added in  v1.43.6

func (s * ObjectPart ) SetPartNumber(v int64 ) * ObjectPart
SetPartNumber sets the PartNumber field's value.

func (*ObjectPart) SetSize    added in  v1.43.6

func (s * ObjectPart ) SetSize(v int64 ) * ObjectPart
SetSize sets the Size field's value.

func (ObjectPart) String    added in  v1.43.6

func (s ObjectPart ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ObjectVersion
type ObjectVersion struct {  // The algorithm that was used to create a checksum of the object.  ChecksumAlgorithm []* string `type:"list" flattened:"true" enum:"ChecksumAlgorithm"`  // The entity tag is an MD5 hash of that version of the object.  ETag * string `type:"string"`  // Specifies whether the object is (true) or is not (false) the latest version   // of an object. IsLatest * bool `type:"boolean"`  // The object key.  Key * string `min:"1" type:"string"`  // Date and time the object was last modified.  LastModified * time . Time `type:"timestamp"`  // Specifies the owner of the object.  Owner * Owner `type:"structure"`  // Specifies the restoration status of an object. Objects in certain storage   // classes must be restored before they can be retrieved. For more information  // about these storage classes and how to work with archived objects, see Working  // with archived objects ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/archived-objects.html )  // in the Amazon S3 User Guide. RestoreStatus * RestoreStatus `type:"structure"`  // Size in bytes of the object.  Size * int64 `type:"long"`  // The class of storage used to store the object.  StorageClass * string `type:"string" enum:"ObjectVersionStorageClass"`  // Version ID of an object.  VersionId * string `type:"string"` // contains filtered or unexported fields }
The version of an object.

func (ObjectVersion) GoString    added in  v0.6.5

func (s ObjectVersion ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ObjectVersion) SetChecksumAlgorithm    added in  v1.43.6

func (s * ObjectVersion ) SetChecksumAlgorithm(v []* string ) * ObjectVersion
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*ObjectVersion) SetETag    added in  v1.5.0

func (s * ObjectVersion ) SetETag(v string ) * ObjectVersion
SetETag sets the ETag field's value.

func (*ObjectVersion) SetIsLatest    added in  v1.5.0

func (s * ObjectVersion ) SetIsLatest(v bool ) * ObjectVersion
SetIsLatest sets the IsLatest field's value.

func (*ObjectVersion) SetKey    added in  v1.5.0

func (s * ObjectVersion ) SetKey(v string ) * ObjectVersion
SetKey sets the Key field's value.

func (*ObjectVersion) SetLastModified    added in  v1.5.0

func (s * ObjectVersion ) SetLastModified(v time . Time ) * ObjectVersion
SetLastModified sets the LastModified field's value.

func (*ObjectVersion) SetOwner    added in  v1.5.0

func (s * ObjectVersion ) SetOwner(v * Owner ) * ObjectVersion
SetOwner sets the Owner field's value.

func (*ObjectVersion) SetRestoreStatus    added in  v1.44.292

func (s * ObjectVersion ) SetRestoreStatus(v * RestoreStatus ) * ObjectVersion
SetRestoreStatus sets the RestoreStatus field's value.

func (*ObjectVersion) SetSize    added in  v1.5.0

func (s * ObjectVersion ) SetSize(v int64 ) * ObjectVersion
SetSize sets the Size field's value.

func (*ObjectVersion) SetStorageClass    added in  v1.5.0

func (s * ObjectVersion ) SetStorageClass(v string ) * ObjectVersion
SetStorageClass sets the StorageClass field's value.

func (*ObjectVersion) SetVersionId    added in  v1.5.0

func (s * ObjectVersion ) SetVersionId(v string ) * ObjectVersion
SetVersionId sets the VersionId field's value.

func (ObjectVersion) String    added in  v0.6.5

func (s ObjectVersion ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type OutputLocation    added in  v1.12.36
type OutputLocation struct {  // Describes an S3 location that will receive the results of the restore request.  S3 * Location `type:"structure"` // contains filtered or unexported fields }
Describes the location where the restore job's output is stored.

func (OutputLocation) GoString    added in  v1.12.36

func (s OutputLocation ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*OutputLocation) SetS3    added in  v1.12.36

func (s * OutputLocation ) SetS3(v * Location ) * OutputLocation
SetS3 sets the S3 field's value.

func (OutputLocation) String    added in  v1.12.36

func (s OutputLocation ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*OutputLocation) Validate    added in  v1.12.36

func (s * OutputLocation ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type OutputSerialization    added in  v1.12.36
type OutputSerialization struct {  // Describes the serialization of CSV-encoded Select results.  CSV * CSVOutput `type:"structure"`  // Specifies JSON as request's output serialization format.  JSON * JSONOutput `type:"structure"` // contains filtered or unexported fields }
Describes how results of the Select job are serialized.

func (OutputSerialization) GoString    added in  v1.12.36

func (s OutputSerialization ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*OutputSerialization) SetCSV    added in  v1.12.36

func (s * OutputSerialization ) SetCSV(v * CSVOutput ) * OutputSerialization
SetCSV sets the CSV field's value.

func (*OutputSerialization) SetJSON    added in  v1.13.28

func (s * OutputSerialization ) SetJSON(v * JSONOutput ) * OutputSerialization
SetJSON sets the JSON field's value.

func (OutputSerialization) String    added in  v1.12.36

func (s OutputSerialization ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Owner
type Owner struct {  // Container for the display name of the owner. This value is only supported   // in the following Amazon Web Services Regions:  //  //    * US East (N. Virginia)  //  //    * US West (N. California)  //  //    * US West (Oregon)  //  //    * Asia Pacific (Singapore)  //  //    * Asia Pacific (Sydney)  //  //    * Asia Pacific (Tokyo)  //  //    * Europe (Ireland)  //  //    * South America (São Paulo) DisplayName * string `type:"string"`  // Container for the ID of the owner.  ID * string `type:"string"` // contains filtered or unexported fields }
Container for the owner's display name and ID.

func (Owner) GoString    added in  v0.6.5

func (s Owner ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Owner) SetDisplayName    added in  v1.5.0

func (s * Owner ) SetDisplayName(v string ) * Owner
SetDisplayName sets the DisplayName field's value.

func (*Owner) SetID    added in  v1.5.0

func (s * Owner ) SetID(v string ) * Owner
SetID sets the ID field's value.

func (Owner) String    added in  v0.6.5

func (s Owner ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type OwnershipControls    added in  v1.35.2
type OwnershipControls struct {  // The container element for an ownership control rule.   //  // Rules is a required field Rules []* OwnershipControlsRule `locationName:"Rule" type:"list" flattened:"true" required:"true"` // contains filtered or unexported fields }
The container element for a bucket's ownership controls.

func (OwnershipControls) GoString    added in  v1.35.2

func (s OwnershipControls ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*OwnershipControls) SetRules    added in  v1.35.2

func (s * OwnershipControls ) SetRules(v []* OwnershipControlsRule ) * OwnershipControls
SetRules sets the Rules field's value.

func (OwnershipControls) String    added in  v1.35.2

func (s OwnershipControls ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*OwnershipControls) Validate    added in  v1.35.2

func (s * OwnershipControls ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type OwnershipControlsRule    added in  v1.35.2
type OwnershipControlsRule struct {  // The container element for object ownership for a bucket's ownership controls.   //  // BucketOwnerPreferred - Objects uploaded to the bucket change ownership to  // the bucket owner if the objects are uploaded with the bucket-owner-full-control  // canned ACL.  //  // ObjectWriter - The uploading account will own the object if the object is  // uploaded with the bucket-owner-full-control canned ACL.  //  // BucketOwnerEnforced - Access control lists (ACLs) are disabled and no longer  // affect permissions. The bucket owner automatically owns and has full control  // over every object in the bucket. The bucket only accepts PUT requests that  // don't specify an ACL or bucket owner full control ACLs, such as the bucket-owner-full-control  // canned ACL or an equivalent form of this ACL expressed in the XML format.  //  // ObjectOwnership is a required field ObjectOwnership * string `type:"string" required:"true" enum:"ObjectOwnership"` // contains filtered or unexported fields }
The container element for an ownership control rule.

func (OwnershipControlsRule) GoString    added in  v1.35.2

func (s OwnershipControlsRule ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*OwnershipControlsRule) SetObjectOwnership    added in  v1.35.2

func (s * OwnershipControlsRule ) SetObjectOwnership(v string ) * OwnershipControlsRule
SetObjectOwnership sets the ObjectOwnership field's value.

func (OwnershipControlsRule) String    added in  v1.35.2

func (s OwnershipControlsRule ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*OwnershipControlsRule) Validate    added in  v1.35.2

func (s * OwnershipControlsRule ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ParquetInput    added in  v1.15.28
type ParquetInput struct { // contains filtered or unexported fields }
Container for Parquet.

func (ParquetInput) GoString    added in  v1.15.28

func (s ParquetInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (ParquetInput) String    added in  v1.15.28

func (s ParquetInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Part
type Part struct {  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 32-bit CRC32 checksum of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 256-bit SHA-256 digest of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `type:"string"`  // Entity tag returned when the part was uploaded.  ETag * string `type:"string"`  // Date and time at which the part was uploaded.  LastModified * time . Time `type:"timestamp"`  // Part number identifying the part. This is a positive integer between 1 and   // 10,000. PartNumber * int64 `type:"integer"`  // Size in bytes of the uploaded part data.  Size * int64 `type:"long"` // contains filtered or unexported fields }
Container for elements related to a part.

func (Part) GoString    added in  v0.6.5

func (s Part ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Part) SetChecksumCRC32    added in  v1.43.6

func (s * Part ) SetChecksumCRC32(v string ) * Part
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*Part) SetChecksumCRC32C    added in  v1.43.6

func (s * Part ) SetChecksumCRC32C(v string ) * Part
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*Part) SetChecksumSHA1    added in  v1.43.6

func (s * Part ) SetChecksumSHA1(v string ) * Part
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*Part) SetChecksumSHA256    added in  v1.43.6

func (s * Part ) SetChecksumSHA256(v string ) * Part
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*Part) SetETag    added in  v1.5.0

func (s * Part ) SetETag(v string ) * Part
SetETag sets the ETag field's value.

func (*Part) SetLastModified    added in  v1.5.0

func (s * Part ) SetLastModified(v time . Time ) * Part
SetLastModified sets the LastModified field's value.

func (*Part) SetPartNumber    added in  v1.5.0

func (s * Part ) SetPartNumber(v int64 ) * Part
SetPartNumber sets the PartNumber field's value.

func (*Part) SetSize    added in  v1.5.0

func (s * Part ) SetSize(v int64 ) * Part
SetSize sets the Size field's value.

func (Part) String    added in  v0.6.5

func (s Part ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PolicyStatus    added in  v1.15.77
type PolicyStatus struct {  // The policy status for this bucket. TRUE indicates that this bucket is public.   // FALSE indicates that the bucket is not public. IsPublic * bool `locationName:"IsPublic" type:"boolean"` // contains filtered or unexported fields }
The container element for a bucket's policy status.

func (PolicyStatus) GoString    added in  v1.15.77

func (s PolicyStatus ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PolicyStatus) SetIsPublic    added in  v1.15.77

func (s * PolicyStatus ) SetIsPublic(v bool ) * PolicyStatus
SetIsPublic sets the IsPublic field's value.

func (PolicyStatus) String    added in  v1.15.77

func (s PolicyStatus ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Progress    added in  v1.14.0
type Progress struct {  // The current number of uncompressed object bytes processed.  BytesProcessed * int64 `type:"long"`  // The current number of bytes of records payload data returned.  BytesReturned * int64 `type:"long"`  // The current number of object bytes scanned.  BytesScanned * int64 `type:"long"` // contains filtered or unexported fields }
This data type contains information about progress of an operation.

func (Progress) GoString    added in  v1.14.0

func (s Progress ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Progress) SetBytesProcessed    added in  v1.14.0

func (s * Progress ) SetBytesProcessed(v int64 ) * Progress
SetBytesProcessed sets the BytesProcessed field's value.

func (*Progress) SetBytesReturned    added in  v1.14.0

func (s * Progress ) SetBytesReturned(v int64 ) * Progress
SetBytesReturned sets the BytesReturned field's value.

func (*Progress) SetBytesScanned    added in  v1.14.0

func (s * Progress ) SetBytesScanned(v int64 ) * Progress
SetBytesScanned sets the BytesScanned field's value.

func (Progress) String    added in  v1.14.0

func (s Progress ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ProgressEvent    added in  v1.14.0
type ProgressEvent struct {  // The Progress event details.  Details * Progress `locationName:"Details" type:"structure"` // contains filtered or unexported fields }
This data type contains information about the progress event of an operation.

func (ProgressEvent) GoString    added in  v1.14.0

func (s ProgressEvent ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ProgressEvent) MarshalEvent    added in  v1.27.0

func (s * ProgressEvent ) MarshalEvent(pm protocol . PayloadMarshaler ) (msg eventstream . Message , err error )
MarshalEvent marshals the type into an stream event value. This method
should only used internally within the SDK's EventStream handling.

func (*ProgressEvent) SetDetails    added in  v1.14.0

func (s * ProgressEvent ) SetDetails(v * Progress ) * ProgressEvent
SetDetails sets the Details field's value.

func (ProgressEvent) String    added in  v1.14.0

func (s ProgressEvent ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ProgressEvent) UnmarshalEvent    added in  v1.14.0

func (s * ProgressEvent ) UnmarshalEvent(
payloadUnmarshaler protocol . PayloadUnmarshaler ,
msg eventstream . Message ,
) error
UnmarshalEvent unmarshals the EventStream Message into the ProgressEvent value.
This method is only used internally within the SDK's EventStream handling.
type PublicAccessBlockConfiguration    added in  v1.15.77
type PublicAccessBlockConfiguration struct {  // Specifies whether Amazon S3 should block public access control lists (ACLs)   // for this bucket and objects in this bucket. Setting this element to TRUE  // causes the following behavior:  //  //    * PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is  //    public.  //  //    * PUT Object calls fail if the request includes a public ACL.  //  //    * PUT Bucket calls fail if the request includes a public ACL.  //  // Enabling this setting doesn't affect existing policies or ACLs. BlockPublicAcls * bool `locationName:"BlockPublicAcls" type:"boolean"`  // Specifies whether Amazon S3 should block public bucket policies for this   // bucket. Setting this element to TRUE causes Amazon S3 to reject calls to  // PUT Bucket policy if the specified bucket policy allows public access.  //  // Enabling this setting doesn't affect existing bucket policies. BlockPublicPolicy * bool `locationName:"BlockPublicPolicy" type:"boolean"`  // Specifies whether Amazon S3 should ignore public ACLs for this bucket and   // objects in this bucket. Setting this element to TRUE causes Amazon S3 to  // ignore all public ACLs on this bucket and objects in this bucket.  //  // Enabling this setting doesn't affect the persistence of any existing ACLs  // and doesn't prevent new public ACLs from being set. IgnorePublicAcls * bool `locationName:"IgnorePublicAcls" type:"boolean"`  // Specifies whether Amazon S3 should restrict public bucket policies for this   // bucket. Setting this element to TRUE restricts access to this bucket to only  // Amazon Web Service principals and authorized users within this account if  // the bucket has a public policy.  //  // Enabling this setting doesn't affect previously stored bucket policies, except  // that public and cross-account access within any public bucket policy, including  // non-public delegation to specific accounts, is blocked. RestrictPublicBuckets * bool `locationName:"RestrictPublicBuckets" type:"boolean"` // contains filtered or unexported fields }
The PublicAccessBlock configuration that you want to apply to this Amazon
S3 bucket. You can enable the configuration options in any combination. For
more information about when Amazon S3 considers a bucket or object public,
see The Meaning of "Public" ( https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status )
in the Amazon S3 User Guide.

func (PublicAccessBlockConfiguration) GoString    added in  v1.15.77

func (s PublicAccessBlockConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PublicAccessBlockConfiguration) SetBlockPublicAcls    added in  v1.15.77

func (s * PublicAccessBlockConfiguration ) SetBlockPublicAcls(v bool ) * PublicAccessBlockConfiguration
SetBlockPublicAcls sets the BlockPublicAcls field's value.

func (*PublicAccessBlockConfiguration) SetBlockPublicPolicy    added in  v1.15.77

func (s * PublicAccessBlockConfiguration ) SetBlockPublicPolicy(v bool ) * PublicAccessBlockConfiguration
SetBlockPublicPolicy sets the BlockPublicPolicy field's value.

func (*PublicAccessBlockConfiguration) SetIgnorePublicAcls    added in  v1.15.77

func (s * PublicAccessBlockConfiguration ) SetIgnorePublicAcls(v bool ) * PublicAccessBlockConfiguration
SetIgnorePublicAcls sets the IgnorePublicAcls field's value.

func (*PublicAccessBlockConfiguration) SetRestrictPublicBuckets    added in  v1.15.77

func (s * PublicAccessBlockConfiguration ) SetRestrictPublicBuckets(v bool ) * PublicAccessBlockConfiguration
SetRestrictPublicBuckets sets the RestrictPublicBuckets field's value.

func (PublicAccessBlockConfiguration) String    added in  v1.15.77

func (s PublicAccessBlockConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketAccelerateConfigurationInput    added in  v1.1.19
type PutBucketAccelerateConfigurationInput struct {  // Container for setting the transfer acceleration state.   //  // AccelerateConfiguration is a required field AccelerateConfiguration * AccelerateConfiguration `locationName:"AccelerateConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // The name of the bucket for which the accelerate configuration is set.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (PutBucketAccelerateConfigurationInput) GoString    added in  v1.1.19

func (s PutBucketAccelerateConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketAccelerateConfigurationInput) SetAccelerateConfiguration    added in  v1.5.0

func (s * PutBucketAccelerateConfigurationInput ) SetAccelerateConfiguration(v * AccelerateConfiguration ) * PutBucketAccelerateConfigurationInput
SetAccelerateConfiguration sets the AccelerateConfiguration field's value.

func (*PutBucketAccelerateConfigurationInput) SetBucket    added in  v1.5.0

func (s * PutBucketAccelerateConfigurationInput ) SetBucket(v string ) * PutBucketAccelerateConfigurationInput
SetBucket sets the Bucket field's value.

func (*PutBucketAccelerateConfigurationInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketAccelerateConfigurationInput ) SetChecksumAlgorithm(v string ) * PutBucketAccelerateConfigurationInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketAccelerateConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketAccelerateConfigurationInput ) SetExpectedBucketOwner(v string ) * PutBucketAccelerateConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (PutBucketAccelerateConfigurationInput) String    added in  v1.1.19

func (s PutBucketAccelerateConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketAccelerateConfigurationInput) Validate    added in  v1.1.21

func (s * PutBucketAccelerateConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketAccelerateConfigurationOutput    added in  v1.1.19
type PutBucketAccelerateConfigurationOutput struct { // contains filtered or unexported fields }

func (PutBucketAccelerateConfigurationOutput) GoString    added in  v1.1.19

func (s PutBucketAccelerateConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketAccelerateConfigurationOutput) String    added in  v1.1.19

func (s PutBucketAccelerateConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketAclInput    added in  v0.9.5
type PutBucketAclInput struct {  // The canned ACL to apply to the bucket.  ACL * string `location:"header" locationName:"x-amz-acl" type:"string" enum:"BucketCannedACL"`  // Contains the elements that set the ACL permissions for an object per grantee.  AccessControlPolicy * AccessControlPolicy `locationName:"AccessControlPolicy" type:"structure" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // The bucket to which to apply the ACL.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Allows grantee the read, write, read ACP, and write ACP permissions on the   // bucket. GrantFullControl * string `location:"header" locationName:"x-amz-grant-full-control" type:"string"`  // Allows grantee to list the objects in the bucket.  GrantRead * string `location:"header" locationName:"x-amz-grant-read" type:"string"`  // Allows grantee to read the bucket ACL.  GrantReadACP * string `location:"header" locationName:"x-amz-grant-read-acp" type:"string"`  // Allows grantee to create new objects in the bucket.   //  // For the bucket and object owners of existing objects, also allows deletions  // and overwrites of those objects. GrantWrite * string `location:"header" locationName:"x-amz-grant-write" type:"string"`  // Allows grantee to write the ACL for the applicable bucket.  GrantWriteACP * string `location:"header" locationName:"x-amz-grant-write-acp" type:"string"` // contains filtered or unexported fields }

func (PutBucketAclInput) GoString    added in  v0.9.5

func (s PutBucketAclInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketAclInput) SetACL    added in  v1.5.0

func (s * PutBucketAclInput ) SetACL(v string ) * PutBucketAclInput
SetACL sets the ACL field's value.

func (*PutBucketAclInput) SetAccessControlPolicy    added in  v1.5.0

func (s * PutBucketAclInput ) SetAccessControlPolicy(v * AccessControlPolicy ) * PutBucketAclInput
SetAccessControlPolicy sets the AccessControlPolicy field's value.

func (*PutBucketAclInput) SetBucket    added in  v1.5.0

func (s * PutBucketAclInput ) SetBucket(v string ) * PutBucketAclInput
SetBucket sets the Bucket field's value.

func (*PutBucketAclInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketAclInput ) SetChecksumAlgorithm(v string ) * PutBucketAclInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketAclInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketAclInput ) SetExpectedBucketOwner(v string ) * PutBucketAclInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketAclInput) SetGrantFullControl    added in  v1.5.0

func (s * PutBucketAclInput ) SetGrantFullControl(v string ) * PutBucketAclInput
SetGrantFullControl sets the GrantFullControl field's value.

func (*PutBucketAclInput) SetGrantRead    added in  v1.5.0

func (s * PutBucketAclInput ) SetGrantRead(v string ) * PutBucketAclInput
SetGrantRead sets the GrantRead field's value.

func (*PutBucketAclInput) SetGrantReadACP    added in  v1.5.0

func (s * PutBucketAclInput ) SetGrantReadACP(v string ) * PutBucketAclInput
SetGrantReadACP sets the GrantReadACP field's value.

func (*PutBucketAclInput) SetGrantWrite    added in  v1.5.0

func (s * PutBucketAclInput ) SetGrantWrite(v string ) * PutBucketAclInput
SetGrantWrite sets the GrantWrite field's value.

func (*PutBucketAclInput) SetGrantWriteACP    added in  v1.5.0

func (s * PutBucketAclInput ) SetGrantWriteACP(v string ) * PutBucketAclInput
SetGrantWriteACP sets the GrantWriteACP field's value.

func (PutBucketAclInput) String    added in  v0.9.5

func (s PutBucketAclInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketAclInput) Validate    added in  v1.1.21

func (s * PutBucketAclInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketAclOutput    added in  v0.9.5
type PutBucketAclOutput struct { // contains filtered or unexported fields }

func (PutBucketAclOutput) GoString    added in  v0.9.5

func (s PutBucketAclOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketAclOutput) String    added in  v0.9.5

func (s PutBucketAclOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketAnalyticsConfigurationInput    added in  v1.5.11
type PutBucketAnalyticsConfigurationInput struct {  // The configuration and any analyses for the analytics filter.   //  // AnalyticsConfiguration is a required field AnalyticsConfiguration * AnalyticsConfiguration `locationName:"AnalyticsConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // The name of the bucket to which an analytics configuration is stored.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The ID that identifies the analytics configuration.   //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"` // contains filtered or unexported fields }

func (PutBucketAnalyticsConfigurationInput) GoString    added in  v1.5.11

func (s PutBucketAnalyticsConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketAnalyticsConfigurationInput) SetAnalyticsConfiguration    added in  v1.5.11

func (s * PutBucketAnalyticsConfigurationInput ) SetAnalyticsConfiguration(v * AnalyticsConfiguration ) * PutBucketAnalyticsConfigurationInput
SetAnalyticsConfiguration sets the AnalyticsConfiguration field's value.

func (*PutBucketAnalyticsConfigurationInput) SetBucket    added in  v1.5.11

func (s * PutBucketAnalyticsConfigurationInput ) SetBucket(v string ) * PutBucketAnalyticsConfigurationInput
SetBucket sets the Bucket field's value.

func (*PutBucketAnalyticsConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketAnalyticsConfigurationInput ) SetExpectedBucketOwner(v string ) * PutBucketAnalyticsConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketAnalyticsConfigurationInput) SetId    added in  v1.5.11

func (s * PutBucketAnalyticsConfigurationInput ) SetId(v string ) * PutBucketAnalyticsConfigurationInput
SetId sets the Id field's value.

func (PutBucketAnalyticsConfigurationInput) String    added in  v1.5.11

func (s PutBucketAnalyticsConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketAnalyticsConfigurationInput) Validate    added in  v1.5.11

func (s * PutBucketAnalyticsConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketAnalyticsConfigurationOutput    added in  v1.5.11
type PutBucketAnalyticsConfigurationOutput struct { // contains filtered or unexported fields }

func (PutBucketAnalyticsConfigurationOutput) GoString    added in  v1.5.11

func (s PutBucketAnalyticsConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketAnalyticsConfigurationOutput) String    added in  v1.5.11

func (s PutBucketAnalyticsConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketCorsInput    added in  v0.9.5
type PutBucketCorsInput struct {  // Specifies the bucket impacted by the corsconfiguration.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Describes the cross-origin access configuration for objects in an Amazon   // S3 bucket. For more information, see Enabling Cross-Origin Resource Sharing  // ( https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html ) in the Amazon  // S3 User Guide.  //  // CORSConfiguration is a required field CORSConfiguration * CORSConfiguration `locationName:"CORSConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (PutBucketCorsInput) GoString    added in  v0.9.5

func (s PutBucketCorsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketCorsInput) SetBucket    added in  v1.5.0

func (s * PutBucketCorsInput ) SetBucket(v string ) * PutBucketCorsInput
SetBucket sets the Bucket field's value.

func (*PutBucketCorsInput) SetCORSConfiguration    added in  v1.5.0

func (s * PutBucketCorsInput ) SetCORSConfiguration(v * CORSConfiguration ) * PutBucketCorsInput
SetCORSConfiguration sets the CORSConfiguration field's value.

func (*PutBucketCorsInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketCorsInput ) SetChecksumAlgorithm(v string ) * PutBucketCorsInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketCorsInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketCorsInput ) SetExpectedBucketOwner(v string ) * PutBucketCorsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (PutBucketCorsInput) String    added in  v0.9.5

func (s PutBucketCorsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketCorsInput) Validate    added in  v1.1.21

func (s * PutBucketCorsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketCorsOutput    added in  v0.9.5
type PutBucketCorsOutput struct { // contains filtered or unexported fields }

func (PutBucketCorsOutput) GoString    added in  v0.9.5

func (s PutBucketCorsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketCorsOutput) String    added in  v0.9.5

func (s PutBucketCorsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketEncryptionInput    added in  v1.12.24
type PutBucketEncryptionInput struct {  // Specifies default encryption for a bucket using server-side encryption with   // different key options. By default, all buckets have a default encryption  // configuration that uses server-side encryption with Amazon S3 managed keys  // (SSE-S3). You can optionally configure default encryption for a bucket by  // using server-side encryption with an Amazon Web Services KMS key (SSE-KMS)  // or a customer-provided key (SSE-C). For information about the bucket default  // encryption feature, see Amazon S3 Bucket Default Encryption ( https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Specifies the default server-side-encryption configuration.   //  // ServerSideEncryptionConfiguration is a required field ServerSideEncryptionConfiguration * ServerSideEncryptionConfiguration `` /* 130-byte string literal not displayed */  // contains filtered or unexported fields }

func (PutBucketEncryptionInput) GoString    added in  v1.12.24

func (s PutBucketEncryptionInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketEncryptionInput) SetBucket    added in  v1.12.24

func (s * PutBucketEncryptionInput ) SetBucket(v string ) * PutBucketEncryptionInput
SetBucket sets the Bucket field's value.

func (*PutBucketEncryptionInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketEncryptionInput ) SetChecksumAlgorithm(v string ) * PutBucketEncryptionInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketEncryptionInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketEncryptionInput ) SetExpectedBucketOwner(v string ) * PutBucketEncryptionInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketEncryptionInput) SetServerSideEncryptionConfiguration    added in  v1.12.24

func (s * PutBucketEncryptionInput ) SetServerSideEncryptionConfiguration(v * ServerSideEncryptionConfiguration ) * PutBucketEncryptionInput
SetServerSideEncryptionConfiguration sets the ServerSideEncryptionConfiguration field's value.

func (PutBucketEncryptionInput) String    added in  v1.12.24

func (s PutBucketEncryptionInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketEncryptionInput) Validate    added in  v1.12.24

func (s * PutBucketEncryptionInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketEncryptionOutput    added in  v1.12.24
type PutBucketEncryptionOutput struct { // contains filtered or unexported fields }

func (PutBucketEncryptionOutput) GoString    added in  v1.12.24

func (s PutBucketEncryptionOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketEncryptionOutput) String    added in  v1.12.24

func (s PutBucketEncryptionOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketIntelligentTieringConfigurationInput    added in  v1.35.24
type PutBucketIntelligentTieringConfigurationInput struct {  // The name of the Amazon S3 bucket whose configuration you want to modify or   // retrieve.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The ID used to identify the S3 Intelligent-Tiering configuration.   //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"`  // Container for S3 Intelligent-Tiering configuration.   //  // IntelligentTieringConfiguration is a required field IntelligentTieringConfiguration * IntelligentTieringConfiguration `` /* 128-byte string literal not displayed */  // contains filtered or unexported fields }

func (PutBucketIntelligentTieringConfigurationInput) GoString    added in  v1.35.24

func (s PutBucketIntelligentTieringConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketIntelligentTieringConfigurationInput) SetBucket    added in  v1.35.24

func (s * PutBucketIntelligentTieringConfigurationInput ) SetBucket(v string ) * PutBucketIntelligentTieringConfigurationInput
SetBucket sets the Bucket field's value.

func (*PutBucketIntelligentTieringConfigurationInput) SetId    added in  v1.35.24

func (s * PutBucketIntelligentTieringConfigurationInput ) SetId(v string ) * PutBucketIntelligentTieringConfigurationInput
SetId sets the Id field's value.

func (*PutBucketIntelligentTieringConfigurationInput) SetIntelligentTieringConfiguration    added in  v1.35.24

func (s * PutBucketIntelligentTieringConfigurationInput ) SetIntelligentTieringConfiguration(v * IntelligentTieringConfiguration ) * PutBucketIntelligentTieringConfigurationInput
SetIntelligentTieringConfiguration sets the IntelligentTieringConfiguration field's value.

func (PutBucketIntelligentTieringConfigurationInput) String    added in  v1.35.24

func (s PutBucketIntelligentTieringConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketIntelligentTieringConfigurationInput) Validate    added in  v1.35.24

func (s * PutBucketIntelligentTieringConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketIntelligentTieringConfigurationOutput    added in  v1.35.24
type PutBucketIntelligentTieringConfigurationOutput struct { // contains filtered or unexported fields }

func (PutBucketIntelligentTieringConfigurationOutput) GoString    added in  v1.35.24

func (s PutBucketIntelligentTieringConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketIntelligentTieringConfigurationOutput) String    added in  v1.35.24

func (s PutBucketIntelligentTieringConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketInventoryConfigurationInput    added in  v1.5.11
type PutBucketInventoryConfigurationInput struct {  // The name of the bucket where the inventory configuration will be stored.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The ID used to identify the inventory configuration.   //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"`  // Specifies the inventory configuration.   //  // InventoryConfiguration is a required field InventoryConfiguration * InventoryConfiguration `locationName:"InventoryConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"` // contains filtered or unexported fields }

func (PutBucketInventoryConfigurationInput) GoString    added in  v1.5.11

func (s PutBucketInventoryConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketInventoryConfigurationInput) SetBucket    added in  v1.5.11

func (s * PutBucketInventoryConfigurationInput ) SetBucket(v string ) * PutBucketInventoryConfigurationInput
SetBucket sets the Bucket field's value.

func (*PutBucketInventoryConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketInventoryConfigurationInput ) SetExpectedBucketOwner(v string ) * PutBucketInventoryConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketInventoryConfigurationInput) SetId    added in  v1.5.11

func (s * PutBucketInventoryConfigurationInput ) SetId(v string ) * PutBucketInventoryConfigurationInput
SetId sets the Id field's value.

func (*PutBucketInventoryConfigurationInput) SetInventoryConfiguration    added in  v1.5.11

func (s * PutBucketInventoryConfigurationInput ) SetInventoryConfiguration(v * InventoryConfiguration ) * PutBucketInventoryConfigurationInput
SetInventoryConfiguration sets the InventoryConfiguration field's value.

func (PutBucketInventoryConfigurationInput) String    added in  v1.5.11

func (s PutBucketInventoryConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketInventoryConfigurationInput) Validate    added in  v1.5.11

func (s * PutBucketInventoryConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketInventoryConfigurationOutput    added in  v1.5.11
type PutBucketInventoryConfigurationOutput struct { // contains filtered or unexported fields }

func (PutBucketInventoryConfigurationOutput) GoString    added in  v1.5.11

func (s PutBucketInventoryConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketInventoryConfigurationOutput) String    added in  v1.5.11

func (s PutBucketInventoryConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketLifecycleConfigurationInput    added in  v0.9.8
type PutBucketLifecycleConfigurationInput struct {  // The name of the bucket for which to set the configuration.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Container for lifecycle rules. You can add as many as 1,000 rules.  LifecycleConfiguration * BucketLifecycleConfiguration `locationName:"LifecycleConfiguration" type:"structure" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"` // contains filtered or unexported fields }

func (PutBucketLifecycleConfigurationInput) GoString    added in  v0.9.8

func (s PutBucketLifecycleConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketLifecycleConfigurationInput) SetBucket    added in  v1.5.0

func (s * PutBucketLifecycleConfigurationInput ) SetBucket(v string ) * PutBucketLifecycleConfigurationInput
SetBucket sets the Bucket field's value.

func (*PutBucketLifecycleConfigurationInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketLifecycleConfigurationInput ) SetChecksumAlgorithm(v string ) * PutBucketLifecycleConfigurationInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketLifecycleConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketLifecycleConfigurationInput ) SetExpectedBucketOwner(v string ) * PutBucketLifecycleConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketLifecycleConfigurationInput) SetLifecycleConfiguration    added in  v1.5.0

func (s * PutBucketLifecycleConfigurationInput ) SetLifecycleConfiguration(v * BucketLifecycleConfiguration ) * PutBucketLifecycleConfigurationInput
SetLifecycleConfiguration sets the LifecycleConfiguration field's value.

func (PutBucketLifecycleConfigurationInput) String    added in  v0.9.8

func (s PutBucketLifecycleConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketLifecycleConfigurationInput) Validate    added in  v1.1.21

func (s * PutBucketLifecycleConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketLifecycleConfigurationOutput    added in  v0.9.8
type PutBucketLifecycleConfigurationOutput struct { // contains filtered or unexported fields }

func (PutBucketLifecycleConfigurationOutput) GoString    added in  v0.9.8

func (s PutBucketLifecycleConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketLifecycleConfigurationOutput) String    added in  v0.9.8

func (s PutBucketLifecycleConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketLifecycleInput
type PutBucketLifecycleInput struct {  // Bucket is a required field  Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Container for lifecycle rules. You can add as many as 1000 rules.   //  // For more information see, Managing your storage lifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html )  // in the Amazon S3 User Guide. LifecycleConfiguration * LifecycleConfiguration `locationName:"LifecycleConfiguration" type:"structure" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"` // contains filtered or unexported fields }

func (PutBucketLifecycleInput) GoString    added in  v0.6.5

func (s PutBucketLifecycleInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketLifecycleInput) SetBucket    added in  v1.5.0

func (s * PutBucketLifecycleInput ) SetBucket(v string ) * PutBucketLifecycleInput
SetBucket sets the Bucket field's value.

func (*PutBucketLifecycleInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketLifecycleInput ) SetChecksumAlgorithm(v string ) * PutBucketLifecycleInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketLifecycleInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketLifecycleInput ) SetExpectedBucketOwner(v string ) * PutBucketLifecycleInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketLifecycleInput) SetLifecycleConfiguration    added in  v1.5.0

func (s * PutBucketLifecycleInput ) SetLifecycleConfiguration(v * LifecycleConfiguration ) * PutBucketLifecycleInput
SetLifecycleConfiguration sets the LifecycleConfiguration field's value.

func (PutBucketLifecycleInput) String    added in  v0.6.5

func (s PutBucketLifecycleInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketLifecycleInput) Validate    added in  v1.1.21

func (s * PutBucketLifecycleInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketLifecycleOutput
type PutBucketLifecycleOutput struct { // contains filtered or unexported fields }

func (PutBucketLifecycleOutput) GoString    added in  v0.6.5

func (s PutBucketLifecycleOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketLifecycleOutput) String    added in  v0.6.5

func (s PutBucketLifecycleOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketLoggingInput
type PutBucketLoggingInput struct {  // The name of the bucket for which to set the logging parameters.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Container for logging status information.   //  // BucketLoggingStatus is a required field BucketLoggingStatus * BucketLoggingStatus `locationName:"BucketLoggingStatus" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"` // contains filtered or unexported fields }

func (PutBucketLoggingInput) GoString    added in  v0.6.5

func (s PutBucketLoggingInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketLoggingInput) SetBucket    added in  v1.5.0

func (s * PutBucketLoggingInput ) SetBucket(v string ) * PutBucketLoggingInput
SetBucket sets the Bucket field's value.

func (*PutBucketLoggingInput) SetBucketLoggingStatus    added in  v1.5.0

func (s * PutBucketLoggingInput ) SetBucketLoggingStatus(v * BucketLoggingStatus ) * PutBucketLoggingInput
SetBucketLoggingStatus sets the BucketLoggingStatus field's value.

func (*PutBucketLoggingInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketLoggingInput ) SetChecksumAlgorithm(v string ) * PutBucketLoggingInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketLoggingInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketLoggingInput ) SetExpectedBucketOwner(v string ) * PutBucketLoggingInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (PutBucketLoggingInput) String    added in  v0.6.5

func (s PutBucketLoggingInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketLoggingInput) Validate    added in  v1.1.21

func (s * PutBucketLoggingInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketLoggingOutput
type PutBucketLoggingOutput struct { // contains filtered or unexported fields }

func (PutBucketLoggingOutput) GoString    added in  v0.6.5

func (s PutBucketLoggingOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketLoggingOutput) String    added in  v0.6.5

func (s PutBucketLoggingOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketMetricsConfigurationInput    added in  v1.5.11
type PutBucketMetricsConfigurationInput struct {  // The name of the bucket for which the metrics configuration is set.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The ID used to identify the metrics configuration. The ID has a 64 character   // limit and can only contain letters, numbers, periods, dashes, and underscores.  //  // Id is a required field Id * string `location:"querystring" locationName:"id" type:"string" required:"true"`  // Specifies the metrics configuration.   //  // MetricsConfiguration is a required field MetricsConfiguration * MetricsConfiguration `locationName:"MetricsConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"` // contains filtered or unexported fields }

func (PutBucketMetricsConfigurationInput) GoString    added in  v1.5.11

func (s PutBucketMetricsConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketMetricsConfigurationInput) SetBucket    added in  v1.5.11

func (s * PutBucketMetricsConfigurationInput ) SetBucket(v string ) * PutBucketMetricsConfigurationInput
SetBucket sets the Bucket field's value.

func (*PutBucketMetricsConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketMetricsConfigurationInput ) SetExpectedBucketOwner(v string ) * PutBucketMetricsConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketMetricsConfigurationInput) SetId    added in  v1.5.11

func (s * PutBucketMetricsConfigurationInput ) SetId(v string ) * PutBucketMetricsConfigurationInput
SetId sets the Id field's value.

func (*PutBucketMetricsConfigurationInput) SetMetricsConfiguration    added in  v1.5.11

func (s * PutBucketMetricsConfigurationInput ) SetMetricsConfiguration(v * MetricsConfiguration ) * PutBucketMetricsConfigurationInput
SetMetricsConfiguration sets the MetricsConfiguration field's value.

func (PutBucketMetricsConfigurationInput) String    added in  v1.5.11

func (s PutBucketMetricsConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketMetricsConfigurationInput) Validate    added in  v1.5.11

func (s * PutBucketMetricsConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketMetricsConfigurationOutput    added in  v1.5.11
type PutBucketMetricsConfigurationOutput struct { // contains filtered or unexported fields }

func (PutBucketMetricsConfigurationOutput) GoString    added in  v1.5.11

func (s PutBucketMetricsConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketMetricsConfigurationOutput) String    added in  v1.5.11

func (s PutBucketMetricsConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketNotificationConfigurationInput
type PutBucketNotificationConfigurationInput struct {  // The name of the bucket.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // A container for specifying the notification configuration of the bucket.   // If this element is empty, notifications are turned off for the bucket.  //  // NotificationConfiguration is a required field NotificationConfiguration * NotificationConfiguration `locationName:"NotificationConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // Skips validation of Amazon SQS, Amazon SNS, and Lambda destinations. True   // or false value. SkipDestinationValidation * bool `location:"header" locationName:"x-amz-skip-destination-validation" type:"boolean"` // contains filtered or unexported fields }

func (PutBucketNotificationConfigurationInput) GoString    added in  v0.6.5

func (s PutBucketNotificationConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketNotificationConfigurationInput) SetBucket    added in  v1.5.0

func (s * PutBucketNotificationConfigurationInput ) SetBucket(v string ) * PutBucketNotificationConfigurationInput
SetBucket sets the Bucket field's value.

func (*PutBucketNotificationConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketNotificationConfigurationInput ) SetExpectedBucketOwner(v string ) * PutBucketNotificationConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketNotificationConfigurationInput) SetNotificationConfiguration    added in  v1.5.0

func (s * PutBucketNotificationConfigurationInput ) SetNotificationConfiguration(v * NotificationConfiguration ) * PutBucketNotificationConfigurationInput
SetNotificationConfiguration sets the NotificationConfiguration field's value.

func (*PutBucketNotificationConfigurationInput) SetSkipDestinationValidation    added in  v1.42.15

func (s * PutBucketNotificationConfigurationInput ) SetSkipDestinationValidation(v bool ) * PutBucketNotificationConfigurationInput
SetSkipDestinationValidation sets the SkipDestinationValidation field's value.

func (PutBucketNotificationConfigurationInput) String    added in  v0.6.5

func (s PutBucketNotificationConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketNotificationConfigurationInput) Validate    added in  v1.1.21

func (s * PutBucketNotificationConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketNotificationConfigurationOutput
type PutBucketNotificationConfigurationOutput struct { // contains filtered or unexported fields }

func (PutBucketNotificationConfigurationOutput) GoString    added in  v0.6.5

func (s PutBucketNotificationConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketNotificationConfigurationOutput) String    added in  v0.6.5

func (s PutBucketNotificationConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketNotificationInput
type PutBucketNotificationInput struct {  // The name of the bucket.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The container for the configuration.   //  // NotificationConfiguration is a required field NotificationConfiguration * NotificationConfigurationDeprecated `locationName:"NotificationConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"` // contains filtered or unexported fields }

func (PutBucketNotificationInput) GoString    added in  v0.6.5

func (s PutBucketNotificationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketNotificationInput) SetBucket    added in  v1.5.0

func (s * PutBucketNotificationInput ) SetBucket(v string ) * PutBucketNotificationInput
SetBucket sets the Bucket field's value.

func (*PutBucketNotificationInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketNotificationInput ) SetChecksumAlgorithm(v string ) * PutBucketNotificationInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketNotificationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketNotificationInput ) SetExpectedBucketOwner(v string ) * PutBucketNotificationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketNotificationInput) SetNotificationConfiguration    added in  v1.5.0

func (s * PutBucketNotificationInput ) SetNotificationConfiguration(v * NotificationConfigurationDeprecated ) * PutBucketNotificationInput
SetNotificationConfiguration sets the NotificationConfiguration field's value.

func (PutBucketNotificationInput) String    added in  v0.6.5

func (s PutBucketNotificationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketNotificationInput) Validate    added in  v1.1.21

func (s * PutBucketNotificationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketNotificationOutput
type PutBucketNotificationOutput struct { // contains filtered or unexported fields }

func (PutBucketNotificationOutput) GoString    added in  v0.6.5

func (s PutBucketNotificationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketNotificationOutput) String    added in  v0.6.5

func (s PutBucketNotificationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketOwnershipControlsInput    added in  v1.35.2
type PutBucketOwnershipControlsInput struct {  // The name of the Amazon S3 bucket whose OwnershipControls you want to set.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The OwnershipControls (BucketOwnerEnforced, BucketOwnerPreferred, or ObjectWriter)   // that you want to apply to this Amazon S3 bucket.  //  // OwnershipControls is a required field OwnershipControls * OwnershipControls `locationName:"OwnershipControls" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"` // contains filtered or unexported fields }

func (PutBucketOwnershipControlsInput) GoString    added in  v1.35.2

func (s PutBucketOwnershipControlsInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketOwnershipControlsInput) SetBucket    added in  v1.35.2

func (s * PutBucketOwnershipControlsInput ) SetBucket(v string ) * PutBucketOwnershipControlsInput
SetBucket sets the Bucket field's value.

func (*PutBucketOwnershipControlsInput) SetExpectedBucketOwner    added in  v1.35.2

func (s * PutBucketOwnershipControlsInput ) SetExpectedBucketOwner(v string ) * PutBucketOwnershipControlsInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketOwnershipControlsInput) SetOwnershipControls    added in  v1.35.2

func (s * PutBucketOwnershipControlsInput ) SetOwnershipControls(v * OwnershipControls ) * PutBucketOwnershipControlsInput
SetOwnershipControls sets the OwnershipControls field's value.

func (PutBucketOwnershipControlsInput) String    added in  v1.35.2

func (s PutBucketOwnershipControlsInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketOwnershipControlsInput) Validate    added in  v1.35.2

func (s * PutBucketOwnershipControlsInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketOwnershipControlsOutput    added in  v1.35.2
type PutBucketOwnershipControlsOutput struct { // contains filtered or unexported fields }

func (PutBucketOwnershipControlsOutput) GoString    added in  v1.35.2

func (s PutBucketOwnershipControlsOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketOwnershipControlsOutput) String    added in  v1.35.2

func (s PutBucketOwnershipControlsOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketPolicyInput
type PutBucketPolicyInput struct {  // The name of the bucket.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // Set this parameter to true to confirm that you want to remove your permissions   // to change this bucket policy in the future. ConfirmRemoveSelfBucketAccess * bool `location:"header" locationName:"x-amz-confirm-remove-self-bucket-access" type:"boolean"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The bucket policy as a JSON document.   //  // Policy is a required field Policy * string `type:"string" required:"true"` // contains filtered or unexported fields }

func (PutBucketPolicyInput) GoString    added in  v0.6.5

func (s PutBucketPolicyInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketPolicyInput) SetBucket    added in  v1.5.0

func (s * PutBucketPolicyInput ) SetBucket(v string ) * PutBucketPolicyInput
SetBucket sets the Bucket field's value.

func (*PutBucketPolicyInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketPolicyInput ) SetChecksumAlgorithm(v string ) * PutBucketPolicyInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketPolicyInput) SetConfirmRemoveSelfBucketAccess    added in  v1.12.24

func (s * PutBucketPolicyInput ) SetConfirmRemoveSelfBucketAccess(v bool ) * PutBucketPolicyInput
SetConfirmRemoveSelfBucketAccess sets the ConfirmRemoveSelfBucketAccess field's value.

func (*PutBucketPolicyInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketPolicyInput ) SetExpectedBucketOwner(v string ) * PutBucketPolicyInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketPolicyInput) SetPolicy    added in  v1.5.0

func (s * PutBucketPolicyInput ) SetPolicy(v string ) * PutBucketPolicyInput
SetPolicy sets the Policy field's value.

func (PutBucketPolicyInput) String    added in  v0.6.5

func (s PutBucketPolicyInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketPolicyInput) Validate    added in  v1.1.21

func (s * PutBucketPolicyInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketPolicyOutput
type PutBucketPolicyOutput struct { // contains filtered or unexported fields }

func (PutBucketPolicyOutput) GoString    added in  v0.6.5

func (s PutBucketPolicyOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketPolicyOutput) String    added in  v0.6.5

func (s PutBucketPolicyOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketReplicationInput
type PutBucketReplicationInput struct {  // The name of the bucket   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // A container for replication rules. You can add up to 1,000 rules. The maximum   // size of a replication configuration is 2 MB.  //  // ReplicationConfiguration is a required field ReplicationConfiguration * ReplicationConfiguration `locationName:"ReplicationConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // A token to allow Object Lock to be enabled for an existing bucket.  Token * string `location:"header" locationName:"x-amz-bucket-object-lock-token" type:"string"` // contains filtered or unexported fields }

func (PutBucketReplicationInput) GoString    added in  v0.6.5

func (s PutBucketReplicationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketReplicationInput) SetBucket    added in  v1.5.0

func (s * PutBucketReplicationInput ) SetBucket(v string ) * PutBucketReplicationInput
SetBucket sets the Bucket field's value.

func (*PutBucketReplicationInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketReplicationInput ) SetChecksumAlgorithm(v string ) * PutBucketReplicationInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketReplicationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketReplicationInput ) SetExpectedBucketOwner(v string ) * PutBucketReplicationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketReplicationInput) SetReplicationConfiguration    added in  v1.5.0

func (s * PutBucketReplicationInput ) SetReplicationConfiguration(v * ReplicationConfiguration ) * PutBucketReplicationInput
SetReplicationConfiguration sets the ReplicationConfiguration field's value.

func (*PutBucketReplicationInput) SetToken    added in  v1.19.32

func (s * PutBucketReplicationInput ) SetToken(v string ) * PutBucketReplicationInput
SetToken sets the Token field's value.

func (PutBucketReplicationInput) String    added in  v0.6.5

func (s PutBucketReplicationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketReplicationInput) Validate    added in  v1.1.21

func (s * PutBucketReplicationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketReplicationOutput
type PutBucketReplicationOutput struct { // contains filtered or unexported fields }

func (PutBucketReplicationOutput) GoString    added in  v0.6.5

func (s PutBucketReplicationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketReplicationOutput) String    added in  v0.6.5

func (s PutBucketReplicationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketRequestPaymentInput
type PutBucketRequestPaymentInput struct {  // The bucket name.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Container for Payer.   //  // RequestPaymentConfiguration is a required field RequestPaymentConfiguration * RequestPaymentConfiguration `locationName:"RequestPaymentConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"` // contains filtered or unexported fields }

func (PutBucketRequestPaymentInput) GoString    added in  v0.6.5

func (s PutBucketRequestPaymentInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketRequestPaymentInput) SetBucket    added in  v1.5.0

func (s * PutBucketRequestPaymentInput ) SetBucket(v string ) * PutBucketRequestPaymentInput
SetBucket sets the Bucket field's value.

func (*PutBucketRequestPaymentInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketRequestPaymentInput ) SetChecksumAlgorithm(v string ) * PutBucketRequestPaymentInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketRequestPaymentInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketRequestPaymentInput ) SetExpectedBucketOwner(v string ) * PutBucketRequestPaymentInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketRequestPaymentInput) SetRequestPaymentConfiguration    added in  v1.5.0

func (s * PutBucketRequestPaymentInput ) SetRequestPaymentConfiguration(v * RequestPaymentConfiguration ) * PutBucketRequestPaymentInput
SetRequestPaymentConfiguration sets the RequestPaymentConfiguration field's value.

func (PutBucketRequestPaymentInput) String    added in  v0.6.5

func (s PutBucketRequestPaymentInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketRequestPaymentInput) Validate    added in  v1.1.21

func (s * PutBucketRequestPaymentInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketRequestPaymentOutput
type PutBucketRequestPaymentOutput struct { // contains filtered or unexported fields }

func (PutBucketRequestPaymentOutput) GoString    added in  v0.6.5

func (s PutBucketRequestPaymentOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketRequestPaymentOutput) String    added in  v0.6.5

func (s PutBucketRequestPaymentOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketTaggingInput
type PutBucketTaggingInput struct {  // The bucket name.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Container for the TagSet and Tag elements.   //  // Tagging is a required field Tagging * Tagging `locationName:"Tagging" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"` // contains filtered or unexported fields }

func (PutBucketTaggingInput) GoString    added in  v0.6.5

func (s PutBucketTaggingInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketTaggingInput) SetBucket    added in  v1.5.0

func (s * PutBucketTaggingInput ) SetBucket(v string ) * PutBucketTaggingInput
SetBucket sets the Bucket field's value.

func (*PutBucketTaggingInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketTaggingInput ) SetChecksumAlgorithm(v string ) * PutBucketTaggingInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketTaggingInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketTaggingInput ) SetExpectedBucketOwner(v string ) * PutBucketTaggingInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketTaggingInput) SetTagging    added in  v1.5.0

func (s * PutBucketTaggingInput ) SetTagging(v * Tagging ) * PutBucketTaggingInput
SetTagging sets the Tagging field's value.

func (PutBucketTaggingInput) String    added in  v0.6.5

func (s PutBucketTaggingInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketTaggingInput) Validate    added in  v1.1.21

func (s * PutBucketTaggingInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketTaggingOutput
type PutBucketTaggingOutput struct { // contains filtered or unexported fields }

func (PutBucketTaggingOutput) GoString    added in  v0.6.5

func (s PutBucketTaggingOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketTaggingOutput) String    added in  v0.6.5

func (s PutBucketTaggingOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketVersioningInput
type PutBucketVersioningInput struct {  // The bucket name.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The concatenation of the authentication device's serial number, a space,   // and the value that is displayed on your authentication device. MFA * string `location:"header" locationName:"x-amz-mfa" type:"string"`  // Container for setting the versioning state.   //  // VersioningConfiguration is a required field VersioningConfiguration * VersioningConfiguration `locationName:"VersioningConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"` // contains filtered or unexported fields }

func (PutBucketVersioningInput) GoString    added in  v0.6.5

func (s PutBucketVersioningInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketVersioningInput) SetBucket    added in  v1.5.0

func (s * PutBucketVersioningInput ) SetBucket(v string ) * PutBucketVersioningInput
SetBucket sets the Bucket field's value.

func (*PutBucketVersioningInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketVersioningInput ) SetChecksumAlgorithm(v string ) * PutBucketVersioningInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketVersioningInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketVersioningInput ) SetExpectedBucketOwner(v string ) * PutBucketVersioningInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketVersioningInput) SetMFA    added in  v1.5.0

func (s * PutBucketVersioningInput ) SetMFA(v string ) * PutBucketVersioningInput
SetMFA sets the MFA field's value.

func (*PutBucketVersioningInput) SetVersioningConfiguration    added in  v1.5.0

func (s * PutBucketVersioningInput ) SetVersioningConfiguration(v * VersioningConfiguration ) * PutBucketVersioningInput
SetVersioningConfiguration sets the VersioningConfiguration field's value.

func (PutBucketVersioningInput) String    added in  v0.6.5

func (s PutBucketVersioningInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketVersioningInput) Validate    added in  v1.1.21

func (s * PutBucketVersioningInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketVersioningOutput
type PutBucketVersioningOutput struct { // contains filtered or unexported fields }

func (PutBucketVersioningOutput) GoString    added in  v0.6.5

func (s PutBucketVersioningOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketVersioningOutput) String    added in  v0.6.5

func (s PutBucketVersioningOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutBucketWebsiteInput
type PutBucketWebsiteInput struct {  // The bucket name.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Container for the request.   //  // WebsiteConfiguration is a required field WebsiteConfiguration * WebsiteConfiguration `locationName:"WebsiteConfiguration" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"` // contains filtered or unexported fields }

func (PutBucketWebsiteInput) GoString    added in  v0.6.5

func (s PutBucketWebsiteInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketWebsiteInput) SetBucket    added in  v1.5.0

func (s * PutBucketWebsiteInput ) SetBucket(v string ) * PutBucketWebsiteInput
SetBucket sets the Bucket field's value.

func (*PutBucketWebsiteInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutBucketWebsiteInput ) SetChecksumAlgorithm(v string ) * PutBucketWebsiteInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutBucketWebsiteInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutBucketWebsiteInput ) SetExpectedBucketOwner(v string ) * PutBucketWebsiteInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutBucketWebsiteInput) SetWebsiteConfiguration    added in  v1.5.0

func (s * PutBucketWebsiteInput ) SetWebsiteConfiguration(v * WebsiteConfiguration ) * PutBucketWebsiteInput
SetWebsiteConfiguration sets the WebsiteConfiguration field's value.

func (PutBucketWebsiteInput) String    added in  v0.6.5

func (s PutBucketWebsiteInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutBucketWebsiteInput) Validate    added in  v1.1.21

func (s * PutBucketWebsiteInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutBucketWebsiteOutput
type PutBucketWebsiteOutput struct { // contains filtered or unexported fields }

func (PutBucketWebsiteOutput) GoString    added in  v0.6.5

func (s PutBucketWebsiteOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutBucketWebsiteOutput) String    added in  v0.6.5

func (s PutBucketWebsiteOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutObjectAclInput    added in  v0.9.5
type PutObjectAclInput struct {  // The canned ACL to apply to the object. For more information, see Canned ACL   // ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL ). ACL * string `location:"header" locationName:"x-amz-acl" type:"string" enum:"ObjectCannedACL"`  // Contains the elements that set the ACL permissions for an object per grantee.  AccessControlPolicy * AccessControlPolicy `locationName:"AccessControlPolicy" type:"structure" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // The bucket name that contains the object to which you want to attach the   // ACL.  //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Allows grantee the read, write, read ACP, and write ACP permissions on the   // bucket.  //  // This action is not supported by Amazon S3 on Outposts. GrantFullControl * string `location:"header" locationName:"x-amz-grant-full-control" type:"string"`  // Allows grantee to list the objects in the bucket.   //  // This action is not supported by Amazon S3 on Outposts. GrantRead * string `location:"header" locationName:"x-amz-grant-read" type:"string"`  // Allows grantee to read the bucket ACL.   //  // This action is not supported by Amazon S3 on Outposts. GrantReadACP * string `location:"header" locationName:"x-amz-grant-read-acp" type:"string"`  // Allows grantee to create new objects in the bucket.   //  // For the bucket and object owners of existing objects, also allows deletions  // and overwrites of those objects. GrantWrite * string `location:"header" locationName:"x-amz-grant-write" type:"string"`  // Allows grantee to write the ACL for the applicable bucket.   //  // This action is not supported by Amazon S3 on Outposts. GrantWriteACP * string `location:"header" locationName:"x-amz-grant-write-acp" type:"string"`  // Key for which the PUT action was initiated.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // VersionId used to reference a specific version of the object.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (PutObjectAclInput) GoString    added in  v0.9.5

func (s PutObjectAclInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectAclInput) SetACL    added in  v1.5.0

func (s * PutObjectAclInput ) SetACL(v string ) * PutObjectAclInput
SetACL sets the ACL field's value.

func (*PutObjectAclInput) SetAccessControlPolicy    added in  v1.5.0

func (s * PutObjectAclInput ) SetAccessControlPolicy(v * AccessControlPolicy ) * PutObjectAclInput
SetAccessControlPolicy sets the AccessControlPolicy field's value.

func (*PutObjectAclInput) SetBucket    added in  v1.5.0

func (s * PutObjectAclInput ) SetBucket(v string ) * PutObjectAclInput
SetBucket sets the Bucket field's value.

func (*PutObjectAclInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutObjectAclInput ) SetChecksumAlgorithm(v string ) * PutObjectAclInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutObjectAclInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutObjectAclInput ) SetExpectedBucketOwner(v string ) * PutObjectAclInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutObjectAclInput) SetGrantFullControl    added in  v1.5.0

func (s * PutObjectAclInput ) SetGrantFullControl(v string ) * PutObjectAclInput
SetGrantFullControl sets the GrantFullControl field's value.

func (*PutObjectAclInput) SetGrantRead    added in  v1.5.0

func (s * PutObjectAclInput ) SetGrantRead(v string ) * PutObjectAclInput
SetGrantRead sets the GrantRead field's value.

func (*PutObjectAclInput) SetGrantReadACP    added in  v1.5.0

func (s * PutObjectAclInput ) SetGrantReadACP(v string ) * PutObjectAclInput
SetGrantReadACP sets the GrantReadACP field's value.

func (*PutObjectAclInput) SetGrantWrite    added in  v1.5.0

func (s * PutObjectAclInput ) SetGrantWrite(v string ) * PutObjectAclInput
SetGrantWrite sets the GrantWrite field's value.

func (*PutObjectAclInput) SetGrantWriteACP    added in  v1.5.0

func (s * PutObjectAclInput ) SetGrantWriteACP(v string ) * PutObjectAclInput
SetGrantWriteACP sets the GrantWriteACP field's value.

func (*PutObjectAclInput) SetKey    added in  v1.5.0

func (s * PutObjectAclInput ) SetKey(v string ) * PutObjectAclInput
SetKey sets the Key field's value.

func (*PutObjectAclInput) SetRequestPayer    added in  v1.5.0

func (s * PutObjectAclInput ) SetRequestPayer(v string ) * PutObjectAclInput
SetRequestPayer sets the RequestPayer field's value.

func (*PutObjectAclInput) SetVersionId    added in  v1.5.0

func (s * PutObjectAclInput ) SetVersionId(v string ) * PutObjectAclInput
SetVersionId sets the VersionId field's value.

func (PutObjectAclInput) String    added in  v0.9.5

func (s PutObjectAclInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectAclInput) Validate    added in  v1.1.21

func (s * PutObjectAclInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutObjectAclOutput    added in  v0.9.5
type PutObjectAclOutput struct {  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"` // contains filtered or unexported fields }

func (PutObjectAclOutput) GoString    added in  v0.9.5

func (s PutObjectAclOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectAclOutput) SetRequestCharged    added in  v1.5.0

func (s * PutObjectAclOutput ) SetRequestCharged(v string ) * PutObjectAclOutput
SetRequestCharged sets the RequestCharged field's value.

func (PutObjectAclOutput) String    added in  v0.9.5

func (s PutObjectAclOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutObjectInput
type PutObjectInput struct {  // The canned ACL to apply to the object. For more information, see Canned ACL   // ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL ).  //  // This action is not supported by Amazon S3 on Outposts. ACL * string `location:"header" locationName:"x-amz-acl" type:"string" enum:"ObjectCannedACL"`  // Object data.  Body io . ReadSeeker `type:"blob"`  // The bucket name to which the PUT action was initiated.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption   // with server-side encryption using Key Management Service (KMS) keys (SSE-KMS).  // Setting this header to true causes Amazon S3 to use an S3 Bucket Key for  // object encryption with SSE-KMS.  //  // Specifying this header with a PUT action doesn’t affect bucket-level settings  // for S3 Bucket Key. BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // Can be used to specify caching behavior along the request/reply chain. For   // more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9  // ( http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9 ). CacheControl * string `location:"header" locationName:"Cache-Control" type:"string"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 32-bit CRC32 checksum of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `location:"header" locationName:"x-amz-checksum-crc32" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 32-bit CRC32C checksum of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `location:"header" locationName:"x-amz-checksum-crc32c" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 160-bit SHA-1 digest of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `location:"header" locationName:"x-amz-checksum-sha1" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 256-bit SHA-256 digest of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `location:"header" locationName:"x-amz-checksum-sha256" type:"string"`  // Specifies presentational information for the object. For more information,   // see https://www.rfc-editor.org/rfc/rfc6266#section-4 ( https://www.rfc-editor.org/rfc/rfc6266#section-4 ). ContentDisposition * string `location:"header" locationName:"Content-Disposition" type:"string"`  // Specifies what content encodings have been applied to the object and thus   // what decoding mechanisms must be applied to obtain the media-type referenced  // by the Content-Type header field. For more information, see https://www.rfc-editor.org/rfc/rfc9110.html#field.content-encoding  // ( https://www.rfc-editor.org/rfc/rfc9110.html#field.content-encoding ). ContentEncoding * string `location:"header" locationName:"Content-Encoding" type:"string"`  // The language the content is in.  ContentLanguage * string `location:"header" locationName:"Content-Language" type:"string"`  // Size of the body in bytes. This parameter is useful when the size of the   // body cannot be determined automatically. For more information, see https://www.rfc-editor.org/rfc/rfc9110.html#name-content-length  // ( https://www.rfc-editor.org/rfc/rfc9110.html#name-content-length ). ContentLength * int64 `location:"header" locationName:"Content-Length" type:"long"`  // The base64-encoded 128-bit MD5 digest of the message (without the headers)   // according to RFC 1864 . This header can be used as a message integrity check  // to verify that the data is the same data that was originally sent. Although  // it is optional, we recommend using the Content-MD5 mechanism as an end-to-end  // integrity check. For more information about REST request authentication,  // see REST Authentication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html ). ContentMD5 * string `location:"header" locationName:"Content-MD5" type:"string"`  // A standard MIME type describing the format of the contents. For more information,   // see https://www.rfc-editor.org/rfc/rfc9110.html#name-content-type ( https://www.rfc-editor.org/rfc/rfc9110.html#name-content-type ). ContentType * string `location:"header" locationName:"Content-Type" type:"string"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The date and time at which the object is no longer cacheable. For more information,   // see https://www.rfc-editor.org/rfc/rfc7234#section-5.3 ( https://www.rfc-editor.org/rfc/rfc7234#section-5.3 ). Expires * time . Time `location:"header" locationName:"Expires" type:"timestamp"`  // Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.   //  // This action is not supported by Amazon S3 on Outposts. GrantFullControl * string `location:"header" locationName:"x-amz-grant-full-control" type:"string"`  // Allows grantee to read the object data and its metadata.   //  // This action is not supported by Amazon S3 on Outposts. GrantRead * string `location:"header" locationName:"x-amz-grant-read" type:"string"`  // Allows grantee to read the object ACL.   //  // This action is not supported by Amazon S3 on Outposts. GrantReadACP * string `location:"header" locationName:"x-amz-grant-read-acp" type:"string"`  // Allows grantee to write the ACL for the applicable object.   //  // This action is not supported by Amazon S3 on Outposts. GrantWriteACP * string `location:"header" locationName:"x-amz-grant-write-acp" type:"string"`  // Object key for which the PUT action was initiated.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // A map of metadata to store with the object in S3.  Metadata map[ string ]* string `location:"headers" locationName:"x-amz-meta-" type:"map"`  // Specifies whether a legal hold will be applied to this object. For more information   // about S3 Object Lock, see Object Lock ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html ). ObjectLockLegalHoldStatus * string `location:"header" locationName:"x-amz-object-lock-legal-hold" type:"string" enum:"ObjectLockLegalHoldStatus"`  // The Object Lock mode that you want to apply to this object.  ObjectLockMode * string `location:"header" locationName:"x-amz-object-lock-mode" type:"string" enum:"ObjectLockMode"`  // The date and time when you want this object's Object Lock to expire. Must   // be formatted as a timestamp parameter. ObjectLockRetainUntilDate * time . Time `location:"header" locationName:"x-amz-object-lock-retain-until-date" type:"timestamp" timestampFormat:"iso8601"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Specifies the algorithm to use to when encrypting the object (for example,   // AES256). SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // Specifies the customer-provided encryption key for Amazon S3 to use in encrypting   // data. This value is used to store the object and then it is discarded; Amazon  // S3 does not store the encryption key. The key must be appropriate for use  // with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm  // header.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by PutObjectInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321 .   // Amazon S3 uses this header for a message integrity check to ensure that the  // encryption key was transmitted without error. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // Specifies the Amazon Web Services KMS Encryption Context to use for object   // encryption. The value of this header is a base64-encoded UTF-8 string holding  // JSON with the encryption context key-value pairs. This value is stored as  // object metadata and automatically gets passed on to Amazon Web Services KMS  // for future GetObject or CopyObject operations on this object.  //  // SSEKMSEncryptionContext is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by PutObjectInput's  // String and GoString methods. SSEKMSEncryptionContext * string `location:"header" locationName:"x-amz-server-side-encryption-context" type:"string" sensitive:"true"`  // If x-amz-server-side-encryption has a valid value of aws:kms or aws:kms:dsse,   // this header specifies the ID (Key ID, Key ARN, or Key Alias) of the Key Management  // Service (KMS) symmetric encryption customer managed key that was used for  // the object. If you specify x-amz-server-side-encryption:aws:kms or x-amz-server-side-encryption:aws:kms:dsse,  // but do not providex-amz-server-side-encryption-aws-kms-key-id, Amazon S3  // uses the Amazon Web Services managed key (aws/s3) to protect the data. If  // the KMS key does not exist in the same account that's issuing the command,  // you must use the full ARN and not just the ID.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by PutObjectInput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms, aws:kms:dsse). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"`  // By default, Amazon S3 uses the STANDARD Storage Class to store newly created   // objects. The STANDARD storage class provides high durability and high availability.  // Depending on performance needs, you can specify a different Storage Class.  // Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information,  // see Storage Classes ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html )  // in the Amazon S3 User Guide. StorageClass * string `location:"header" locationName:"x-amz-storage-class" type:"string" enum:"StorageClass"`  // The tag-set for the object. The tag-set must be encoded as URL Query parameters.   // (For example, "Key1=Value1") Tagging * string `location:"header" locationName:"x-amz-tagging" type:"string"`  // If the bucket is configured as a website, redirects requests for this object   // to another object in the same bucket or to an external URL. Amazon S3 stores  // the value of this header in the object metadata. For information about object  // metadata, see Object Key and Metadata ( https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html ).  //  // In the following example, the request header sets the redirect to an object  // (anotherPage.html) in the same bucket:  //  // x-amz-website-redirect-location: /anotherPage.html  //  // In the following example, the request header sets the object redirect to  // another website:  //  // x-amz-website-redirect-location: http://www.example.com/  //  // For more information about website hosting in Amazon S3, see Hosting Websites  // on Amazon S3 ( https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html )  // and How to Configure Website Page Redirects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html ). WebsiteRedirectLocation * string `location:"header" locationName:"x-amz-website-redirect-location" type:"string"` // contains filtered or unexported fields }

func (PutObjectInput) GoString    added in  v0.6.5

func (s PutObjectInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectInput) SetACL    added in  v1.5.0

func (s * PutObjectInput ) SetACL(v string ) * PutObjectInput
SetACL sets the ACL field's value.

func (*PutObjectInput) SetBody    added in  v1.5.0

func (s * PutObjectInput ) SetBody(v io . ReadSeeker ) * PutObjectInput
SetBody sets the Body field's value.

func (*PutObjectInput) SetBucket    added in  v1.5.0

func (s * PutObjectInput ) SetBucket(v string ) * PutObjectInput
SetBucket sets the Bucket field's value.

func (*PutObjectInput) SetBucketKeyEnabled    added in  v1.35.37

func (s * PutObjectInput ) SetBucketKeyEnabled(v bool ) * PutObjectInput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*PutObjectInput) SetCacheControl    added in  v1.5.0

func (s * PutObjectInput ) SetCacheControl(v string ) * PutObjectInput
SetCacheControl sets the CacheControl field's value.

func (*PutObjectInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutObjectInput ) SetChecksumAlgorithm(v string ) * PutObjectInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutObjectInput) SetChecksumCRC32    added in  v1.43.6

func (s * PutObjectInput ) SetChecksumCRC32(v string ) * PutObjectInput
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*PutObjectInput) SetChecksumCRC32C    added in  v1.43.6

func (s * PutObjectInput ) SetChecksumCRC32C(v string ) * PutObjectInput
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*PutObjectInput) SetChecksumSHA1    added in  v1.43.6

func (s * PutObjectInput ) SetChecksumSHA1(v string ) * PutObjectInput
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*PutObjectInput) SetChecksumSHA256    added in  v1.43.6

func (s * PutObjectInput ) SetChecksumSHA256(v string ) * PutObjectInput
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*PutObjectInput) SetContentDisposition    added in  v1.5.0

func (s * PutObjectInput ) SetContentDisposition(v string ) * PutObjectInput
SetContentDisposition sets the ContentDisposition field's value.

func (*PutObjectInput) SetContentEncoding    added in  v1.5.0

func (s * PutObjectInput ) SetContentEncoding(v string ) * PutObjectInput
SetContentEncoding sets the ContentEncoding field's value.

func (*PutObjectInput) SetContentLanguage    added in  v1.5.0

func (s * PutObjectInput ) SetContentLanguage(v string ) * PutObjectInput
SetContentLanguage sets the ContentLanguage field's value.

func (*PutObjectInput) SetContentLength    added in  v1.5.0

func (s * PutObjectInput ) SetContentLength(v int64 ) * PutObjectInput
SetContentLength sets the ContentLength field's value.

func (*PutObjectInput) SetContentMD5    added in  v1.12.2

func (s * PutObjectInput ) SetContentMD5(v string ) * PutObjectInput
SetContentMD5 sets the ContentMD5 field's value.

func (*PutObjectInput) SetContentType    added in  v1.5.0

func (s * PutObjectInput ) SetContentType(v string ) * PutObjectInput
SetContentType sets the ContentType field's value.

func (*PutObjectInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutObjectInput ) SetExpectedBucketOwner(v string ) * PutObjectInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutObjectInput) SetExpires    added in  v1.5.0

func (s * PutObjectInput ) SetExpires(v time . Time ) * PutObjectInput
SetExpires sets the Expires field's value.

func (*PutObjectInput) SetGrantFullControl    added in  v1.5.0

func (s * PutObjectInput ) SetGrantFullControl(v string ) * PutObjectInput
SetGrantFullControl sets the GrantFullControl field's value.

func (*PutObjectInput) SetGrantRead    added in  v1.5.0

func (s * PutObjectInput ) SetGrantRead(v string ) * PutObjectInput
SetGrantRead sets the GrantRead field's value.

func (*PutObjectInput) SetGrantReadACP    added in  v1.5.0

func (s * PutObjectInput ) SetGrantReadACP(v string ) * PutObjectInput
SetGrantReadACP sets the GrantReadACP field's value.

func (*PutObjectInput) SetGrantWriteACP    added in  v1.5.0

func (s * PutObjectInput ) SetGrantWriteACP(v string ) * PutObjectInput
SetGrantWriteACP sets the GrantWriteACP field's value.

func (*PutObjectInput) SetKey    added in  v1.5.0

func (s * PutObjectInput ) SetKey(v string ) * PutObjectInput
SetKey sets the Key field's value.

func (*PutObjectInput) SetMetadata    added in  v1.5.0

func (s * PutObjectInput ) SetMetadata(v map[ string ]* string ) * PutObjectInput
SetMetadata sets the Metadata field's value.

func (*PutObjectInput) SetObjectLockLegalHoldStatus    added in  v1.15.83

func (s * PutObjectInput ) SetObjectLockLegalHoldStatus(v string ) * PutObjectInput
SetObjectLockLegalHoldStatus sets the ObjectLockLegalHoldStatus field's value.

func (*PutObjectInput) SetObjectLockMode    added in  v1.15.83

func (s * PutObjectInput ) SetObjectLockMode(v string ) * PutObjectInput
SetObjectLockMode sets the ObjectLockMode field's value.

func (*PutObjectInput) SetObjectLockRetainUntilDate    added in  v1.15.83

func (s * PutObjectInput ) SetObjectLockRetainUntilDate(v time . Time ) * PutObjectInput
SetObjectLockRetainUntilDate sets the ObjectLockRetainUntilDate field's value.

func (*PutObjectInput) SetRequestPayer    added in  v1.5.0

func (s * PutObjectInput ) SetRequestPayer(v string ) * PutObjectInput
SetRequestPayer sets the RequestPayer field's value.

func (*PutObjectInput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * PutObjectInput ) SetSSECustomerAlgorithm(v string ) * PutObjectInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*PutObjectInput) SetSSECustomerKey    added in  v1.5.0

func (s * PutObjectInput ) SetSSECustomerKey(v string ) * PutObjectInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*PutObjectInput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * PutObjectInput ) SetSSECustomerKeyMD5(v string ) * PutObjectInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*PutObjectInput) SetSSEKMSEncryptionContext    added in  v1.20.15

func (s * PutObjectInput ) SetSSEKMSEncryptionContext(v string ) * PutObjectInput
SetSSEKMSEncryptionContext sets the SSEKMSEncryptionContext field's value.

func (*PutObjectInput) SetSSEKMSKeyId    added in  v1.5.0

func (s * PutObjectInput ) SetSSEKMSKeyId(v string ) * PutObjectInput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*PutObjectInput) SetServerSideEncryption    added in  v1.5.0

func (s * PutObjectInput ) SetServerSideEncryption(v string ) * PutObjectInput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (*PutObjectInput) SetStorageClass    added in  v1.5.0

func (s * PutObjectInput ) SetStorageClass(v string ) * PutObjectInput
SetStorageClass sets the StorageClass field's value.

func (*PutObjectInput) SetTagging    added in  v1.5.11

func (s * PutObjectInput ) SetTagging(v string ) * PutObjectInput
SetTagging sets the Tagging field's value.

func (*PutObjectInput) SetWebsiteRedirectLocation    added in  v1.5.0

func (s * PutObjectInput ) SetWebsiteRedirectLocation(v string ) * PutObjectInput
SetWebsiteRedirectLocation sets the WebsiteRedirectLocation field's value.

func (PutObjectInput) String    added in  v0.6.5

func (s PutObjectInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectInput) Validate    added in  v1.1.21

func (s * PutObjectInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutObjectLegalHoldInput    added in  v1.15.83
type PutObjectLegalHoldInput struct {  // The bucket name containing the object that you want to place a legal hold   // on.  //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The key name for the object that you want to place a legal hold on.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Container element for the legal hold configuration you want to apply to the   // specified object. LegalHold * ObjectLockLegalHold `locationName:"LegalHold" type:"structure" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // The version ID of the object that you want to place a legal hold on.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (PutObjectLegalHoldInput) GoString    added in  v1.15.83

func (s PutObjectLegalHoldInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectLegalHoldInput) SetBucket    added in  v1.15.83

func (s * PutObjectLegalHoldInput ) SetBucket(v string ) * PutObjectLegalHoldInput
SetBucket sets the Bucket field's value.

func (*PutObjectLegalHoldInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutObjectLegalHoldInput ) SetChecksumAlgorithm(v string ) * PutObjectLegalHoldInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutObjectLegalHoldInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutObjectLegalHoldInput ) SetExpectedBucketOwner(v string ) * PutObjectLegalHoldInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutObjectLegalHoldInput) SetKey    added in  v1.15.83

func (s * PutObjectLegalHoldInput ) SetKey(v string ) * PutObjectLegalHoldInput
SetKey sets the Key field's value.

func (*PutObjectLegalHoldInput) SetLegalHold    added in  v1.15.83

func (s * PutObjectLegalHoldInput ) SetLegalHold(v * ObjectLockLegalHold ) * PutObjectLegalHoldInput
SetLegalHold sets the LegalHold field's value.

func (*PutObjectLegalHoldInput) SetRequestPayer    added in  v1.15.83

func (s * PutObjectLegalHoldInput ) SetRequestPayer(v string ) * PutObjectLegalHoldInput
SetRequestPayer sets the RequestPayer field's value.

func (*PutObjectLegalHoldInput) SetVersionId    added in  v1.15.83

func (s * PutObjectLegalHoldInput ) SetVersionId(v string ) * PutObjectLegalHoldInput
SetVersionId sets the VersionId field's value.

func (PutObjectLegalHoldInput) String    added in  v1.15.83

func (s PutObjectLegalHoldInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectLegalHoldInput) Validate    added in  v1.15.83

func (s * PutObjectLegalHoldInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutObjectLegalHoldOutput    added in  v1.15.83
type PutObjectLegalHoldOutput struct {  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"` // contains filtered or unexported fields }

func (PutObjectLegalHoldOutput) GoString    added in  v1.15.83

func (s PutObjectLegalHoldOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectLegalHoldOutput) SetRequestCharged    added in  v1.15.83

func (s * PutObjectLegalHoldOutput ) SetRequestCharged(v string ) * PutObjectLegalHoldOutput
SetRequestCharged sets the RequestCharged field's value.

func (PutObjectLegalHoldOutput) String    added in  v1.15.83

func (s PutObjectLegalHoldOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutObjectLockConfigurationInput    added in  v1.15.83
type PutObjectLockConfigurationInput struct {  // The bucket whose Object Lock configuration you want to create or replace.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The Object Lock configuration that you want to apply to the specified bucket.  ObjectLockConfiguration * ObjectLockConfiguration `locationName:"ObjectLockConfiguration" type:"structure" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // A token to allow Object Lock to be enabled for an existing bucket.  Token * string `location:"header" locationName:"x-amz-bucket-object-lock-token" type:"string"` // contains filtered or unexported fields }

func (PutObjectLockConfigurationInput) GoString    added in  v1.15.83

func (s PutObjectLockConfigurationInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectLockConfigurationInput) SetBucket    added in  v1.15.83

func (s * PutObjectLockConfigurationInput ) SetBucket(v string ) * PutObjectLockConfigurationInput
SetBucket sets the Bucket field's value.

func (*PutObjectLockConfigurationInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutObjectLockConfigurationInput ) SetChecksumAlgorithm(v string ) * PutObjectLockConfigurationInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutObjectLockConfigurationInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutObjectLockConfigurationInput ) SetExpectedBucketOwner(v string ) * PutObjectLockConfigurationInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutObjectLockConfigurationInput) SetObjectLockConfiguration    added in  v1.15.83

func (s * PutObjectLockConfigurationInput ) SetObjectLockConfiguration(v * ObjectLockConfiguration ) * PutObjectLockConfigurationInput
SetObjectLockConfiguration sets the ObjectLockConfiguration field's value.

func (*PutObjectLockConfigurationInput) SetRequestPayer    added in  v1.15.83

func (s * PutObjectLockConfigurationInput ) SetRequestPayer(v string ) * PutObjectLockConfigurationInput
SetRequestPayer sets the RequestPayer field's value.

func (*PutObjectLockConfigurationInput) SetToken    added in  v1.15.83

func (s * PutObjectLockConfigurationInput ) SetToken(v string ) * PutObjectLockConfigurationInput
SetToken sets the Token field's value.

func (PutObjectLockConfigurationInput) String    added in  v1.15.83

func (s PutObjectLockConfigurationInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectLockConfigurationInput) Validate    added in  v1.15.83

func (s * PutObjectLockConfigurationInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutObjectLockConfigurationOutput    added in  v1.15.83
type PutObjectLockConfigurationOutput struct {  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"` // contains filtered or unexported fields }

func (PutObjectLockConfigurationOutput) GoString    added in  v1.15.83

func (s PutObjectLockConfigurationOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectLockConfigurationOutput) SetRequestCharged    added in  v1.15.83

func (s * PutObjectLockConfigurationOutput ) SetRequestCharged(v string ) * PutObjectLockConfigurationOutput
SetRequestCharged sets the RequestCharged field's value.

func (PutObjectLockConfigurationOutput) String    added in  v1.15.83

func (s PutObjectLockConfigurationOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutObjectOutput
type PutObjectOutput struct {  // Indicates whether the uploaded object uses an S3 Bucket Key for server-side   // encryption with Key Management Service (KMS) keys (SSE-KMS). BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // The base64-encoded, 32-bit CRC32 checksum of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `location:"header" locationName:"x-amz-checksum-crc32" type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `location:"header" locationName:"x-amz-checksum-crc32c" type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `location:"header" locationName:"x-amz-checksum-sha1" type:"string"`  // The base64-encoded, 256-bit SHA-256 digest of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `location:"header" locationName:"x-amz-checksum-sha256" type:"string"`  // Entity tag for the uploaded object.  ETag * string `location:"header" locationName:"ETag" type:"string"`  // If the expiration is configured for the object (see PutBucketLifecycleConfiguration   // ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html )),  // the response includes this header. It includes the expiry-date and rule-id  // key-value pairs that provide information about object expiration. The value  // of the rule-id is URL-encoded. Expiration * string `location:"header" locationName:"x-amz-expiration" type:"string"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header confirming the encryption algorithm  // used. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header to provide round-trip message integrity  // verification of the customer-provided encryption key. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // If present, specifies the Amazon Web Services KMS Encryption Context to use   // for object encryption. The value of this header is a base64-encoded UTF-8  // string holding JSON with the encryption context key-value pairs. This value  // is stored as object metadata and automatically gets passed on to Amazon Web  // Services KMS for future GetObject or CopyObject operations on this object.  //  // SSEKMSEncryptionContext is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by PutObjectOutput's  // String and GoString methods. SSEKMSEncryptionContext * string `location:"header" locationName:"x-amz-server-side-encryption-context" type:"string" sensitive:"true"`  // If x-amz-server-side-encryption has a valid value of aws:kms or aws:kms:dsse,   // this header specifies the ID of the Key Management Service (KMS) symmetric  // encryption customer managed key that was used for the object.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by PutObjectOutput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms, aws:kms:dsse). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"`  // Version of the object.  VersionId * string `location:"header" locationName:"x-amz-version-id" type:"string"` // contains filtered or unexported fields }

func (PutObjectOutput) GoString    added in  v0.6.5

func (s PutObjectOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectOutput) SetBucketKeyEnabled    added in  v1.35.37

func (s * PutObjectOutput ) SetBucketKeyEnabled(v bool ) * PutObjectOutput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*PutObjectOutput) SetChecksumCRC32    added in  v1.43.6

func (s * PutObjectOutput ) SetChecksumCRC32(v string ) * PutObjectOutput
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*PutObjectOutput) SetChecksumCRC32C    added in  v1.43.6

func (s * PutObjectOutput ) SetChecksumCRC32C(v string ) * PutObjectOutput
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*PutObjectOutput) SetChecksumSHA1    added in  v1.43.6

func (s * PutObjectOutput ) SetChecksumSHA1(v string ) * PutObjectOutput
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*PutObjectOutput) SetChecksumSHA256    added in  v1.43.6

func (s * PutObjectOutput ) SetChecksumSHA256(v string ) * PutObjectOutput
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*PutObjectOutput) SetETag    added in  v1.5.0

func (s * PutObjectOutput ) SetETag(v string ) * PutObjectOutput
SetETag sets the ETag field's value.

func (*PutObjectOutput) SetExpiration    added in  v1.5.0

func (s * PutObjectOutput ) SetExpiration(v string ) * PutObjectOutput
SetExpiration sets the Expiration field's value.

func (*PutObjectOutput) SetRequestCharged    added in  v1.5.0

func (s * PutObjectOutput ) SetRequestCharged(v string ) * PutObjectOutput
SetRequestCharged sets the RequestCharged field's value.

func (*PutObjectOutput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * PutObjectOutput ) SetSSECustomerAlgorithm(v string ) * PutObjectOutput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*PutObjectOutput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * PutObjectOutput ) SetSSECustomerKeyMD5(v string ) * PutObjectOutput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*PutObjectOutput) SetSSEKMSEncryptionContext    added in  v1.20.15

func (s * PutObjectOutput ) SetSSEKMSEncryptionContext(v string ) * PutObjectOutput
SetSSEKMSEncryptionContext sets the SSEKMSEncryptionContext field's value.

func (*PutObjectOutput) SetSSEKMSKeyId    added in  v1.5.0

func (s * PutObjectOutput ) SetSSEKMSKeyId(v string ) * PutObjectOutput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*PutObjectOutput) SetServerSideEncryption    added in  v1.5.0

func (s * PutObjectOutput ) SetServerSideEncryption(v string ) * PutObjectOutput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (*PutObjectOutput) SetVersionId    added in  v1.5.0

func (s * PutObjectOutput ) SetVersionId(v string ) * PutObjectOutput
SetVersionId sets the VersionId field's value.

func (PutObjectOutput) String    added in  v0.6.5

func (s PutObjectOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutObjectRetentionInput    added in  v1.15.83
type PutObjectRetentionInput struct {  // The bucket name that contains the object you want to apply this Object Retention   // configuration to.  //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates whether this action should bypass Governance-mode restrictions.  BypassGovernanceRetention * bool `location:"header" locationName:"x-amz-bypass-governance-retention" type:"boolean"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The key name for the object that you want to apply this Object Retention   // configuration to.  //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // The container element for the Object Retention configuration.  Retention * ObjectLockRetention `locationName:"Retention" type:"structure" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // The version ID for the object that you want to apply this Object Retention   // configuration to. VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (PutObjectRetentionInput) GoString    added in  v1.15.83

func (s PutObjectRetentionInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectRetentionInput) SetBucket    added in  v1.15.83

func (s * PutObjectRetentionInput ) SetBucket(v string ) * PutObjectRetentionInput
SetBucket sets the Bucket field's value.

func (*PutObjectRetentionInput) SetBypassGovernanceRetention    added in  v1.15.83

func (s * PutObjectRetentionInput ) SetBypassGovernanceRetention(v bool ) * PutObjectRetentionInput
SetBypassGovernanceRetention sets the BypassGovernanceRetention field's value.

func (*PutObjectRetentionInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutObjectRetentionInput ) SetChecksumAlgorithm(v string ) * PutObjectRetentionInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutObjectRetentionInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutObjectRetentionInput ) SetExpectedBucketOwner(v string ) * PutObjectRetentionInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutObjectRetentionInput) SetKey    added in  v1.15.83

func (s * PutObjectRetentionInput ) SetKey(v string ) * PutObjectRetentionInput
SetKey sets the Key field's value.

func (*PutObjectRetentionInput) SetRequestPayer    added in  v1.15.83

func (s * PutObjectRetentionInput ) SetRequestPayer(v string ) * PutObjectRetentionInput
SetRequestPayer sets the RequestPayer field's value.

func (*PutObjectRetentionInput) SetRetention    added in  v1.15.83

func (s * PutObjectRetentionInput ) SetRetention(v * ObjectLockRetention ) * PutObjectRetentionInput
SetRetention sets the Retention field's value.

func (*PutObjectRetentionInput) SetVersionId    added in  v1.15.83

func (s * PutObjectRetentionInput ) SetVersionId(v string ) * PutObjectRetentionInput
SetVersionId sets the VersionId field's value.

func (PutObjectRetentionInput) String    added in  v1.15.83

func (s PutObjectRetentionInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectRetentionInput) Validate    added in  v1.15.83

func (s * PutObjectRetentionInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutObjectRetentionOutput    added in  v1.15.83
type PutObjectRetentionOutput struct {  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"` // contains filtered or unexported fields }

func (PutObjectRetentionOutput) GoString    added in  v1.15.83

func (s PutObjectRetentionOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectRetentionOutput) SetRequestCharged    added in  v1.15.83

func (s * PutObjectRetentionOutput ) SetRequestCharged(v string ) * PutObjectRetentionOutput
SetRequestCharged sets the RequestCharged field's value.

func (PutObjectRetentionOutput) String    added in  v1.15.83

func (s PutObjectRetentionOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutObjectTaggingInput    added in  v1.5.11
type PutObjectTaggingInput struct {  // The bucket name containing the object.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Name of the object key.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Container for the TagSet and Tag elements   //  // Tagging is a required field Tagging * Tagging `locationName:"Tagging" type:"structure" required:"true" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // The versionId of the object that the tag-set will be added to.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (PutObjectTaggingInput) GoString    added in  v1.5.11

func (s PutObjectTaggingInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectTaggingInput) SetBucket    added in  v1.5.11

func (s * PutObjectTaggingInput ) SetBucket(v string ) * PutObjectTaggingInput
SetBucket sets the Bucket field's value.

func (*PutObjectTaggingInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutObjectTaggingInput ) SetChecksumAlgorithm(v string ) * PutObjectTaggingInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutObjectTaggingInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutObjectTaggingInput ) SetExpectedBucketOwner(v string ) * PutObjectTaggingInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutObjectTaggingInput) SetKey    added in  v1.5.11

func (s * PutObjectTaggingInput ) SetKey(v string ) * PutObjectTaggingInput
SetKey sets the Key field's value.

func (*PutObjectTaggingInput) SetRequestPayer    added in  v1.37.20

func (s * PutObjectTaggingInput ) SetRequestPayer(v string ) * PutObjectTaggingInput
SetRequestPayer sets the RequestPayer field's value.

func (*PutObjectTaggingInput) SetTagging    added in  v1.5.11

func (s * PutObjectTaggingInput ) SetTagging(v * Tagging ) * PutObjectTaggingInput
SetTagging sets the Tagging field's value.

func (*PutObjectTaggingInput) SetVersionId    added in  v1.5.11

func (s * PutObjectTaggingInput ) SetVersionId(v string ) * PutObjectTaggingInput
SetVersionId sets the VersionId field's value.

func (PutObjectTaggingInput) String    added in  v1.5.11

func (s PutObjectTaggingInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectTaggingInput) Validate    added in  v1.5.11

func (s * PutObjectTaggingInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutObjectTaggingOutput    added in  v1.5.11
type PutObjectTaggingOutput struct {  // The versionId of the object the tag-set was added to.  VersionId * string `location:"header" locationName:"x-amz-version-id" type:"string"` // contains filtered or unexported fields }

func (PutObjectTaggingOutput) GoString    added in  v1.5.11

func (s PutObjectTaggingOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutObjectTaggingOutput) SetVersionId    added in  v1.5.11

func (s * PutObjectTaggingOutput ) SetVersionId(v string ) * PutObjectTaggingOutput
SetVersionId sets the VersionId field's value.

func (PutObjectTaggingOutput) String    added in  v1.5.11

func (s PutObjectTaggingOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type PutPublicAccessBlockInput    added in  v1.15.77
type PutPublicAccessBlockInput struct {  // The name of the Amazon S3 bucket whose PublicAccessBlock configuration you   // want to set.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload.  //  // The SDK will automatically compute the Content-MD5 checksum for this operation.  // The AWS SDK for Go v2 allows you to configure alternative checksum algorithm  // to be used. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The PublicAccessBlock configuration that you want to apply to this Amazon   // S3 bucket. You can enable the configuration options in any combination. For  // more information about when Amazon S3 considers a bucket or object public,  // see The Meaning of "Public" ( https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status )  // in the Amazon S3 User Guide.  //  // PublicAccessBlockConfiguration is a required field PublicAccessBlockConfiguration * PublicAccessBlockConfiguration `` /* 127-byte string literal not displayed */  // contains filtered or unexported fields }

func (PutPublicAccessBlockInput) GoString    added in  v1.15.77

func (s PutPublicAccessBlockInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutPublicAccessBlockInput) SetBucket    added in  v1.15.77

func (s * PutPublicAccessBlockInput ) SetBucket(v string ) * PutPublicAccessBlockInput
SetBucket sets the Bucket field's value.

func (*PutPublicAccessBlockInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * PutPublicAccessBlockInput ) SetChecksumAlgorithm(v string ) * PutPublicAccessBlockInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*PutPublicAccessBlockInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * PutPublicAccessBlockInput ) SetExpectedBucketOwner(v string ) * PutPublicAccessBlockInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*PutPublicAccessBlockInput) SetPublicAccessBlockConfiguration    added in  v1.15.77

func (s * PutPublicAccessBlockInput ) SetPublicAccessBlockConfiguration(v * PublicAccessBlockConfiguration ) * PutPublicAccessBlockInput
SetPublicAccessBlockConfiguration sets the PublicAccessBlockConfiguration field's value.

func (PutPublicAccessBlockInput) String    added in  v1.15.77

func (s PutPublicAccessBlockInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*PutPublicAccessBlockInput) Validate    added in  v1.15.77

func (s * PutPublicAccessBlockInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type PutPublicAccessBlockOutput    added in  v1.15.77
type PutPublicAccessBlockOutput struct { // contains filtered or unexported fields }

func (PutPublicAccessBlockOutput) GoString    added in  v1.15.77

func (s PutPublicAccessBlockOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (PutPublicAccessBlockOutput) String    added in  v1.15.77

func (s PutPublicAccessBlockOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type QueueConfiguration
type QueueConfiguration struct {  // A collection of bucket events for which to send notifications   //  // Events is a required field Events []* string `locationName:"Event" type:"list" flattened:"true" required:"true" enum:"Event"`  // Specifies object key name filtering rules. For information about key name   // filtering, see Configuring event notifications using object key name filtering  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html )  // in the Amazon S3 User Guide. Filter * NotificationConfigurationFilter `type:"structure"`  // An optional unique identifier for configurations in a notification configuration.   // If you don't provide one, Amazon S3 will assign an ID. Id * string `type:"string"`  // The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3   // publishes a message when it detects events of the specified type.  //  // QueueArn is a required field QueueArn * string `locationName:"Queue" type:"string" required:"true"` // contains filtered or unexported fields }
Specifies the configuration for publishing messages to an Amazon Simple Queue
Service (Amazon SQS) queue when Amazon S3 detects specified events.

func (QueueConfiguration) GoString    added in  v0.6.5

func (s QueueConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*QueueConfiguration) SetEvents    added in  v1.5.0

func (s * QueueConfiguration ) SetEvents(v []* string ) * QueueConfiguration
SetEvents sets the Events field's value.

func (*QueueConfiguration) SetFilter    added in  v1.5.0

func (s * QueueConfiguration ) SetFilter(v * NotificationConfigurationFilter ) * QueueConfiguration
SetFilter sets the Filter field's value.

func (*QueueConfiguration) SetId    added in  v1.5.0

func (s * QueueConfiguration ) SetId(v string ) * QueueConfiguration
SetId sets the Id field's value.

func (*QueueConfiguration) SetQueueArn    added in  v1.5.0

func (s * QueueConfiguration ) SetQueueArn(v string ) * QueueConfiguration
SetQueueArn sets the QueueArn field's value.

func (QueueConfiguration) String    added in  v0.6.5

func (s QueueConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*QueueConfiguration) Validate    added in  v1.1.21

func (s * QueueConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type QueueConfigurationDeprecated
type QueueConfigurationDeprecated struct {  // The bucket event for which to send notifications.   //  // Deprecated: Event has been deprecated Event * string `deprecated:"true" type:"string" enum:"Event"`  // A collection of bucket events for which to send notifications.  Events []* string `locationName:"Event" type:"list" flattened:"true" enum:"Event"`  // An optional unique identifier for configurations in a notification configuration.   // If you don't provide one, Amazon S3 will assign an ID. Id * string `type:"string"`  // The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3   // publishes a message when it detects events of the specified type. Queue * string `type:"string"` // contains filtered or unexported fields }
This data type is deprecated. Use QueueConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_QueueConfiguration.html )
for the same purposes. This data type specifies the configuration for publishing
messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon
S3 detects specified events.

func (QueueConfigurationDeprecated) GoString    added in  v0.6.5

func (s QueueConfigurationDeprecated ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*QueueConfigurationDeprecated) SetEvent    added in  v1.5.0

func (s * QueueConfigurationDeprecated ) SetEvent(v string ) * QueueConfigurationDeprecated
SetEvent sets the Event field's value.

func (*QueueConfigurationDeprecated) SetEvents    added in  v1.5.0

func (s * QueueConfigurationDeprecated ) SetEvents(v []* string ) * QueueConfigurationDeprecated
SetEvents sets the Events field's value.

func (*QueueConfigurationDeprecated) SetId    added in  v1.5.0

func (s * QueueConfigurationDeprecated ) SetId(v string ) * QueueConfigurationDeprecated
SetId sets the Id field's value.

func (*QueueConfigurationDeprecated) SetQueue    added in  v1.5.0

func (s * QueueConfigurationDeprecated ) SetQueue(v string ) * QueueConfigurationDeprecated
SetQueue sets the Queue field's value.

func (QueueConfigurationDeprecated) String    added in  v0.6.5

func (s QueueConfigurationDeprecated ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type RecordsEvent    added in  v1.14.0
type RecordsEvent struct {  // The byte array of partial, one or more result records.   // Payload is automatically base64 encoded/decoded by the SDK. Payload [] byte `type:"blob"` // contains filtered or unexported fields }
The container for the records event.

func (RecordsEvent) GoString    added in  v1.14.0

func (s RecordsEvent ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RecordsEvent) MarshalEvent    added in  v1.27.0

func (s * RecordsEvent ) MarshalEvent(pm protocol . PayloadMarshaler ) (msg eventstream . Message , err error )
MarshalEvent marshals the type into an stream event value. This method
should only used internally within the SDK's EventStream handling.

func (*RecordsEvent) SetPayload    added in  v1.14.0

func (s * RecordsEvent ) SetPayload(v [] byte ) * RecordsEvent
SetPayload sets the Payload field's value.

func (RecordsEvent) String    added in  v1.14.0

func (s RecordsEvent ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RecordsEvent) UnmarshalEvent    added in  v1.14.0

func (s * RecordsEvent ) UnmarshalEvent(
payloadUnmarshaler protocol . PayloadUnmarshaler ,
msg eventstream . Message ,
) error
UnmarshalEvent unmarshals the EventStream Message into the RecordsEvent value.
This method is only used internally within the SDK's EventStream handling.
type Redirect
type Redirect struct {  // The host name to use in the redirect request.  HostName * string `type:"string"`  // The HTTP redirect code to use on the response. Not required if one of the   // siblings is present. HttpRedirectCode * string `type:"string"`  // Protocol to use when redirecting requests. The default is the protocol that   // is used in the original request. Protocol * string `type:"string" enum:"Protocol"`  // The object key prefix to use in the redirect request. For example, to redirect   // requests for all pages with prefix docs/ (objects in the docs/ folder) to  // documents/, you can set a condition block with KeyPrefixEquals set to docs/  // and in the Redirect set ReplaceKeyPrefixWith to /documents. Not required  // if one of the siblings is present. Can be present only if ReplaceKeyWith  // is not provided.  //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ). ReplaceKeyPrefixWith * string `type:"string"`  // The specific object key to use in the redirect request. For example, redirect   // request to error.html. Not required if one of the siblings is present. Can  // be present only if ReplaceKeyPrefixWith is not provided.  //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ). ReplaceKeyWith * string `type:"string"` // contains filtered or unexported fields }
Specifies how requests are redirected. In the event of an error, you can
specify a different error code to return.

func (Redirect) GoString    added in  v0.6.5

func (s Redirect ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Redirect) SetHostName    added in  v1.5.0

func (s * Redirect ) SetHostName(v string ) * Redirect
SetHostName sets the HostName field's value.

func (*Redirect) SetHttpRedirectCode    added in  v1.5.0

func (s * Redirect ) SetHttpRedirectCode(v string ) * Redirect
SetHttpRedirectCode sets the HttpRedirectCode field's value.

func (*Redirect) SetProtocol    added in  v1.5.0

func (s * Redirect ) SetProtocol(v string ) * Redirect
SetProtocol sets the Protocol field's value.

func (*Redirect) SetReplaceKeyPrefixWith    added in  v1.5.0

func (s * Redirect ) SetReplaceKeyPrefixWith(v string ) * Redirect
SetReplaceKeyPrefixWith sets the ReplaceKeyPrefixWith field's value.

func (*Redirect) SetReplaceKeyWith    added in  v1.5.0

func (s * Redirect ) SetReplaceKeyWith(v string ) * Redirect
SetReplaceKeyWith sets the ReplaceKeyWith field's value.

func (Redirect) String    added in  v0.6.5

func (s Redirect ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type RedirectAllRequestsTo
type RedirectAllRequestsTo struct {  // Name of the host where requests are redirected.   //  // HostName is a required field HostName * string `type:"string" required:"true"`  // Protocol to use when redirecting requests. The default is the protocol that   // is used in the original request. Protocol * string `type:"string" enum:"Protocol"` // contains filtered or unexported fields }
Specifies the redirect behavior of all requests to a website endpoint of
an Amazon S3 bucket.

func (RedirectAllRequestsTo) GoString    added in  v0.6.5

func (s RedirectAllRequestsTo ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RedirectAllRequestsTo) SetHostName    added in  v1.5.0

func (s * RedirectAllRequestsTo ) SetHostName(v string ) * RedirectAllRequestsTo
SetHostName sets the HostName field's value.

func (*RedirectAllRequestsTo) SetProtocol    added in  v1.5.0

func (s * RedirectAllRequestsTo ) SetProtocol(v string ) * RedirectAllRequestsTo
SetProtocol sets the Protocol field's value.

func (RedirectAllRequestsTo) String    added in  v0.6.5

func (s RedirectAllRequestsTo ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RedirectAllRequestsTo) Validate    added in  v1.1.21

func (s * RedirectAllRequestsTo ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ReplicaModifications    added in  v1.35.37
type ReplicaModifications struct {  // Specifies whether Amazon S3 replicates modifications on replicas.   //  // Status is a required field Status * string `type:"string" required:"true" enum:"ReplicaModificationsStatus"` // contains filtered or unexported fields }
A filter that you can specify for selection for modifications on replicas.
Amazon S3 doesn't replicate replica modifications by default. In the latest
version of replication configuration (when Filter is specified), you can
specify this element and set the status to Enabled to replicate modifications
on replicas.
If you don't specify the Filter element, Amazon S3 assumes that the replication
configuration is the earlier version, V1. In the earlier version, this element
is not allowed.

func (ReplicaModifications) GoString    added in  v1.35.37

func (s ReplicaModifications ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicaModifications) SetStatus    added in  v1.35.37

func (s * ReplicaModifications ) SetStatus(v string ) * ReplicaModifications
SetStatus sets the Status field's value.

func (ReplicaModifications) String    added in  v1.35.37

func (s ReplicaModifications ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicaModifications) Validate    added in  v1.35.37

func (s * ReplicaModifications ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ReplicationConfiguration
type ReplicationConfiguration struct {  // The Amazon Resource Name (ARN) of the Identity and Access Management (IAM)   // role that Amazon S3 assumes when replicating objects. For more information,  // see How to Set Up Replication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html )  // in the Amazon S3 User Guide.  //  // Role is a required field Role * string `type:"string" required:"true"`  // A container for one or more replication rules. A replication configuration   // must have at least one rule and can contain a maximum of 1,000 rules.  //  // Rules is a required field Rules []* ReplicationRule `locationName:"Rule" type:"list" flattened:"true" required:"true"` // contains filtered or unexported fields }
A container for replication rules. You can add up to 1,000 rules. The maximum
size of a replication configuration is 2 MB.

func (ReplicationConfiguration) GoString    added in  v0.6.5

func (s ReplicationConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationConfiguration) SetRole    added in  v1.5.0

func (s * ReplicationConfiguration ) SetRole(v string ) * ReplicationConfiguration
SetRole sets the Role field's value.

func (*ReplicationConfiguration) SetRules    added in  v1.5.0

func (s * ReplicationConfiguration ) SetRules(v []* ReplicationRule ) * ReplicationConfiguration
SetRules sets the Rules field's value.

func (ReplicationConfiguration) String    added in  v0.6.5

func (s ReplicationConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationConfiguration) Validate    added in  v1.1.21

func (s * ReplicationConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ReplicationRule
type ReplicationRule struct {  // Specifies whether Amazon S3 replicates delete markers. If you specify a Filter   // in your replication configuration, you must also include a DeleteMarkerReplication  // element. If your Filter includes a Tag element, the DeleteMarkerReplication  // Status must be set to Disabled, because Amazon S3 does not support replicating  // delete markers for tag-based rules. For an example configuration, see Basic  // Rule Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config ).  //  // For more information about delete marker replication, see Basic Rule Configuration  // ( https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html ).  //  // If you are using an earlier version of the replication configuration, Amazon  // S3 handles replication of delete markers differently. For more information,  // see Backward Compatibility ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations ). DeleteMarkerReplication * DeleteMarkerReplication `type:"structure"`  // A container for information about the replication destination and its configurations   // including enabling the S3 Replication Time Control (S3 RTC).  //  // Destination is a required field Destination * Destination `type:"structure" required:"true"`  // Optional configuration to replicate existing source bucket objects. For more   // information, see Replicating Existing Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-what-is-isnot-replicated.html#existing-object-replication )  // in the Amazon S3 User Guide. ExistingObjectReplication * ExistingObjectReplication `type:"structure"`  // A filter that identifies the subset of objects to which the replication rule   // applies. A Filter must specify exactly one Prefix, Tag, or an And child element. Filter * ReplicationRuleFilter `type:"structure"`  // A unique identifier for the rule. The maximum value is 255 characters.  ID * string `type:"string"`  // An object key name prefix that identifies the object or objects to which   // the rule applies. The maximum prefix length is 1,024 characters. To include  // all objects in a bucket, specify an empty string.  //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ).  //  // Deprecated: Prefix has been deprecated Prefix * string `deprecated:"true" type:"string"`  // The priority indicates which rule has precedence whenever two or more replication   // rules conflict. Amazon S3 will attempt to replicate objects according to  // all replication rules. However, if there are two or more rules with the same  // destination bucket, then objects will be replicated according to the rule  // with the highest priority. The higher the number, the higher the priority.  //  // For more information, see Replication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html )  // in the Amazon S3 User Guide. Priority * int64 `type:"integer"`  // A container that describes additional filters for identifying the source   // objects that you want to replicate. You can choose to enable or disable the  // replication of these objects. Currently, Amazon S3 supports only the filter  // that you can specify for objects created with server-side encryption using  // a customer managed key stored in Amazon Web Services Key Management Service  // (SSE-KMS). SourceSelectionCriteria * SourceSelectionCriteria `type:"structure"`  // Specifies whether the rule is enabled.   //  // Status is a required field Status * string `type:"string" required:"true" enum:"ReplicationRuleStatus"` // contains filtered or unexported fields }
Specifies which Amazon S3 objects to replicate and where to store the replicas.

func (ReplicationRule) GoString    added in  v0.6.5

func (s ReplicationRule ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationRule) SetDeleteMarkerReplication    added in  v1.15.38

func (s * ReplicationRule ) SetDeleteMarkerReplication(v * DeleteMarkerReplication ) * ReplicationRule
SetDeleteMarkerReplication sets the DeleteMarkerReplication field's value.

func (*ReplicationRule) SetDestination    added in  v1.5.0

func (s * ReplicationRule ) SetDestination(v * Destination ) * ReplicationRule
SetDestination sets the Destination field's value.

func (*ReplicationRule) SetExistingObjectReplication    added in  v1.25.37

func (s * ReplicationRule ) SetExistingObjectReplication(v * ExistingObjectReplication ) * ReplicationRule
SetExistingObjectReplication sets the ExistingObjectReplication field's value.

func (*ReplicationRule) SetFilter    added in  v1.15.38

func (s * ReplicationRule ) SetFilter(v * ReplicationRuleFilter ) * ReplicationRule
SetFilter sets the Filter field's value.

func (*ReplicationRule) SetID    added in  v1.5.0

func (s * ReplicationRule ) SetID(v string ) * ReplicationRule
SetID sets the ID field's value.

func (*ReplicationRule) SetPrefix    added in  v1.5.0

func (s * ReplicationRule ) SetPrefix(v string ) * ReplicationRule
SetPrefix sets the Prefix field's value.

func (*ReplicationRule) SetPriority    added in  v1.15.38

func (s * ReplicationRule ) SetPriority(v int64 ) * ReplicationRule
SetPriority sets the Priority field's value.

func (*ReplicationRule) SetSourceSelectionCriteria    added in  v1.12.24

func (s * ReplicationRule ) SetSourceSelectionCriteria(v * SourceSelectionCriteria ) * ReplicationRule
SetSourceSelectionCriteria sets the SourceSelectionCriteria field's value.

func (*ReplicationRule) SetStatus    added in  v1.5.0

func (s * ReplicationRule ) SetStatus(v string ) * ReplicationRule
SetStatus sets the Status field's value.

func (ReplicationRule) String    added in  v0.6.5

func (s ReplicationRule ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationRule) Validate    added in  v1.1.21

func (s * ReplicationRule ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ReplicationRuleAndOperator    added in  v1.15.38
type ReplicationRuleAndOperator struct {  // An object key name prefix that identifies the subset of objects to which   // the rule applies. Prefix * string `type:"string"`  // An array of tags containing key and value pairs.  Tags []* Tag `locationName:"Tag" locationNameList:"Tag" type:"list" flattened:"true"` // contains filtered or unexported fields }
A container for specifying rule filters. The filters determine the subset
of objects to which the rule applies. This element is required only if you
specify more than one filter.
For example:
If you specify both a Prefix and a Tag filter, wrap these filters in
an And tag.
If you specify a filter based on multiple tags, wrap the Tag elements
in an And tag.

func (ReplicationRuleAndOperator) GoString    added in  v1.15.38

func (s ReplicationRuleAndOperator ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationRuleAndOperator) SetPrefix    added in  v1.15.38

func (s * ReplicationRuleAndOperator ) SetPrefix(v string ) * ReplicationRuleAndOperator
SetPrefix sets the Prefix field's value.

func (*ReplicationRuleAndOperator) SetTags    added in  v1.15.38

func (s * ReplicationRuleAndOperator ) SetTags(v []* Tag ) * ReplicationRuleAndOperator
SetTags sets the Tags field's value.

func (ReplicationRuleAndOperator) String    added in  v1.15.38

func (s ReplicationRuleAndOperator ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationRuleAndOperator) Validate    added in  v1.15.38

func (s * ReplicationRuleAndOperator ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ReplicationRuleFilter    added in  v1.15.38
type ReplicationRuleFilter struct {  // A container for specifying rule filters. The filters determine the subset   // of objects to which the rule applies. This element is required only if you  // specify more than one filter. For example:  //  //    * If you specify both a Prefix and a Tag filter, wrap these filters in  //    an And tag.  //  //    * If you specify a filter based on multiple tags, wrap the Tag elements  //    in an And tag. And * ReplicationRuleAndOperator `type:"structure"`  // An object key name prefix that identifies the subset of objects to which   // the rule applies.  //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ). Prefix * string `type:"string"`  // A container for specifying a tag key and value.   //  // The rule applies only to objects that have the tag in their tag set. Tag * Tag `type:"structure"` // contains filtered or unexported fields }
A filter that identifies the subset of objects to which the replication rule
applies. A Filter must specify exactly one Prefix, Tag, or an And child element.

func (ReplicationRuleFilter) GoString    added in  v1.15.38

func (s ReplicationRuleFilter ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationRuleFilter) SetAnd    added in  v1.15.38

func (s * ReplicationRuleFilter ) SetAnd(v * ReplicationRuleAndOperator ) * ReplicationRuleFilter
SetAnd sets the And field's value.

func (*ReplicationRuleFilter) SetPrefix    added in  v1.15.38

func (s * ReplicationRuleFilter ) SetPrefix(v string ) * ReplicationRuleFilter
SetPrefix sets the Prefix field's value.

func (*ReplicationRuleFilter) SetTag    added in  v1.15.38

func (s * ReplicationRuleFilter ) SetTag(v * Tag ) * ReplicationRuleFilter
SetTag sets the Tag field's value.

func (ReplicationRuleFilter) String    added in  v1.15.38

func (s ReplicationRuleFilter ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationRuleFilter) Validate    added in  v1.15.38

func (s * ReplicationRuleFilter ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ReplicationTime    added in  v1.25.39
type ReplicationTime struct {  // Specifies whether the replication time is enabled.   //  // Status is a required field Status * string `type:"string" required:"true" enum:"ReplicationTimeStatus"`  // A container specifying the time by which replication should be complete for   // all objects and operations on objects.  //  // Time is a required field Time * ReplicationTimeValue `type:"structure" required:"true"` // contains filtered or unexported fields }
A container specifying S3 Replication Time Control (S3 RTC) related information,
including whether S3 RTC is enabled and the time when all objects and operations
on objects must be replicated. Must be specified together with a Metrics
block.

func (ReplicationTime) GoString    added in  v1.25.39

func (s ReplicationTime ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationTime) SetStatus    added in  v1.25.39

func (s * ReplicationTime ) SetStatus(v string ) * ReplicationTime
SetStatus sets the Status field's value.

func (*ReplicationTime) SetTime    added in  v1.25.39

func (s * ReplicationTime ) SetTime(v * ReplicationTimeValue ) * ReplicationTime
SetTime sets the Time field's value.

func (ReplicationTime) String    added in  v1.25.39

func (s ReplicationTime ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationTime) Validate    added in  v1.25.39

func (s * ReplicationTime ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ReplicationTimeValue    added in  v1.25.39
type ReplicationTimeValue struct {  // Contains an integer specifying time in minutes.   //  // Valid value: 15 Minutes * int64 `type:"integer"` // contains filtered or unexported fields }
A container specifying the time value for S3 Replication Time Control (S3
RTC) and replication metrics EventThreshold.

func (ReplicationTimeValue) GoString    added in  v1.25.39

func (s ReplicationTimeValue ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ReplicationTimeValue) SetMinutes    added in  v1.25.39

func (s * ReplicationTimeValue ) SetMinutes(v int64 ) * ReplicationTimeValue
SetMinutes sets the Minutes field's value.

func (ReplicationTimeValue) String    added in  v1.25.39

func (s ReplicationTimeValue ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type RequestFailure    added in  v1.8.0
type RequestFailure interface { awserr . RequestFailure   // Host ID is the S3 Host ID needed for debug, and contacting support  HostID() string }
A RequestFailure provides access to the S3 Request ID and Host ID values
returned from API operation errors. Getting the error as a string will
return the formated error with the same information as awserr.RequestFailure,
while also adding the HostID value from the response.
type RequestPaymentConfiguration
type RequestPaymentConfiguration struct {  // Specifies who pays for the download and request fees.   //  // Payer is a required field Payer * string `type:"string" required:"true" enum:"Payer"` // contains filtered or unexported fields }
Container for Payer.

func (RequestPaymentConfiguration) GoString    added in  v0.6.5

func (s RequestPaymentConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RequestPaymentConfiguration) SetPayer    added in  v1.5.0

func (s * RequestPaymentConfiguration ) SetPayer(v string ) * RequestPaymentConfiguration
SetPayer sets the Payer field's value.

func (RequestPaymentConfiguration) String    added in  v0.6.5

func (s RequestPaymentConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RequestPaymentConfiguration) Validate    added in  v1.1.21

func (s * RequestPaymentConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type RequestProgress    added in  v1.14.0
type RequestProgress struct {  // Specifies whether periodic QueryProgress frames should be sent. Valid values:   // TRUE, FALSE. Default value: FALSE. Enabled * bool `type:"boolean"` // contains filtered or unexported fields }
Container for specifying if periodic QueryProgress messages should be sent.

func (RequestProgress) GoString    added in  v1.14.0

func (s RequestProgress ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RequestProgress) SetEnabled    added in  v1.14.0

func (s * RequestProgress ) SetEnabled(v bool ) * RequestProgress
SetEnabled sets the Enabled field's value.

func (RequestProgress) String    added in  v1.14.0

func (s RequestProgress ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type RestoreObjectInput
type RestoreObjectInput struct {  // The bucket name containing the object to restore.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Object key for which the action was initiated.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Container for restore job parameters.  RestoreRequest * RestoreRequest `locationName:"RestoreRequest" type:"structure" xmlURI:"http://s3.amazonaws.com/doc/2006-03-01/"`  // VersionId used to reference a specific version of the object.  VersionId * string `location:"querystring" locationName:"versionId" type:"string"` // contains filtered or unexported fields }

func (RestoreObjectInput) GoString    added in  v0.6.5

func (s RestoreObjectInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RestoreObjectInput) SetBucket    added in  v1.5.0

func (s * RestoreObjectInput ) SetBucket(v string ) * RestoreObjectInput
SetBucket sets the Bucket field's value.

func (*RestoreObjectInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * RestoreObjectInput ) SetChecksumAlgorithm(v string ) * RestoreObjectInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*RestoreObjectInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * RestoreObjectInput ) SetExpectedBucketOwner(v string ) * RestoreObjectInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*RestoreObjectInput) SetKey    added in  v1.5.0

func (s * RestoreObjectInput ) SetKey(v string ) * RestoreObjectInput
SetKey sets the Key field's value.

func (*RestoreObjectInput) SetRequestPayer    added in  v1.5.0

func (s * RestoreObjectInput ) SetRequestPayer(v string ) * RestoreObjectInput
SetRequestPayer sets the RequestPayer field's value.

func (*RestoreObjectInput) SetRestoreRequest    added in  v1.5.0

func (s * RestoreObjectInput ) SetRestoreRequest(v * RestoreRequest ) * RestoreObjectInput
SetRestoreRequest sets the RestoreRequest field's value.

func (*RestoreObjectInput) SetVersionId    added in  v1.5.0

func (s * RestoreObjectInput ) SetVersionId(v string ) * RestoreObjectInput
SetVersionId sets the VersionId field's value.

func (RestoreObjectInput) String    added in  v0.6.5

func (s RestoreObjectInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RestoreObjectInput) Validate    added in  v1.1.21

func (s * RestoreObjectInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type RestoreObjectOutput
type RestoreObjectOutput struct {  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // Indicates the path in the provided S3 output location where Select results   // will be restored to. RestoreOutputPath * string `location:"header" locationName:"x-amz-restore-output-path" type:"string"` // contains filtered or unexported fields }

func (RestoreObjectOutput) GoString    added in  v0.6.5

func (s RestoreObjectOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RestoreObjectOutput) SetRequestCharged    added in  v1.5.0

func (s * RestoreObjectOutput ) SetRequestCharged(v string ) * RestoreObjectOutput
SetRequestCharged sets the RequestCharged field's value.

func (*RestoreObjectOutput) SetRestoreOutputPath    added in  v1.12.36

func (s * RestoreObjectOutput ) SetRestoreOutputPath(v string ) * RestoreObjectOutput
SetRestoreOutputPath sets the RestoreOutputPath field's value.

func (RestoreObjectOutput) String    added in  v0.6.5

func (s RestoreObjectOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type RestoreRequest
type RestoreRequest struct {  // Lifetime of the active copy in days. Do not use with restores that specify   // OutputLocation.  //  // The Days element is required for regular restores, and must not be provided  // for select requests. Days * int64 `type:"integer"`  // The optional description for the job.  Description * string `type:"string"`  // S3 Glacier related parameters pertaining to this job. Do not use with restores   // that specify OutputLocation. GlacierJobParameters * GlacierJobParameters `type:"structure"`  // Describes the location where the restore job's output is stored.  OutputLocation * OutputLocation `type:"structure"`  // Describes the parameters for Select job types.  SelectParameters * SelectParameters `type:"structure"`  // Retrieval tier at which the restore will be processed.  Tier * string `type:"string" enum:"Tier"`  // Type of restore request.  Type * string `type:"string" enum:"RestoreRequestType"` // contains filtered or unexported fields }
Container for restore job parameters.

func (RestoreRequest) GoString    added in  v0.6.5

func (s RestoreRequest ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RestoreRequest) SetDays    added in  v1.5.0

func (s * RestoreRequest ) SetDays(v int64 ) * RestoreRequest
SetDays sets the Days field's value.

func (*RestoreRequest) SetDescription    added in  v1.12.36

func (s * RestoreRequest ) SetDescription(v string ) * RestoreRequest
SetDescription sets the Description field's value.

func (*RestoreRequest) SetGlacierJobParameters    added in  v1.5.10

func (s * RestoreRequest ) SetGlacierJobParameters(v * GlacierJobParameters ) * RestoreRequest
SetGlacierJobParameters sets the GlacierJobParameters field's value.

func (*RestoreRequest) SetOutputLocation    added in  v1.12.36

func (s * RestoreRequest ) SetOutputLocation(v * OutputLocation ) * RestoreRequest
SetOutputLocation sets the OutputLocation field's value.

func (*RestoreRequest) SetSelectParameters    added in  v1.12.36

func (s * RestoreRequest ) SetSelectParameters(v * SelectParameters ) * RestoreRequest
SetSelectParameters sets the SelectParameters field's value.

func (*RestoreRequest) SetTier    added in  v1.12.36

func (s * RestoreRequest ) SetTier(v string ) * RestoreRequest
SetTier sets the Tier field's value.

func (*RestoreRequest) SetType    added in  v1.12.36

func (s * RestoreRequest ) SetType(v string ) * RestoreRequest
SetType sets the Type field's value.

func (RestoreRequest) String    added in  v0.6.5

func (s RestoreRequest ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RestoreRequest) Validate    added in  v1.1.21

func (s * RestoreRequest ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type RestoreStatus    added in  v1.44.292
type RestoreStatus struct {  // Specifies whether the object is currently being restored. If the object restoration   // is in progress, the header returns the value TRUE. For example:  //  // x-amz-optional-object-attributes: IsRestoreInProgress="true"  //  // If the object restoration has completed, the header returns the value FALSE.  // For example:  //  // x-amz-optional-object-attributes: IsRestoreInProgress="false", RestoreExpiryDate="2012-12-21T00:00:00.000Z"  //  // If the object hasn't been restored, there is no header response. IsRestoreInProgress * bool `type:"boolean"`  // Indicates when the restored copy will expire. This value is populated only   // if the object has already been restored. For example:  //  // x-amz-optional-object-attributes: IsRestoreInProgress="false", RestoreExpiryDate="2012-12-21T00:00:00.000Z" RestoreExpiryDate * time . Time `type:"timestamp"` // contains filtered or unexported fields }
Specifies the restoration status of an object. Objects in certain storage
classes must be restored before they can be retrieved. For more information
about these storage classes and how to work with archived objects, see Working
with archived objects ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/archived-objects.html )
in the Amazon S3 User Guide.

func (RestoreStatus) GoString    added in  v1.44.292

func (s RestoreStatus ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RestoreStatus) SetIsRestoreInProgress    added in  v1.44.292

func (s * RestoreStatus ) SetIsRestoreInProgress(v bool ) * RestoreStatus
SetIsRestoreInProgress sets the IsRestoreInProgress field's value.

func (*RestoreStatus) SetRestoreExpiryDate    added in  v1.44.292

func (s * RestoreStatus ) SetRestoreExpiryDate(v time . Time ) * RestoreStatus
SetRestoreExpiryDate sets the RestoreExpiryDate field's value.

func (RestoreStatus) String    added in  v1.44.292

func (s RestoreStatus ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type RoutingRule
type RoutingRule struct {  // A container for describing a condition that must be met for the specified   // redirect to apply. For example, 1. If request is for pages in the /docs folder,  // redirect to the /documents folder. 2. If request results in HTTP error 4xx,  // redirect request to another host where you might process the error. Condition * Condition `type:"structure"`  // Container for redirect information. You can redirect requests to another   // host, to another page, or with another protocol. In the event of an error,  // you can specify a different error code to return.  //  // Redirect is a required field Redirect * Redirect `type:"structure" required:"true"` // contains filtered or unexported fields }
Specifies the redirect behavior and when a redirect is applied. For more
information about routing rules, see Configuring advanced conditional redirects
( https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects )
in the Amazon S3 User Guide.

func (RoutingRule) GoString    added in  v0.6.5

func (s RoutingRule ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RoutingRule) SetCondition    added in  v1.5.0

func (s * RoutingRule ) SetCondition(v * Condition ) * RoutingRule
SetCondition sets the Condition field's value.

func (*RoutingRule) SetRedirect    added in  v1.5.0

func (s * RoutingRule ) SetRedirect(v * Redirect ) * RoutingRule
SetRedirect sets the Redirect field's value.

func (RoutingRule) String    added in  v0.6.5

func (s RoutingRule ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*RoutingRule) Validate    added in  v1.1.21

func (s * RoutingRule ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type Rule    added in  v0.9.8
type Rule struct {  // Specifies the days since the initiation of an incomplete multipart upload   // that Amazon S3 will wait before permanently removing all parts of the upload.  // For more information, see Aborting Incomplete Multipart Uploads Using a Bucket  // Lifecycle Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config )  // in the Amazon S3 User Guide. AbortIncompleteMultipartUpload * AbortIncompleteMultipartUpload `type:"structure"`  // Specifies the expiration for the lifecycle of the object.  Expiration * LifecycleExpiration `type:"structure"`  // Unique identifier for the rule. The value can't be longer than 255 characters.  ID * string `type:"string"`  // Specifies when noncurrent object versions expire. Upon expiration, Amazon   // S3 permanently deletes the noncurrent object versions. You set this lifecycle  // configuration action on a bucket that has versioning enabled (or suspended)  // to request that Amazon S3 delete noncurrent object versions at a specific  // period in the object's lifetime. NoncurrentVersionExpiration * NoncurrentVersionExpiration `type:"structure"`  // Container for the transition rule that describes when noncurrent objects   // transition to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER_IR,  // GLACIER, or DEEP_ARCHIVE storage class. If your bucket is versioning-enabled  // (or versioning is suspended), you can set this action to request that Amazon  // S3 transition noncurrent object versions to the STANDARD_IA, ONEZONE_IA,  // INTELLIGENT_TIERING, GLACIER_IR, GLACIER, or DEEP_ARCHIVE storage class at  // a specific period in the object's lifetime. NoncurrentVersionTransition * NoncurrentVersionTransition `type:"structure"`  // Object key prefix that identifies one or more objects to which this rule   // applies.  //  // Replacement must be made for object keys containing special characters (such  // as carriage returns) when using XML requests. For more information, see XML  // related object key constraints ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints ).  //  // Prefix is a required field Prefix * string `type:"string" required:"true"`  // If Enabled, the rule is currently being applied. If Disabled, the rule is   // not currently being applied.  //  // Status is a required field Status * string `type:"string" required:"true" enum:"ExpirationStatus"`  // Specifies when an object transitions to a specified storage class. For more   // information about Amazon S3 lifecycle configuration rules, see Transitioning  // Objects Using Amazon S3 Lifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html )  // in the Amazon S3 User Guide. Transition * Transition `type:"structure"` // contains filtered or unexported fields }
Specifies lifecycle rules for an Amazon S3 bucket. For more information,
see Put Bucket Lifecycle Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html )
in the Amazon S3 API Reference. For examples, see Put Bucket Lifecycle Configuration
Examples ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html#API_PutBucketLifecycleConfiguration_Examples ).

func (Rule) GoString    added in  v0.9.8

func (s Rule ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Rule) SetAbortIncompleteMultipartUpload    added in  v1.5.0

func (s * Rule ) SetAbortIncompleteMultipartUpload(v * AbortIncompleteMultipartUpload ) * Rule
SetAbortIncompleteMultipartUpload sets the AbortIncompleteMultipartUpload field's value.

func (*Rule) SetExpiration    added in  v1.5.0

func (s * Rule ) SetExpiration(v * LifecycleExpiration ) * Rule
SetExpiration sets the Expiration field's value.

func (*Rule) SetID    added in  v1.5.0

func (s * Rule ) SetID(v string ) * Rule
SetID sets the ID field's value.

func (*Rule) SetNoncurrentVersionExpiration    added in  v1.5.0

func (s * Rule ) SetNoncurrentVersionExpiration(v * NoncurrentVersionExpiration ) * Rule
SetNoncurrentVersionExpiration sets the NoncurrentVersionExpiration field's value.

func (*Rule) SetNoncurrentVersionTransition    added in  v1.5.0

func (s * Rule ) SetNoncurrentVersionTransition(v * NoncurrentVersionTransition ) * Rule
SetNoncurrentVersionTransition sets the NoncurrentVersionTransition field's value.

func (*Rule) SetPrefix    added in  v1.5.0

func (s * Rule ) SetPrefix(v string ) * Rule
SetPrefix sets the Prefix field's value.

func (*Rule) SetStatus    added in  v1.5.0

func (s * Rule ) SetStatus(v string ) * Rule
SetStatus sets the Status field's value.

func (*Rule) SetTransition    added in  v1.5.0

func (s * Rule ) SetTransition(v * Transition ) * Rule
SetTransition sets the Transition field's value.

func (Rule) String    added in  v0.9.8

func (s Rule ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Rule) Validate    added in  v1.1.21

func (s * Rule ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type S3
type S3 struct { * client . Client  }
S3 provides the API operation methods for making requests to
Amazon Simple Storage Service. See this package's package overview docs
for details on the service.
S3 methods are safe to use concurrently. It is not safe to
modify mutate any of the struct's properties though.

func New

func New(p client . ConfigProvider , cfgs ...* aws . Config ) * S3
New creates a new instance of the S3 client with a session.
If additional configuration is needed for the client instance use the optional
aws.Config parameter to add your extra config.
Example: mySession := session.Must(session.NewSession())

// Create a S3 client from just a session.
svc := s3.New(mySession)

// Create a S3 client with additional configuration
svc := s3.New(mySession, aws.NewConfig().WithRegion("us-west-2"))

func (*S3) AbortMultipartUpload

func (c * S3 ) AbortMultipartUpload(input * AbortMultipartUploadInput ) (* AbortMultipartUploadOutput , error )
AbortMultipartUpload API operation for Amazon Simple Storage Service.
This action aborts a multipart upload. After a multipart upload is aborted,
no additional parts can be uploaded using that upload ID. The storage consumed
by any previously uploaded parts will be freed. However, if any part uploads
are currently in progress, those part uploads might or might not succeed.
As a result, it might be necessary to abort a given multipart upload multiple
times in order to completely free all storage consumed by all parts.
To verify that all parts have been removed, so you don't get charged for
the part storage, you should call the ListParts ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html )
action and ensure that the parts list is empty.
For information about permissions required to use the multipart upload, see
Multipart Upload and Permissions ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html ).
The following operations are related to AbortMultipartUpload:
CreateMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html )
UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html )
CompleteMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html )
ListParts ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html )
ListMultipartUploads ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation AbortMultipartUpload for usage and error information.
Returned Error Codes:  ErrCodeNoSuchUpload "NoSuchUpload"
The specified multipart upload does not exist.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AbortMultipartUpload    Example (Shared00)

To abort a multipart upload
The following example aborts a multipart upload.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.AbortMultipartUploadInput{
Bucket:   aws.String("examplebucket"),
Key:      aws.String("bigobject"),
UploadId: aws.String("xadcOB_7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--"),
}

result, err := svc.AbortMultipartUpload(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeNoSuchUpload:
fmt.Println(s3.ErrCodeNoSuchUpload, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) AbortMultipartUploadRequest

func (c * S3 ) AbortMultipartUploadRequest(input * AbortMultipartUploadInput ) (req * request . Request , output * AbortMultipartUploadOutput )
AbortMultipartUploadRequest generates a "aws/request.Request" representing the
client's request for the AbortMultipartUpload operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See AbortMultipartUpload for more information on using the AbortMultipartUpload
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the AbortMultipartUploadRequest method.
req, resp := client.AbortMultipartUploadRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/AbortMultipartUpload

func (*S3) AbortMultipartUploadWithContext    added in  v1.8.0

func (c * S3 ) AbortMultipartUploadWithContext(ctx aws . Context , input * AbortMultipartUploadInput , opts ... request . Option ) (* AbortMultipartUploadOutput , error )
AbortMultipartUploadWithContext is the same as AbortMultipartUpload with the addition of
the ability to pass a context and additional request options.
See AbortMultipartUpload for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) CompleteMultipartUpload

func (c * S3 ) CompleteMultipartUpload(input * CompleteMultipartUploadInput ) (* CompleteMultipartUploadOutput , error )
CompleteMultipartUpload API operation for Amazon Simple Storage Service.
Completes a multipart upload by assembling previously uploaded parts.
You first initiate the multipart upload and then upload all parts using the
UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html )
operation. After successfully uploading all relevant parts of an upload,
you call this action to complete the upload. Upon receiving this request,
Amazon S3 concatenates all the parts in ascending order by part number to
create a new object. In the Complete Multipart Upload request, you must provide
the parts list. You must ensure that the parts list is complete. This action
concatenates the parts that you provide in the list. For each part in the
list, you must provide the part number and the ETag value, returned after
that part was uploaded.
Processing of a Complete Multipart Upload request could take several minutes
to complete. After Amazon S3 begins processing the request, it sends an HTTP
response header that specifies a 200 OK response. While processing is in
progress, Amazon S3 periodically sends white space characters to keep the
connection from timing out. A request could fail after the initial 200 OK
response has been sent. This means that a 200 OK response can contain either
a success or an error. If you call the S3 API directly, make sure to design
your application to parse the contents of the response and handle it appropriately.
If you use Amazon Web Services SDKs, SDKs handle this condition. The SDKs
detect the embedded error and apply error handling per your configuration
settings (including automatically retrying the request as appropriate). If
the condition persists, the SDKs throws an exception (or, for the SDKs that
don't use exceptions, they return the error).
Note that if CompleteMultipartUpload fails, applications should be prepared
to retry the failed requests. For more information, see Amazon S3 Error Best
Practices ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ErrorBestPractices.html ).
You cannot use Content-Type: application/x-www-form-urlencoded with Complete
Multipart Upload requests. Also, if you do not provide a Content-Type header,
CompleteMultipartUpload returns a 200 OK response.
For more information about multipart uploads, see Uploading Objects Using
Multipart Upload ( https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html ).
For information about permissions required to use the multipart upload API,
see Multipart Upload and Permissions ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html ).
CompleteMultipartUpload has the following special errors:
Error code: EntityTooSmall Description: Your proposed upload is smaller
than the minimum allowed object size. Each part must be at least 5 MB
in size, except the last part. 400 Bad Request
Error code: InvalidPart Description: One or more of the specified parts
could not be found. The part might not have been uploaded, or the specified
entity tag might not have matched the part's entity tag. 400 Bad Request
Error code: InvalidPartOrder Description: The list of parts was not
in ascending order. The parts list must be specified in order by part
number. 400 Bad Request
Error code: NoSuchUpload Description: The specified multipart upload
does not exist. The upload ID might be invalid, or the multipart upload
might have been aborted or completed. 404 Not Found
The following operations are related to CompleteMultipartUpload:
CreateMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html )
UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html )
AbortMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html )
ListParts ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html )
ListMultipartUploads ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation CompleteMultipartUpload for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CompleteMultipartUpload    Example (Shared00)

To complete multipart upload
The following example completes a multipart upload.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.CompleteMultipartUploadInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("bigobject"),
MultipartUpload: &s3.CompletedMultipartUpload{
Parts: []*s3.CompletedPart{
{
ETag:       aws.String("\"d8c2eafd90c266e19ab9dcacc479f8af\""),
PartNumber: aws.Int64(1),
},
{
ETag:       aws.String("\"d8c2eafd90c266e19ab9dcacc479f8af\""),
PartNumber: aws.Int64(2),
},
},
},
UploadId: aws.String("7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--"),
}

result, err := svc.CompleteMultipartUpload(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) CompleteMultipartUploadRequest

func (c * S3 ) CompleteMultipartUploadRequest(input * CompleteMultipartUploadInput ) (req * request . Request , output * CompleteMultipartUploadOutput )
CompleteMultipartUploadRequest generates a "aws/request.Request" representing the
client's request for the CompleteMultipartUpload operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See CompleteMultipartUpload for more information on using the CompleteMultipartUpload
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the CompleteMultipartUploadRequest method.
req, resp := client.CompleteMultipartUploadRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CompleteMultipartUpload

func (*S3) CompleteMultipartUploadWithContext    added in  v1.8.0

func (c * S3 ) CompleteMultipartUploadWithContext(ctx aws . Context , input * CompleteMultipartUploadInput , opts ... request . Option ) (* CompleteMultipartUploadOutput , error )
CompleteMultipartUploadWithContext is the same as CompleteMultipartUpload with the addition of
the ability to pass a context and additional request options.
See CompleteMultipartUpload for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) CopyObject

func (c * S3 ) CopyObject(input * CopyObjectInput ) (* CopyObjectOutput , error )
Metadata    Server-side encryption    Access Control List (ACL)-Specific Request Headers    Checksums    Storage Class Options    Versioning
CopyObject API operation for Amazon Simple Storage Service.
Creates a copy of an object that is already stored in Amazon S3.
You can store individual objects of up to 5 TB in Amazon S3. You create a
copy of your object up to 5 GB in size in a single atomic action using this
API. However, to copy an object greater than 5 GB, you must use the multipart
upload Upload Part - Copy (UploadPartCopy) API. For more information, see
Copy Object Using the REST Multipart Upload API ( https://docs.aws.amazon.com/AmazonS3/latest/dev/CopyingObjctsUsingRESTMPUapi.html ).
All copy requests must be authenticated. Additionally, you must have read
access to the source object and write access to the destination bucket. For
more information, see REST Authentication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html ).
Both the Region that you want to copy the object from and the Region that
you want to copy the object to must be enabled for your account.
A copy request might return an error when Amazon S3 receives the copy request
or while Amazon S3 is copying the files. If the error occurs before the copy
action starts, you receive a standard Amazon S3 error. If the error occurs
during the copy operation, the error response is embedded in the 200 OK response.
This means that a 200 OK response can contain either a success or an error.
If you call the S3 API directly, make sure to design your application to
parse the contents of the response and handle it appropriately. If you use
Amazon Web Services SDKs, SDKs handle this condition. The SDKs detect the
embedded error and apply error handling per your configuration settings (including
automatically retrying the request as appropriate). If the condition persists,
the SDKs throws an exception (or, for the SDKs that don't use exceptions,
they return the error).
If the copy is successful, you receive a response with information about
the copied object.
If the request is an HTTP 1.1 request, the response is chunk encoded. If
it were not, it would not contain the content-length, and you would need
to read the entire body.
The copy request charge is based on the storage class and Region that you
specify for the destination object. The request can also result in a data
retrieval charge for the source if the source storage class bills for data
retrieval. For pricing information, see Amazon S3 pricing ( http://aws.amazon.com/s3/pricing/ ).
Amazon S3 transfer acceleration does not support cross-Region copies. If
you request a cross-Region copy using a transfer acceleration endpoint, you
get a 400 Bad Request error. For more information, see Transfer Acceleration
( https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html ). Metadata
When copying an object, you can preserve all metadata (the default) or specify
new metadata. However, the access control list (ACL) is not preserved and
is set to private for the user making the request. To override the default
ACL setting, specify a new ACL when generating a copy request. For more information,
see Using ACLs ( https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html ).
To specify whether you want the object metadata copied from the source object
or replaced with metadata provided in the request, you can optionally add
the x-amz-metadata-directive header. When you grant permissions, you can
use the s3:x-amz-metadata-directive condition key to enforce certain metadata
behavior when objects are uploaded. For more information, see Specifying
Conditions in a Policy ( https://docs.aws.amazon.com/AmazonS3/latest/dev/amazon-s3-policy-keys.html )
in the Amazon S3 User Guide. For a complete list of Amazon S3-specific condition
keys, see Actions, Resources, and Condition Keys for Amazon S3 ( https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html ).
x-amz-website-redirect-location is unique to each object and must be specified
in the request headers to copy the value.
x-amz-copy-source-if Headers
To only copy an object under certain conditions, such as whether the Etag
matches or whether the object was modified before or after a specified date,
use the following request parameters:
x-amz-copy-source-if-match
x-amz-copy-source-if-none-match
x-amz-copy-source-if-unmodified-since
x-amz-copy-source-if-modified-since
If both the x-amz-copy-source-if-match and x-amz-copy-source-if-unmodified-since
headers are present in the request and evaluate as follows, Amazon S3 returns
200 OK and copies the data:
x-amz-copy-source-if-match condition evaluates to true
x-amz-copy-source-if-unmodified-since condition evaluates to false
If both the x-amz-copy-source-if-none-match and x-amz-copy-source-if-modified-since
headers are present in the request and evaluate as follows, Amazon S3 returns
the 412 Precondition Failed response code:
x-amz-copy-source-if-none-match condition evaluates to false
x-amz-copy-source-if-modified-since condition evaluates to true
All headers with the x-amz- prefix, including x-amz-copy-source, must be
signed. Server-side encryption
Amazon S3 automatically encrypts all new objects that are copied to an S3
bucket. When copying an object, if you don't specify encryption information
in your copy request, the encryption setting of the target object is set
to the default encryption configuration of the destination bucket. By default,
all buckets have a base level of encryption configuration that uses server-side
encryption with Amazon S3 managed keys (SSE-S3). If the destination bucket
has a default encryption configuration that uses server-side encryption with
Key Management Service (KMS) keys (SSE-KMS), dual-layer server-side encryption
with Amazon Web Services KMS keys (DSSE-KMS), or server-side encryption with
customer-provided encryption keys (SSE-C), Amazon S3 uses the corresponding
KMS key, or a customer-provided key to encrypt the target object copy.
When you perform a CopyObject operation, if you want to use a different type
of encryption setting for the target object, you can use other appropriate
encryption-related headers to encrypt the target object with a KMS key, an
Amazon S3 managed key, or a customer-provided key. With server-side encryption,
Amazon S3 encrypts your data as it writes your data to disks in its data
centers and decrypts the data when you access it. If the encryption setting
in your request is different from the default encryption configuration of
the destination bucket, the encryption setting in your request takes precedence.
If the source object for the copy is stored in Amazon S3 using SSE-C, you
must provide the necessary encryption information in your request so that
Amazon S3 can decrypt the object for copying. For more information about
server-side encryption, see Using Server-Side Encryption ( https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html ).
If a target object uses SSE-KMS, you can enable an S3 Bucket Key for the
object. For more information, see Amazon S3 Bucket Keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html )
in the Amazon S3 User Guide. Access Control List (ACL)-Specific Request Headers
When copying an object, you can optionally use headers to grant ACL-based
permissions. By default, all objects are private. Only the owner has full
access control. When adding a new object, you can grant permissions to individual
Amazon Web Services accounts or to predefined groups that are defined by
Amazon S3. These permissions are then added to the ACL on the object. For
more information, see Access Control List (ACL) Overview ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html )
and Managing ACLs Using the REST API ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-using-rest-api.html ).
If the bucket that you're copying objects to uses the bucket owner enforced
setting for S3 Object Ownership, ACLs are disabled and no longer affect permissions.
Buckets that use this setting only accept PUT requests that don't specify
an ACL or PUT requests that specify bucket owner full control ACLs, such
as the bucket-owner-full-control canned ACL or an equivalent form of this
ACL expressed in the XML format.
For more information, see Controlling ownership of objects and disabling
ACLs ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html )
in the Amazon S3 User Guide.
If your bucket uses the bucket owner enforced setting for Object Ownership,
all objects written to the bucket by any account will be owned by the bucket
owner. Checksums
When copying an object, if it has a checksum, that checksum will be copied
to the new object by default. When you copy the object over, you can optionally
specify a different checksum algorithm to use with the x-amz-checksum-algorithm
header. Storage Class Options
You can use the CopyObject action to change the storage class of an object
that is already stored in Amazon S3 by using the StorageClass parameter.
For more information, see Storage Classes ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html )
in the Amazon S3 User Guide.
If the source object's storage class is GLACIER or DEEP_ARCHIVE, or the object's
storage class is INTELLIGENT_TIERING and it's S3 Intelligent-Tiering access
tier ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/intelligent-tiering-overview.html#intel-tiering-tier-definition )
is Archive Access or Deep Archive Access, you must restore a copy of this
object before you can use it as a source object for the copy operation. For
more information, see RestoreObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html ).
For more information, see Copying Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/CopyingObjectsExamples.html ). Versioning
By default, x-amz-copy-source header identifies the current version of an
object to copy. If the current version is a delete marker, Amazon S3 behaves
as if the object was deleted. To copy a different version, use the versionId
subresource.
If you enable versioning on the target bucket, Amazon S3 generates a unique
version ID for the object being copied. This version ID is different from
the version ID of the source object. Amazon S3 returns the version ID of
the copied object in the x-amz-version-id response header in the response.
If you do not enable versioning or suspend it on the target bucket, the version
ID that Amazon S3 generates is always null.
The following operations are related to CopyObject:
PutObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html )
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation CopyObject for usage and error information.
Returned Error Codes:  ErrCodeObjectNotInActiveTierError "ObjectNotInActiveTierError"
The source object of the COPY action is not in the active tier and is only
stored in Amazon S3 Glacier.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CopyObject    Example (Shared00)

To copy an object
The following example copies an object from one bucket to another.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.CopyObjectInput{
Bucket:     aws.String("destinationbucket"),
CopySource: aws.String("/sourcebucket/HappyFacejpg"),
Key:        aws.String("HappyFaceCopyjpg"),
}

result, err := svc.CopyObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeObjectNotInActiveTierError:
fmt.Println(s3.ErrCodeObjectNotInActiveTierError, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) CopyObjectRequest

func (c * S3 ) CopyObjectRequest(input * CopyObjectInput ) (req * request . Request , output * CopyObjectOutput )
CopyObjectRequest generates a "aws/request.Request" representing the
client's request for the CopyObject operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See CopyObject for more information on using the CopyObject
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the CopyObjectRequest method.
req, resp := client.CopyObjectRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CopyObject

func (*S3) CopyObjectWithContext    added in  v1.8.0

func (c * S3 ) CopyObjectWithContext(ctx aws . Context , input * CopyObjectInput , opts ... request . Option ) (* CopyObjectOutput , error )
CopyObjectWithContext is the same as CopyObject with the addition of
the ability to pass a context and additional request options.
See CopyObject for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) CreateBucket

func (c * S3 ) CreateBucket(input * CreateBucketInput ) (* CreateBucketOutput , error )
Permissions
CreateBucket API operation for Amazon Simple Storage Service.
Creates a new S3 bucket. To create a bucket, you must register with Amazon
S3 and have a valid Amazon Web Services Access Key ID to authenticate requests.
Anonymous requests are never allowed to create buckets. By creating the bucket,
you become the bucket owner.
Not every string is an acceptable bucket name. For information about bucket
naming restrictions, see Bucket naming rules ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html ).
If you want to create an Amazon S3 on Outposts bucket, see Create Bucket
( https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html ).
By default, the bucket is created in the US East (N. Virginia) Region. You
can optionally specify a Region in the request body. To constrain the bucket
creation to a specific Region, you can use LocationConstraint ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucketConfiguration.html )
condition key. You might choose a Region to optimize latency, minimize costs,
or address regulatory requirements. For example, if you reside in Europe,
you will probably find it advantageous to create buckets in the Europe (Ireland)
Region. For more information, see Accessing a bucket ( https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro ).
If you send your create bucket request to the s3.amazonaws.com endpoint,
the request goes to the us-east-1 Region. Accordingly, the signature calculations
in Signature Version 4 must use us-east-1 as the Region, even if the location
constraint in the request specifies another Region where the bucket is to
be created. If you create a bucket in a Region other than US East (N. Virginia),
your application must be able to handle 307 redirect. For more information,
see Virtual hosting of buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html ). Permissions
In addition to s3:CreateBucket, the following permissions are required when
your CreateBucket request includes specific headers:
Access control lists (ACLs) - If your CreateBucket request specifies
access control list (ACL) permissions and the ACL is public-read, public-read-write,
authenticated-read, or if you specify access permissions explicitly through
any other ACL, both s3:CreateBucket and s3:PutBucketAcl permissions are
needed. If the ACL for the CreateBucket request is private or if the request
doesn't specify any ACLs, only s3:CreateBucket permission is needed.
Object Lock - If ObjectLockEnabledForBucket is set to true in your CreateBucket
request, s3:PutBucketObjectLockConfiguration and s3:PutBucketVersioning
permissions are required.
S3 Object Ownership - If your CreateBucket request includes the x-amz-object-ownership
header, then the s3:PutBucketOwnershipControls permission is required.
By default, ObjectOwnership is set to BucketOWnerEnforced and ACLs are
disabled. We recommend keeping ACLs disabled, except in uncommon use cases
where you must control access for each object individually. If you want
to change the ObjectOwnership setting, you can use the x-amz-object-ownership
header in your CreateBucket request to set the ObjectOwnership setting
of your choice. For more information about S3 Object Ownership, see Controlling
object ownership ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html )
in the Amazon S3 User Guide.
S3 Block Public Access - If your specific use case requires granting
public access to your S3 resources, you can disable Block Public Access.
You can create a new bucket with Block Public Access enabled, then separately
call the DeletePublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html )
API. To use this operation, you must have the s3:PutBucketPublicAccessBlock
permission. By default, all Block Public Access settings are enabled for
new buckets. To avoid inadvertent exposure of your resources, we recommend
keeping the S3 Block Public Access settings enabled. For more information
about S3 Block Public Access, see Blocking public access to your Amazon
S3 storage ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html )
in the Amazon S3 User Guide.
If your CreateBucket request sets BucketOwnerEnforced for Amazon S3 Object
Ownership and specifies a bucket ACL that provides access to an external
Amazon Web Services account, your request fails with a 400 error and returns
the InvalidBucketAcLWithObjectOwnership error code. For more information,
see Setting Object Ownership on an existing bucket ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-ownership-existing-bucket.html )
in the Amazon S3 User Guide.
The following operations are related to CreateBucket:
PutObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html )
DeleteBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation CreateBucket for usage and error information.
Returned Error Codes:
ErrCodeBucketAlreadyExists "BucketAlreadyExists"
The requested bucket name is not available. The bucket namespace is shared
by all users of the system. Select a different name and try again.
ErrCodeBucketAlreadyOwnedByYou "BucketAlreadyOwnedByYou"
The bucket you tried to create already exists, and you own it. Amazon S3
returns this error in all Amazon Web Services Regions except in the North
Virginia Region. For legacy compatibility, if you re-create an existing bucket
that you already own in the North Virginia Region, Amazon S3 returns 200
OK and resets the bucket access control lists (ACLs).
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateBucket    Example (Shared00)

To create a bucket
The following example creates a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.CreateBucketInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.CreateBucket(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeBucketAlreadyExists:
fmt.Println(s3.ErrCodeBucketAlreadyExists, aerr.Error())
case s3.ErrCodeBucketAlreadyOwnedByYou:
fmt.Println(s3.ErrCodeBucketAlreadyOwnedByYou, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared01)

To create a bucket in a specific region
The following example creates a bucket. The request specifies an AWS region where
to create the bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.CreateBucketInput{
Bucket: aws.String("examplebucket"),
CreateBucketConfiguration: &s3.CreateBucketConfiguration{
LocationConstraint: aws.String("eu-west-1"),
},
}

result, err := svc.CreateBucket(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeBucketAlreadyExists:
fmt.Println(s3.ErrCodeBucketAlreadyExists, aerr.Error())
case s3.ErrCodeBucketAlreadyOwnedByYou:
fmt.Println(s3.ErrCodeBucketAlreadyOwnedByYou, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) CreateBucketRequest

func (c * S3 ) CreateBucketRequest(input * CreateBucketInput ) (req * request . Request , output * CreateBucketOutput )
CreateBucketRequest generates a "aws/request.Request" representing the
client's request for the CreateBucket operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See CreateBucket for more information on using the CreateBucket
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the CreateBucketRequest method.
req, resp := client.CreateBucketRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateBucket

func (*S3) CreateBucketWithContext    added in  v1.8.0

func (c * S3 ) CreateBucketWithContext(ctx aws . Context , input * CreateBucketInput , opts ... request . Option ) (* CreateBucketOutput , error )
CreateBucketWithContext is the same as CreateBucket with the addition of
the ability to pass a context and additional request options.
See CreateBucket for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) CreateMultipartUpload

func (c * S3 ) CreateMultipartUpload(input * CreateMultipartUploadInput ) (* CreateMultipartUploadOutput , error )
Access Permissions    Server-Side- Encryption-Specific Request Headers    Access-Control-List (ACL)-Specific Request Headers
CreateMultipartUpload API operation for Amazon Simple Storage Service.
This action initiates a multipart upload and returns an upload ID. This upload
ID is used to associate all of the parts in the specific multipart upload.
You specify this upload ID in each of your subsequent upload part requests
(see UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html )).
You also include this upload ID in the final request to either complete or
abort the multipart upload request.
For more information about multipart uploads, see Multipart Upload Overview
( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html ).
If you have configured a lifecycle rule to abort incomplete multipart uploads,
the upload must complete within the number of days specified in the bucket
lifecycle configuration. Otherwise, the incomplete multipart upload becomes
eligible for an abort action and Amazon S3 aborts the multipart upload. For
more information, see Aborting Incomplete Multipart Uploads Using a Bucket
Lifecycle Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config ).
For information about the permissions required to use the multipart upload
API, see Multipart Upload and Permissions ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html ).
For request signing, multipart upload is just a series of regular requests.
You initiate a multipart upload, send one or more requests to upload parts,
and then complete the multipart upload process. You sign each request individually.
There is nothing special about signing multipart upload requests. For more
information about signing, see Authenticating Requests (Amazon Web Services
Signature Version 4) ( https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html ).
After you initiate a multipart upload and upload one or more parts, to stop
being charged for storing the uploaded parts, you must either complete or
abort the multipart upload. Amazon S3 frees up the space used to store the
parts and stop charging you for storing them only after you either complete
or abort a multipart upload.
Server-side encryption is for data encryption at rest. Amazon S3 encrypts
your data as it writes it to disks in its data centers and decrypts it when
you access it. Amazon S3 automatically encrypts all new objects that are
uploaded to an S3 bucket. When doing a multipart upload, if you don't specify
encryption information in your request, the encryption setting of the uploaded
parts is set to the default encryption configuration of the destination bucket.
By default, all buckets have a base level of encryption configuration that
uses server-side encryption with Amazon S3 managed keys (SSE-S3). If the
destination bucket has a default encryption configuration that uses server-side
encryption with an Key Management Service (KMS) key (SSE-KMS), or a customer-provided
encryption key (SSE-C), Amazon S3 uses the corresponding KMS key, or a customer-provided
key to encrypt the uploaded parts. When you perform a CreateMultipartUpload
operation, if you want to use a different type of encryption setting for
the uploaded parts, you can request that Amazon S3 encrypts the object with
a KMS key, an Amazon S3 managed key, or a customer-provided key. If the encryption
setting in your request is different from the default encryption configuration
of the destination bucket, the encryption setting in your request takes precedence.
If you choose to provide your own encryption key, the request headers you
provide in UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html )
and UploadPartCopy ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html )
requests must match the headers you used in the request to initiate the upload
by using CreateMultipartUpload. You can request that Amazon S3 save the uploaded
parts encrypted with server-side encryption with an Amazon S3 managed key
(SSE-S3), an Key Management Service (KMS) key (SSE-KMS), or a customer-provided
encryption key (SSE-C).
To perform a multipart upload with encryption by using an Amazon Web Services
KMS key, the requester must have permission to the kms:Decrypt and kms:GenerateDataKey*
actions on the key. These permissions are required because Amazon S3 must
decrypt and read data from the encrypted file parts before it completes the
multipart upload. For more information, see Multipart upload API and permissions
( https://docs.aws.amazon.com/AmazonS3/latest/userguide/mpuoverview.html#mpuAndPermissions )
and Protecting data using server-side encryption with Amazon Web Services
KMS ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html )
in the Amazon S3 User Guide.
If your Identity and Access Management (IAM) user or role is in the same
Amazon Web Services account as the KMS key, then you must have these permissions
on the key policy. If your IAM user or role belongs to a different account
than the key, then you must have the permissions on both the key policy and
your IAM user or role.
For more information, see Protecting Data Using Server-Side Encryption ( https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html ). Access Permissions
When copying an object, you can optionally specify the accounts or groups
that should be granted specific permissions on the new object. There are
two ways to grant the permissions using the request headers:
Specify a canned ACL with the x-amz-acl request header. For more information,
see Canned ACL ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL ).
Specify access permissions explicitly with the x-amz-grant-read, x-amz-grant-read-acp,
x-amz-grant-write-acp, and x-amz-grant-full-control headers. These parameters
map to the set of permissions that Amazon S3 supports in an ACL. For more
information, see Access Control List (ACL) Overview ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html ).
You can use either a canned ACL or specify access permissions explicitly.
You cannot do both. Server-Side- Encryption-Specific Request Headers
Amazon S3 encrypts data by using server-side encryption with an Amazon S3
managed key (SSE-S3) by default. Server-side encryption is for data encryption
at rest. Amazon S3 encrypts your data as it writes it to disks in its data
centers and decrypts it when you access it. You can request that Amazon S3
encrypts data at rest by using server-side encryption with other key options.
The option you use depends on whether you want to use KMS keys (SSE-KMS)
or provide your own encryption keys (SSE-C).
Use KMS keys (SSE-KMS) that include the Amazon Web Services managed
key (aws/s3) and KMS customer managed keys stored in Key Management Service
(KMS) – If you want Amazon Web Services to manage the keys used to encrypt
data, specify the following headers in the request. x-amz-server-side-encryption
x-amz-server-side-encryption-aws-kms-key-id x-amz-server-side-encryption-context
If you specify x-amz-server-side-encryption:aws:kms, but don't provide
x-amz-server-side-encryption-aws-kms-key-id, Amazon S3 uses the Amazon
Web Services managed key (aws/s3 key) in KMS to protect the data. All
GET and PUT requests for an object protected by KMS fail if you don't
make them by using Secure Sockets Layer (SSL), Transport Layer Security
(TLS), or Signature Version 4. For more information about server-side
encryption with KMS keys (SSE-KMS), see Protecting Data Using Server-Side
Encryption with KMS keys ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html ).
Use customer-provided encryption keys (SSE-C) – If you want to manage
your own encryption keys, provide all the following headers in the request.
x-amz-server-side-encryption-customer-algorithm x-amz-server-side-encryption-customer-key
x-amz-server-side-encryption-customer-key-MD5 For more information about
server-side encryption with customer-provided encryption keys (SSE-C),
see Protecting data using server-side encryption with customer-provided
encryption keys (SSE-C) ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html ).  Access-Control-List (ACL)-Specific Request Headers
You also can use the following access control–related headers with this
operation. By default, all objects are private. Only the owner has full access
control. When adding a new object, you can grant permissions to individual
Amazon Web Services accounts or to predefined groups defined by Amazon S3.
These permissions are then added to the access control list (ACL) on the
object. For more information, see Using ACLs ( https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html ).
With this operation, you can grant access permissions using one of the following
two methods:
Specify a canned ACL (x-amz-acl) — Amazon S3 supports a set of predefined
ACLs, known as canned ACLs. Each canned ACL has a predefined set of grantees
and permissions. For more information, see Canned ACL ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL ).
Specify access permissions explicitly — To explicitly grant access
permissions to specific Amazon Web Services accounts or groups, use the
following headers. Each header maps to specific permissions that Amazon
S3 supports in an ACL. For more information, see Access Control List (ACL)
Overview ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html ).
In the header, you specify a list of grantees who get the specific permission.
To grant permissions explicitly, use: x-amz-grant-read x-amz-grant-write
x-amz-grant-read-acp x-amz-grant-write-acp x-amz-grant-full-control You
specify each grantee as a type=value pair, where the type is one of the
following: id – if the value specified is the canonical user ID of an
Amazon Web Services account uri – if you are granting permissions to
a predefined group emailAddress – if the value specified is the email
address of an Amazon Web Services account Using email addresses to specify
a grantee is only supported in the following Amazon Web Services Regions:
US East (N. Virginia) US West (N. California) US West (Oregon) Asia Pacific
(Singapore) Asia Pacific (Sydney) Asia Pacific (Tokyo) Europe (Ireland)
South America (São Paulo) For a list of all the Amazon S3 supported Regions
and endpoints, see Regions and Endpoints ( https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region )
in the Amazon Web Services General Reference. For example, the following
x-amz-grant-read header grants the Amazon Web Services accounts identified
by account IDs permissions to read object data and its metadata: x-amz-grant-read:
id="11112222333", id="444455556666"
The following operations are related to CreateMultipartUpload:
UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html )
CompleteMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html )
AbortMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html )
ListParts ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html )
ListMultipartUploads ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation CreateMultipartUpload for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateMultipartUpload    Example (Shared00)

To initiate a multipart upload
The following example initiates a multipart upload.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.CreateMultipartUploadInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("largeobject"),
}

result, err := svc.CreateMultipartUpload(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) CreateMultipartUploadRequest

func (c * S3 ) CreateMultipartUploadRequest(input * CreateMultipartUploadInput ) (req * request . Request , output * CreateMultipartUploadOutput )
CreateMultipartUploadRequest generates a "aws/request.Request" representing the
client's request for the CreateMultipartUpload operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See CreateMultipartUpload for more information on using the CreateMultipartUpload
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the CreateMultipartUploadRequest method.
req, resp := client.CreateMultipartUploadRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/CreateMultipartUpload

func (*S3) CreateMultipartUploadWithContext    added in  v1.8.0

func (c * S3 ) CreateMultipartUploadWithContext(ctx aws . Context , input * CreateMultipartUploadInput , opts ... request . Option ) (* CreateMultipartUploadOutput , error )
CreateMultipartUploadWithContext is the same as CreateMultipartUpload with the addition of
the ability to pass a context and additional request options.
See CreateMultipartUpload for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucket

func (c * S3 ) DeleteBucket(input * DeleteBucketInput ) (* DeleteBucketOutput , error )
DeleteBucket API operation for Amazon Simple Storage Service.
Deletes the S3 bucket. All objects (including all object versions and delete
markers) in the bucket must be deleted before the bucket itself can be deleted.
The following operations are related to DeleteBucket:
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
DeleteObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucket for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucket    Example (Shared00)

To delete a bucket
The following example deletes the specified bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteBucketInput{
Bucket: aws.String("forrandall2"),
}

result, err := svc.DeleteBucket(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) DeleteBucketAnalyticsConfiguration    added in  v1.5.11

func (c * S3 ) DeleteBucketAnalyticsConfiguration(input * DeleteBucketAnalyticsConfigurationInput ) (* DeleteBucketAnalyticsConfigurationOutput , error )
DeleteBucketAnalyticsConfiguration API operation for Amazon Simple Storage Service.
Deletes an analytics configuration for the bucket (specified by the analytics
configuration ID).
To use this operation, you must have permissions to perform the s3:PutAnalyticsConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
For information about the Amazon S3 analytics feature, see Amazon S3 Analytics
– Storage Class Analysis ( https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html ).
The following operations are related to DeleteBucketAnalyticsConfiguration:
GetBucketAnalyticsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html )
ListBucketAnalyticsConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketAnalyticsConfigurations.html )
PutBucketAnalyticsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketAnalyticsConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketAnalyticsConfiguration

func (*S3) DeleteBucketAnalyticsConfigurationRequest    added in  v1.5.11

func (c * S3 ) DeleteBucketAnalyticsConfigurationRequest(input * DeleteBucketAnalyticsConfigurationInput ) (req * request . Request , output * DeleteBucketAnalyticsConfigurationOutput )
DeleteBucketAnalyticsConfigurationRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketAnalyticsConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketAnalyticsConfiguration for more information on using the DeleteBucketAnalyticsConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketAnalyticsConfigurationRequest method.
req, resp := client.DeleteBucketAnalyticsConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketAnalyticsConfiguration

func (*S3) DeleteBucketAnalyticsConfigurationWithContext    added in  v1.8.0

func (c * S3 ) DeleteBucketAnalyticsConfigurationWithContext(ctx aws . Context , input * DeleteBucketAnalyticsConfigurationInput , opts ... request . Option ) (* DeleteBucketAnalyticsConfigurationOutput , error )
DeleteBucketAnalyticsConfigurationWithContext is the same as DeleteBucketAnalyticsConfiguration with the addition of
the ability to pass a context and additional request options.
See DeleteBucketAnalyticsConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketCors    added in  v0.9.5

func (c * S3 ) DeleteBucketCors(input * DeleteBucketCorsInput ) (* DeleteBucketCorsOutput , error )
DeleteBucketCors API operation for Amazon Simple Storage Service.
Deletes the cors configuration information set for the bucket.
To use this operation, you must have permission to perform the s3:PutBucketCORS
action. The bucket owner has this permission by default and can grant this
permission to others.
For information about cors, see Enabling Cross-Origin Resource Sharing ( https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html )
in the Amazon S3 User Guide.
Related Resources
PutBucketCors ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html )
RESTOPTIONSobject ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTOPTIONSobject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketCors for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketCors    Example (Shared00)

To delete cors configuration on a bucket.
The following example deletes CORS configuration on a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteBucketCorsInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.DeleteBucketCors(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) DeleteBucketCorsRequest    added in  v0.9.5

func (c * S3 ) DeleteBucketCorsRequest(input * DeleteBucketCorsInput ) (req * request . Request , output * DeleteBucketCorsOutput )
DeleteBucketCorsRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketCors operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketCors for more information on using the DeleteBucketCors
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketCorsRequest method.
req, resp := client.DeleteBucketCorsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketCors

func (*S3) DeleteBucketCorsWithContext    added in  v1.8.0

func (c * S3 ) DeleteBucketCorsWithContext(ctx aws . Context , input * DeleteBucketCorsInput , opts ... request . Option ) (* DeleteBucketCorsOutput , error )
DeleteBucketCorsWithContext is the same as DeleteBucketCors with the addition of
the ability to pass a context and additional request options.
See DeleteBucketCors for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketEncryption    added in  v1.12.24

func (c * S3 ) DeleteBucketEncryption(input * DeleteBucketEncryptionInput ) (* DeleteBucketEncryptionOutput , error )
DeleteBucketEncryption API operation for Amazon Simple Storage Service.
This implementation of the DELETE action resets the default encryption for
the bucket as server-side encryption with Amazon S3 managed keys (SSE-S3).
For information about the bucket default encryption feature, see Amazon S3
Bucket Default Encryption ( https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html )
in the Amazon S3 User Guide.
To use this operation, you must have permissions to perform the s3:PutEncryptionConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html )
in the Amazon S3 User Guide.
The following operations are related to DeleteBucketEncryption:
PutBucketEncryption ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html )
GetBucketEncryption ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketEncryption for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketEncryption

func (*S3) DeleteBucketEncryptionRequest    added in  v1.12.24

func (c * S3 ) DeleteBucketEncryptionRequest(input * DeleteBucketEncryptionInput ) (req * request . Request , output * DeleteBucketEncryptionOutput )
DeleteBucketEncryptionRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketEncryption operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketEncryption for more information on using the DeleteBucketEncryption
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketEncryptionRequest method.
req, resp := client.DeleteBucketEncryptionRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketEncryption

func (*S3) DeleteBucketEncryptionWithContext    added in  v1.12.24

func (c * S3 ) DeleteBucketEncryptionWithContext(ctx aws . Context , input * DeleteBucketEncryptionInput , opts ... request . Option ) (* DeleteBucketEncryptionOutput , error )
DeleteBucketEncryptionWithContext is the same as DeleteBucketEncryption with the addition of
the ability to pass a context and additional request options.
See DeleteBucketEncryption for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketIntelligentTieringConfiguration    added in  v1.35.24

func (c * S3 ) DeleteBucketIntelligentTieringConfiguration(input * DeleteBucketIntelligentTieringConfigurationInput ) (* DeleteBucketIntelligentTieringConfigurationOutput , error )
DeleteBucketIntelligentTieringConfiguration API operation for Amazon Simple Storage Service.
Deletes the S3 Intelligent-Tiering configuration from the specified bucket.
The S3 Intelligent-Tiering storage class is designed to optimize storage
costs by automatically moving data to the most cost-effective storage access
tier, without performance impact or operational overhead. S3 Intelligent-Tiering
delivers automatic cost savings in three low latency and high throughput
access tiers. To get the lowest storage cost on data that can be accessed
in minutes to hours, you can choose to activate additional archiving capabilities.
The S3 Intelligent-Tiering storage class is the ideal storage class for data
with unknown, changing, or unpredictable access patterns, independent of
object size or retention period. If the size of an object is less than 128
KB, it is not monitored and not eligible for auto-tiering. Smaller objects
can be stored, but they are always charged at the Frequent Access tier rates
in the S3 Intelligent-Tiering storage class.
For more information, see Storage class for automatically optimizing frequently
and infrequently accessed objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access ).
Operations related to DeleteBucketIntelligentTieringConfiguration include:
GetBucketIntelligentTieringConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html )
PutBucketIntelligentTieringConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html )
ListBucketIntelligentTieringConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketIntelligentTieringConfigurations.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketIntelligentTieringConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketIntelligentTieringConfiguration

func (*S3) DeleteBucketIntelligentTieringConfigurationRequest    added in  v1.35.24

func (c * S3 ) DeleteBucketIntelligentTieringConfigurationRequest(input * DeleteBucketIntelligentTieringConfigurationInput ) (req * request . Request , output * DeleteBucketIntelligentTieringConfigurationOutput )
DeleteBucketIntelligentTieringConfigurationRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketIntelligentTieringConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketIntelligentTieringConfiguration for more information on using the DeleteBucketIntelligentTieringConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketIntelligentTieringConfigurationRequest method.
req, resp := client.DeleteBucketIntelligentTieringConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketIntelligentTieringConfiguration

func (*S3) DeleteBucketIntelligentTieringConfigurationWithContext    added in  v1.35.24

func (c * S3 ) DeleteBucketIntelligentTieringConfigurationWithContext(ctx aws . Context , input * DeleteBucketIntelligentTieringConfigurationInput , opts ... request . Option ) (* DeleteBucketIntelligentTieringConfigurationOutput , error )
DeleteBucketIntelligentTieringConfigurationWithContext is the same as DeleteBucketIntelligentTieringConfiguration with the addition of
the ability to pass a context and additional request options.
See DeleteBucketIntelligentTieringConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketInventoryConfiguration    added in  v1.5.11

func (c * S3 ) DeleteBucketInventoryConfiguration(input * DeleteBucketInventoryConfigurationInput ) (* DeleteBucketInventoryConfigurationOutput , error )
DeleteBucketInventoryConfiguration API operation for Amazon Simple Storage Service.
Deletes an inventory configuration (identified by the inventory ID) from
the bucket.
To use this operation, you must have permissions to perform the s3:PutInventoryConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
For information about the Amazon S3 inventory feature, see Amazon S3 Inventory
( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html ).
Operations related to DeleteBucketInventoryConfiguration include:
GetBucketInventoryConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html )
PutBucketInventoryConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html )
ListBucketInventoryConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketInventoryConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketInventoryConfiguration

func (*S3) DeleteBucketInventoryConfigurationRequest    added in  v1.5.11

func (c * S3 ) DeleteBucketInventoryConfigurationRequest(input * DeleteBucketInventoryConfigurationInput ) (req * request . Request , output * DeleteBucketInventoryConfigurationOutput )
DeleteBucketInventoryConfigurationRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketInventoryConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketInventoryConfiguration for more information on using the DeleteBucketInventoryConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketInventoryConfigurationRequest method.
req, resp := client.DeleteBucketInventoryConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketInventoryConfiguration

func (*S3) DeleteBucketInventoryConfigurationWithContext    added in  v1.8.0

func (c * S3 ) DeleteBucketInventoryConfigurationWithContext(ctx aws . Context , input * DeleteBucketInventoryConfigurationInput , opts ... request . Option ) (* DeleteBucketInventoryConfigurationOutput , error )
DeleteBucketInventoryConfigurationWithContext is the same as DeleteBucketInventoryConfiguration with the addition of
the ability to pass a context and additional request options.
See DeleteBucketInventoryConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketLifecycle

func (c * S3 ) DeleteBucketLifecycle(input * DeleteBucketLifecycleInput ) (* DeleteBucketLifecycleOutput , error )
DeleteBucketLifecycle API operation for Amazon Simple Storage Service.
Deletes the lifecycle configuration from the specified bucket. Amazon S3
removes all the lifecycle configuration rules in the lifecycle subresource
associated with the bucket. Your objects never expire, and Amazon S3 no longer
automatically deletes any objects on the basis of rules contained in the
deleted lifecycle configuration.
To use this operation, you must have permission to perform the s3:PutLifecycleConfiguration
action. By default, the bucket owner has this permission and the bucket owner
can grant this permission to others.
There is usually some time lag before lifecycle configuration deletion is
fully propagated to all the Amazon S3 systems.
For more information about the object expiration, see Elements to Describe
Lifecycle Actions ( https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#intro-lifecycle-rules-actions ).
Related actions include:
PutBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html )
GetBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketLifecycle for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketLifecycle    Example (Shared00)

To delete lifecycle configuration on a bucket.
The following example deletes lifecycle configuration on a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteBucketLifecycleInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.DeleteBucketLifecycle(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) DeleteBucketLifecycleRequest

func (c * S3 ) DeleteBucketLifecycleRequest(input * DeleteBucketLifecycleInput ) (req * request . Request , output * DeleteBucketLifecycleOutput )
DeleteBucketLifecycleRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketLifecycle operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketLifecycle for more information on using the DeleteBucketLifecycle
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketLifecycleRequest method.
req, resp := client.DeleteBucketLifecycleRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketLifecycle

func (*S3) DeleteBucketLifecycleWithContext    added in  v1.8.0

func (c * S3 ) DeleteBucketLifecycleWithContext(ctx aws . Context , input * DeleteBucketLifecycleInput , opts ... request . Option ) (* DeleteBucketLifecycleOutput , error )
DeleteBucketLifecycleWithContext is the same as DeleteBucketLifecycle with the addition of
the ability to pass a context and additional request options.
See DeleteBucketLifecycle for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketMetricsConfiguration    added in  v1.5.11

func (c * S3 ) DeleteBucketMetricsConfiguration(input * DeleteBucketMetricsConfigurationInput ) (* DeleteBucketMetricsConfigurationOutput , error )
DeleteBucketMetricsConfiguration API operation for Amazon Simple Storage Service.
Deletes a metrics configuration for the Amazon CloudWatch request metrics
(specified by the metrics configuration ID) from the bucket. Note that this
doesn't include the daily storage metrics.
To use this operation, you must have permissions to perform the s3:PutMetricsConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
For information about CloudWatch request metrics for Amazon S3, see Monitoring
Metrics with Amazon CloudWatch ( https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html ).
The following operations are related to DeleteBucketMetricsConfiguration:
GetBucketMetricsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html )
PutBucketMetricsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html )
ListBucketMetricsConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketMetricsConfigurations.html )
Monitoring Metrics with Amazon CloudWatch ( https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketMetricsConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketMetricsConfiguration

func (*S3) DeleteBucketMetricsConfigurationRequest    added in  v1.5.11

func (c * S3 ) DeleteBucketMetricsConfigurationRequest(input * DeleteBucketMetricsConfigurationInput ) (req * request . Request , output * DeleteBucketMetricsConfigurationOutput )
DeleteBucketMetricsConfigurationRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketMetricsConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketMetricsConfiguration for more information on using the DeleteBucketMetricsConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketMetricsConfigurationRequest method.
req, resp := client.DeleteBucketMetricsConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketMetricsConfiguration

func (*S3) DeleteBucketMetricsConfigurationWithContext    added in  v1.8.0

func (c * S3 ) DeleteBucketMetricsConfigurationWithContext(ctx aws . Context , input * DeleteBucketMetricsConfigurationInput , opts ... request . Option ) (* DeleteBucketMetricsConfigurationOutput , error )
DeleteBucketMetricsConfigurationWithContext is the same as DeleteBucketMetricsConfiguration with the addition of
the ability to pass a context and additional request options.
See DeleteBucketMetricsConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketOwnershipControls    added in  v1.35.2

func (c * S3 ) DeleteBucketOwnershipControls(input * DeleteBucketOwnershipControlsInput ) (* DeleteBucketOwnershipControlsOutput , error )
DeleteBucketOwnershipControls API operation for Amazon Simple Storage Service.
Removes OwnershipControls for an Amazon S3 bucket. To use this operation,
you must have the s3:PutBucketOwnershipControls permission. For more information
about Amazon S3 permissions, see Specifying Permissions in a Policy ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html ).
For information about Amazon S3 Object Ownership, see Using Object Ownership
( https://docs.aws.amazon.com/AmazonS3/latest/dev/about-object-ownership.html ).
The following operations are related to DeleteBucketOwnershipControls:
GetBucketOwnershipControls
PutBucketOwnershipControls
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketOwnershipControls for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketOwnershipControls

func (*S3) DeleteBucketOwnershipControlsRequest    added in  v1.35.2

func (c * S3 ) DeleteBucketOwnershipControlsRequest(input * DeleteBucketOwnershipControlsInput ) (req * request . Request , output * DeleteBucketOwnershipControlsOutput )
DeleteBucketOwnershipControlsRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketOwnershipControls operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketOwnershipControls for more information on using the DeleteBucketOwnershipControls
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketOwnershipControlsRequest method.
req, resp := client.DeleteBucketOwnershipControlsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketOwnershipControls

func (*S3) DeleteBucketOwnershipControlsWithContext    added in  v1.35.2

func (c * S3 ) DeleteBucketOwnershipControlsWithContext(ctx aws . Context , input * DeleteBucketOwnershipControlsInput , opts ... request . Option ) (* DeleteBucketOwnershipControlsOutput , error )
DeleteBucketOwnershipControlsWithContext is the same as DeleteBucketOwnershipControls with the addition of
the ability to pass a context and additional request options.
See DeleteBucketOwnershipControls for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketPolicy

func (c * S3 ) DeleteBucketPolicy(input * DeleteBucketPolicyInput ) (* DeleteBucketPolicyOutput , error )
DeleteBucketPolicy API operation for Amazon Simple Storage Service.
This implementation of the DELETE action uses the policy subresource to delete
the policy of a specified bucket. If you are using an identity other than
the root user of the Amazon Web Services account that owns the bucket, the
calling identity must have the DeleteBucketPolicy permissions on the specified
bucket and belong to the bucket owner's account to use this operation.
If you don't have DeleteBucketPolicy permissions, Amazon S3 returns a 403
Access Denied error. If you have the correct permissions, but you're not
using an identity that belongs to the bucket owner's account, Amazon S3 returns
a 405 Method Not Allowed error.
To ensure that bucket owners don't inadvertently lock themselves out of their
own buckets, the root principal in a bucket owner's Amazon Web Services account
can perform the GetBucketPolicy, PutBucketPolicy, and DeleteBucketPolicy
API actions, even if their bucket policy explicitly denies the root principal's
access. Bucket owner root principals can only be blocked from performing
these API actions by VPC endpoint policies and Amazon Web Services Organizations
policies.
For more information about bucket policies, see Using Bucket Policies and
UserPolicies ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html ).
The following operations are related to DeleteBucketPolicy
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
DeleteObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketPolicy for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketPolicy    Example (Shared00)

To delete bucket policy
The following example deletes bucket policy on the specified bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteBucketPolicyInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.DeleteBucketPolicy(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) DeleteBucketPolicyRequest

func (c * S3 ) DeleteBucketPolicyRequest(input * DeleteBucketPolicyInput ) (req * request . Request , output * DeleteBucketPolicyOutput )
DeleteBucketPolicyRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketPolicy operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketPolicy for more information on using the DeleteBucketPolicy
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketPolicyRequest method.
req, resp := client.DeleteBucketPolicyRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketPolicy

func (*S3) DeleteBucketPolicyWithContext    added in  v1.8.0

func (c * S3 ) DeleteBucketPolicyWithContext(ctx aws . Context , input * DeleteBucketPolicyInput , opts ... request . Option ) (* DeleteBucketPolicyOutput , error )
DeleteBucketPolicyWithContext is the same as DeleteBucketPolicy with the addition of
the ability to pass a context and additional request options.
See DeleteBucketPolicy for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketReplication

func (c * S3 ) DeleteBucketReplication(input * DeleteBucketReplicationInput ) (* DeleteBucketReplicationOutput , error )
DeleteBucketReplication API operation for Amazon Simple Storage Service.
Deletes the replication configuration from the bucket.
To use this operation, you must have permissions to perform the s3:PutReplicationConfiguration
action. The bucket owner has these permissions by default and can grant it
to others. For more information about permissions, see Permissions Related
to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
It can take a while for the deletion of a replication configuration to fully
propagate.
For information about replication configuration, see Replication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html )
in the Amazon S3 User Guide.
The following operations are related to DeleteBucketReplication:
PutBucketReplication ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html )
GetBucketReplication ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketReplication for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketReplication    Example (Shared00)

To delete bucket replication configuration
The following example deletes replication configuration set on bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteBucketReplicationInput{
Bucket: aws.String("example"),
}

result, err := svc.DeleteBucketReplication(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) DeleteBucketReplicationRequest

func (c * S3 ) DeleteBucketReplicationRequest(input * DeleteBucketReplicationInput ) (req * request . Request , output * DeleteBucketReplicationOutput )
DeleteBucketReplicationRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketReplication operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketReplication for more information on using the DeleteBucketReplication
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketReplicationRequest method.
req, resp := client.DeleteBucketReplicationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketReplication

func (*S3) DeleteBucketReplicationWithContext    added in  v1.8.0

func (c * S3 ) DeleteBucketReplicationWithContext(ctx aws . Context , input * DeleteBucketReplicationInput , opts ... request . Option ) (* DeleteBucketReplicationOutput , error )
DeleteBucketReplicationWithContext is the same as DeleteBucketReplication with the addition of
the ability to pass a context and additional request options.
See DeleteBucketReplication for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketRequest

func (c * S3 ) DeleteBucketRequest(input * DeleteBucketInput ) (req * request . Request , output * DeleteBucketOutput )
DeleteBucketRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucket operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucket for more information on using the DeleteBucket
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketRequest method.
req, resp := client.DeleteBucketRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucket

func (*S3) DeleteBucketTagging

func (c * S3 ) DeleteBucketTagging(input * DeleteBucketTaggingInput ) (* DeleteBucketTaggingOutput , error )
DeleteBucketTagging API operation for Amazon Simple Storage Service.
Deletes the tags from the bucket.
To use this operation, you must have permission to perform the s3:PutBucketTagging
action. By default, the bucket owner has this permission and can grant this
permission to others.
The following operations are related to DeleteBucketTagging:
GetBucketTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html )
PutBucketTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketTagging for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketTagging    Example (Shared00)

To delete bucket tags
The following example deletes bucket tags.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteBucketTaggingInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.DeleteBucketTagging(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) DeleteBucketTaggingRequest

func (c * S3 ) DeleteBucketTaggingRequest(input * DeleteBucketTaggingInput ) (req * request . Request , output * DeleteBucketTaggingOutput )
DeleteBucketTaggingRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketTagging operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketTagging for more information on using the DeleteBucketTagging
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketTaggingRequest method.
req, resp := client.DeleteBucketTaggingRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketTagging

func (*S3) DeleteBucketTaggingWithContext    added in  v1.8.0

func (c * S3 ) DeleteBucketTaggingWithContext(ctx aws . Context , input * DeleteBucketTaggingInput , opts ... request . Option ) (* DeleteBucketTaggingOutput , error )
DeleteBucketTaggingWithContext is the same as DeleteBucketTagging with the addition of
the ability to pass a context and additional request options.
See DeleteBucketTagging for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketWebsite

func (c * S3 ) DeleteBucketWebsite(input * DeleteBucketWebsiteInput ) (* DeleteBucketWebsiteOutput , error )
DeleteBucketWebsite API operation for Amazon Simple Storage Service.
This action removes the website configuration for a bucket. Amazon S3 returns
a 200 OK response upon successfully deleting a website configuration on the
specified bucket. You will get a 200 OK response if the website configuration
you are trying to delete does not exist on the bucket. Amazon S3 returns
a 404 response if the bucket specified in the request does not exist.
This DELETE action requires the S3:DeleteBucketWebsite permission. By default,
only the bucket owner can delete the website configuration attached to a
bucket. However, bucket owners can grant other users permission to delete
the website configuration by writing a bucket policy granting them the S3:DeleteBucketWebsite
permission.
For more information about hosting websites, see Hosting Websites on Amazon
S3 ( https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html ).
The following operations are related to DeleteBucketWebsite:
GetBucketWebsite ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketWebsite.html )
PutBucketWebsite ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteBucketWebsite for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketWebsite    Example (Shared00)

To delete bucket website configuration
The following example deletes bucket website configuration.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteBucketWebsiteInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.DeleteBucketWebsite(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) DeleteBucketWebsiteRequest

func (c * S3 ) DeleteBucketWebsiteRequest(input * DeleteBucketWebsiteInput ) (req * request . Request , output * DeleteBucketWebsiteOutput )
DeleteBucketWebsiteRequest generates a "aws/request.Request" representing the
client's request for the DeleteBucketWebsite operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteBucketWebsite for more information on using the DeleteBucketWebsite
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteBucketWebsiteRequest method.
req, resp := client.DeleteBucketWebsiteRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketWebsite

func (*S3) DeleteBucketWebsiteWithContext    added in  v1.8.0

func (c * S3 ) DeleteBucketWebsiteWithContext(ctx aws . Context , input * DeleteBucketWebsiteInput , opts ... request . Option ) (* DeleteBucketWebsiteOutput , error )
DeleteBucketWebsiteWithContext is the same as DeleteBucketWebsite with the addition of
the ability to pass a context and additional request options.
See DeleteBucketWebsite for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteBucketWithContext    added in  v1.8.0

func (c * S3 ) DeleteBucketWithContext(ctx aws . Context , input * DeleteBucketInput , opts ... request . Option ) (* DeleteBucketOutput , error )
DeleteBucketWithContext is the same as DeleteBucket with the addition of
the ability to pass a context and additional request options.
See DeleteBucket for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteObject

func (c * S3 ) DeleteObject(input * DeleteObjectInput ) (* DeleteObjectOutput , error )
DeleteObject API operation for Amazon Simple Storage Service.
Removes the null version (if there is one) of an object and inserts a delete
marker, which becomes the latest version of the object. If there isn't a
null version, Amazon S3 does not remove any objects but will still respond
that the command was successful.
To remove a specific version, you must use the version Id subresource. Using
this subresource permanently deletes the version. If the object deleted is
a delete marker, Amazon S3 sets the response header, x-amz-delete-marker,
to true.
If the object you want to delete is in a bucket where the bucket versioning
configuration is MFA Delete enabled, you must include the x-amz-mfa request
header in the DELETE versionId request. Requests that include x-amz-mfa must
use HTTPS.
For more information about MFA Delete, see Using MFA Delete ( https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html ).
To see sample requests that use versioning, see Sample Request ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectDELETE.html#ExampleVersionObjectDelete ).
You can delete objects by explicitly calling DELETE Object or configure its
lifecycle (PutBucketLifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html ))
to enable Amazon S3 to remove them for you. If you want to block users or
accounts from removing or deleting objects from your bucket, you must deny
them the s3:DeleteObject, s3:DeleteObjectVersion, and s3:PutLifeCycleConfiguration
actions.
The following action is related to DeleteObject:  PutObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteObject for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObject    Example (Shared00)

To delete an object (from a non-versioned bucket)
The following example deletes an object from a non-versioned bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteObjectInput{
Bucket: aws.String("ExampleBucket"),
Key:    aws.String("HappyFace.jpg"),
}

result, err := svc.DeleteObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared01)

To delete an object
The following example deletes an object from an S3 bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteObjectInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("objectkey.jpg"),
}

result, err := svc.DeleteObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) DeleteObjectRequest

func (c * S3 ) DeleteObjectRequest(input * DeleteObjectInput ) (req * request . Request , output * DeleteObjectOutput )
DeleteObjectRequest generates a "aws/request.Request" representing the
client's request for the DeleteObject operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteObject for more information on using the DeleteObject
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteObjectRequest method.
req, resp := client.DeleteObjectRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObject

func (*S3) DeleteObjectTagging    added in  v1.5.11

func (c * S3 ) DeleteObjectTagging(input * DeleteObjectTaggingInput ) (* DeleteObjectTaggingOutput , error )
DeleteObjectTagging API operation for Amazon Simple Storage Service.
Removes the entire tag set from the specified object. For more information
about managing object tags, see Object Tagging ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html ).
To use this operation, you must have permission to perform the s3:DeleteObjectTagging
action.
To delete tags of a specific object version, add the versionId query parameter
in the request. You will need permission for the s3:DeleteObjectVersionTagging
action.
The following operations are related to DeleteObjectTagging:
PutObjectTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html )
GetObjectTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteObjectTagging for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjectTagging    Example (Shared00)

To remove tag set from an object version
The following example removes tag set associated with the specified object version.
The request specifies both the object key and object version.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteObjectTaggingInput{
Bucket:    aws.String("examplebucket"),
Key:       aws.String("HappyFace.jpg"),
VersionId: aws.String("ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI"),
}

result, err := svc.DeleteObjectTagging(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared01)

To remove tag set from an object
The following example removes tag set associated with the specified object. If the
bucket is versioning enabled, the operation removes tag set from the latest object
version.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteObjectTaggingInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("HappyFace.jpg"),
}

result, err := svc.DeleteObjectTagging(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) DeleteObjectTaggingRequest    added in  v1.5.11

func (c * S3 ) DeleteObjectTaggingRequest(input * DeleteObjectTaggingInput ) (req * request . Request , output * DeleteObjectTaggingOutput )
DeleteObjectTaggingRequest generates a "aws/request.Request" representing the
client's request for the DeleteObjectTagging operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteObjectTagging for more information on using the DeleteObjectTagging
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteObjectTaggingRequest method.
req, resp := client.DeleteObjectTaggingRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjectTagging

func (*S3) DeleteObjectTaggingWithContext    added in  v1.8.0

func (c * S3 ) DeleteObjectTaggingWithContext(ctx aws . Context , input * DeleteObjectTaggingInput , opts ... request . Option ) (* DeleteObjectTaggingOutput , error )
DeleteObjectTaggingWithContext is the same as DeleteObjectTagging with the addition of
the ability to pass a context and additional request options.
See DeleteObjectTagging for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteObjectWithContext    added in  v1.8.0

func (c * S3 ) DeleteObjectWithContext(ctx aws . Context , input * DeleteObjectInput , opts ... request . Option ) (* DeleteObjectOutput , error )
DeleteObjectWithContext is the same as DeleteObject with the addition of
the ability to pass a context and additional request options.
See DeleteObject for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeleteObjects

func (c * S3 ) DeleteObjects(input * DeleteObjectsInput ) (* DeleteObjectsOutput , error )
DeleteObjects API operation for Amazon Simple Storage Service.
This action enables you to delete multiple objects from a bucket using a
single HTTP request. If you know the object keys that you want to delete,
then this action provides a suitable alternative to sending individual delete
requests, reducing per-request overhead.
The request contains a list of up to 1000 keys that you want to delete. In
the XML, you provide the object key names, and optionally, version IDs if
you want to delete a specific version of the object from a versioning-enabled
bucket. For each key, Amazon S3 performs a delete action and returns the
result of that delete, success, or failure, in the response. Note that if
the object specified in the request is not found, Amazon S3 returns the result
as deleted.
The action supports two modes for the response: verbose and quiet. By default,
the action uses verbose mode in which the response includes the result of
deletion of each key in your request. In quiet mode the response includes
only keys where the delete action encountered an error. For a successful
deletion, the action does not return any information about the delete in
the response body.
When performing this action on an MFA Delete enabled bucket, that attempts
to delete any versioned objects, you must include an MFA token. If you do
not provide one, the entire request will fail, even if there are non-versioned
objects you are trying to delete. If you provide an invalid token, whether
there are versioned keys in the request or not, the entire Multi-Object Delete
request will fail. For information about MFA Delete, see MFA Delete ( https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html#MultiFactorAuthenticationDelete ).
Finally, the Content-MD5 header is required for all Multi-Object Delete requests.
Amazon S3 uses the header value to ensure that your request body has not
been altered in transit.
The following operations are related to DeleteObjects:
CreateMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html )
UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html )
CompleteMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html )
ListParts ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html )
AbortMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeleteObjects for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjects    Example (Shared00)

To delete multiple object versions from a versioned bucket
The following example deletes objects from a bucket. The request specifies object
versions. S3 deletes specific object versions and returns the key and versions of
deleted objects in the response.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteObjectsInput{
Bucket: aws.String("examplebucket"),
Delete: &s3.Delete{
Objects: []*s3.ObjectIdentifier{
{
Key:       aws.String("HappyFace.jpg"),
VersionId: aws.String("2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b"),
},
{
Key:       aws.String("HappyFace.jpg"),
VersionId: aws.String("yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd"),
},
},
Quiet: aws.Bool(false),
},
}

result, err := svc.DeleteObjects(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared01)

To delete multiple objects from a versioned bucket
The following example deletes objects from a bucket. The bucket is versioned, and
the request does not specify the object version to delete. In this case, all versions
remain in the bucket and S3 adds a delete marker.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.DeleteObjectsInput{
Bucket: aws.String("examplebucket"),
Delete: &s3.Delete{
Objects: []*s3.ObjectIdentifier{
{
Key: aws.String("objectkey1"),
},
{
Key: aws.String("objectkey2"),
},
},
Quiet: aws.Bool(false),
},
}

result, err := svc.DeleteObjects(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) DeleteObjectsRequest

func (c * S3 ) DeleteObjectsRequest(input * DeleteObjectsInput ) (req * request . Request , output * DeleteObjectsOutput )
DeleteObjectsRequest generates a "aws/request.Request" representing the
client's request for the DeleteObjects operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeleteObjects for more information on using the DeleteObjects
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeleteObjectsRequest method.
req, resp := client.DeleteObjectsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteObjects

func (*S3) DeleteObjectsWithContext    added in  v1.8.0

func (c * S3 ) DeleteObjectsWithContext(ctx aws . Context , input * DeleteObjectsInput , opts ... request . Option ) (* DeleteObjectsOutput , error )
DeleteObjectsWithContext is the same as DeleteObjects with the addition of
the ability to pass a context and additional request options.
See DeleteObjects for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) DeletePublicAccessBlock    added in  v1.15.77

func (c * S3 ) DeletePublicAccessBlock(input * DeletePublicAccessBlockInput ) (* DeletePublicAccessBlockOutput , error )
DeletePublicAccessBlock API operation for Amazon Simple Storage Service.
Removes the PublicAccessBlock configuration for an Amazon S3 bucket. To use
this operation, you must have the s3:PutBucketPublicAccessBlock permission.
For more information about permissions, see Permissions Related to Bucket
Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
The following operations are related to DeletePublicAccessBlock:
Using Amazon S3 Block Public Access ( https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html )
GetPublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html )
PutPublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html )
GetBucketPolicyStatus ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicyStatus.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation DeletePublicAccessBlock for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeletePublicAccessBlock

func (*S3) DeletePublicAccessBlockRequest    added in  v1.15.77

func (c * S3 ) DeletePublicAccessBlockRequest(input * DeletePublicAccessBlockInput ) (req * request . Request , output * DeletePublicAccessBlockOutput )
DeletePublicAccessBlockRequest generates a "aws/request.Request" representing the
client's request for the DeletePublicAccessBlock operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See DeletePublicAccessBlock for more information on using the DeletePublicAccessBlock
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the DeletePublicAccessBlockRequest method.
req, resp := client.DeletePublicAccessBlockRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeletePublicAccessBlock

func (*S3) DeletePublicAccessBlockWithContext    added in  v1.15.77

func (c * S3 ) DeletePublicAccessBlockWithContext(ctx aws . Context , input * DeletePublicAccessBlockInput , opts ... request . Option ) (* DeletePublicAccessBlockOutput , error )
DeletePublicAccessBlockWithContext is the same as DeletePublicAccessBlock with the addition of
the ability to pass a context and additional request options.
See DeletePublicAccessBlock for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketAccelerateConfiguration    added in  v1.1.19

func (c * S3 ) GetBucketAccelerateConfiguration(input * GetBucketAccelerateConfigurationInput ) (* GetBucketAccelerateConfigurationOutput , error )
GetBucketAccelerateConfiguration API operation for Amazon Simple Storage Service.
This implementation of the GET action uses the accelerate subresource to
return the Transfer Acceleration state of a bucket, which is either Enabled
or Suspended. Amazon S3 Transfer Acceleration is a bucket-level feature that
enables you to perform faster data transfers to and from Amazon S3.
To use this operation, you must have permission to perform the s3:GetAccelerateConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html )
in the Amazon S3 User Guide.
You set the Transfer Acceleration state of an existing bucket to Enabled
or Suspended by using the PutBucketAccelerateConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html )
operation.
A GET accelerate request does not return a state value for a bucket that
has no transfer acceleration state. A bucket has no Transfer Acceleration
state if a state has never been set on the bucket.
For more information about transfer acceleration, see Transfer Acceleration
( https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html )
in the Amazon S3 User Guide.
The following operations are related to GetBucketAccelerateConfiguration:  PutBucketAccelerateConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketAccelerateConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAccelerateConfiguration

func (*S3) GetBucketAccelerateConfigurationRequest    added in  v1.1.19

func (c * S3 ) GetBucketAccelerateConfigurationRequest(input * GetBucketAccelerateConfigurationInput ) (req * request . Request , output * GetBucketAccelerateConfigurationOutput )
GetBucketAccelerateConfigurationRequest generates a "aws/request.Request" representing the
client's request for the GetBucketAccelerateConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketAccelerateConfiguration for more information on using the GetBucketAccelerateConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketAccelerateConfigurationRequest method.
req, resp := client.GetBucketAccelerateConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAccelerateConfiguration

func (*S3) GetBucketAccelerateConfigurationWithContext    added in  v1.8.0

func (c * S3 ) GetBucketAccelerateConfigurationWithContext(ctx aws . Context , input * GetBucketAccelerateConfigurationInput , opts ... request . Option ) (* GetBucketAccelerateConfigurationOutput , error )
GetBucketAccelerateConfigurationWithContext is the same as GetBucketAccelerateConfiguration with the addition of
the ability to pass a context and additional request options.
See GetBucketAccelerateConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketAcl    added in  v0.9.5

func (c * S3 ) GetBucketAcl(input * GetBucketAclInput ) (* GetBucketAclOutput , error )
GetBucketAcl API operation for Amazon Simple Storage Service.
This implementation of the GET action uses the acl subresource to return
the access control list (ACL) of a bucket. To use GET to return the ACL of
the bucket, you must have READ_ACP access to the bucket. If READ_ACP permission
is granted to the anonymous user, you can return the ACL of the bucket without
using an authorization header.
To use this API operation against an access point, provide the alias of the
access point in place of the bucket name.
To use this API operation against an Object Lambda access point, provide
the alias of the Object Lambda access point in place of the bucket name.
If the Object Lambda access point alias in a request is not valid, the error
code InvalidAccessPointAliasError is returned. For more information about
InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).
If your bucket uses the bucket owner enforced setting for S3 Object Ownership,
requests to read ACLs are still supported and return the bucket-owner-full-control
ACL with the owner being the account that created the bucket. For more information,
see Controlling object ownership and disabling ACLs ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html )
in the Amazon S3 User Guide.
The following operations are related to GetBucketAcl:  ListObjects ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketAcl for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAcl

func (*S3) GetBucketAclRequest    added in  v0.9.5

func (c * S3 ) GetBucketAclRequest(input * GetBucketAclInput ) (req * request . Request , output * GetBucketAclOutput )
GetBucketAclRequest generates a "aws/request.Request" representing the
client's request for the GetBucketAcl operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketAcl for more information on using the GetBucketAcl
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketAclRequest method.
req, resp := client.GetBucketAclRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAcl

func (*S3) GetBucketAclWithContext    added in  v1.8.0

func (c * S3 ) GetBucketAclWithContext(ctx aws . Context , input * GetBucketAclInput , opts ... request . Option ) (* GetBucketAclOutput , error )
GetBucketAclWithContext is the same as GetBucketAcl with the addition of
the ability to pass a context and additional request options.
See GetBucketAcl for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketAnalyticsConfiguration    added in  v1.5.11

func (c * S3 ) GetBucketAnalyticsConfiguration(input * GetBucketAnalyticsConfigurationInput ) (* GetBucketAnalyticsConfigurationOutput , error )
GetBucketAnalyticsConfiguration API operation for Amazon Simple Storage Service.
This implementation of the GET action returns an analytics configuration
(identified by the analytics configuration ID) from the bucket.
To use this operation, you must have permissions to perform the s3:GetAnalyticsConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html )
in the Amazon S3 User Guide.
For information about Amazon S3 analytics feature, see Amazon S3 Analytics
– Storage Class Analysis ( https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html )
in the Amazon S3 User Guide.
The following operations are related to GetBucketAnalyticsConfiguration:
DeleteBucketAnalyticsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html )
ListBucketAnalyticsConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketAnalyticsConfigurations.html )
PutBucketAnalyticsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketAnalyticsConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAnalyticsConfiguration

func (*S3) GetBucketAnalyticsConfigurationRequest    added in  v1.5.11

func (c * S3 ) GetBucketAnalyticsConfigurationRequest(input * GetBucketAnalyticsConfigurationInput ) (req * request . Request , output * GetBucketAnalyticsConfigurationOutput )
GetBucketAnalyticsConfigurationRequest generates a "aws/request.Request" representing the
client's request for the GetBucketAnalyticsConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketAnalyticsConfiguration for more information on using the GetBucketAnalyticsConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketAnalyticsConfigurationRequest method.
req, resp := client.GetBucketAnalyticsConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketAnalyticsConfiguration

func (*S3) GetBucketAnalyticsConfigurationWithContext    added in  v1.8.0

func (c * S3 ) GetBucketAnalyticsConfigurationWithContext(ctx aws . Context , input * GetBucketAnalyticsConfigurationInput , opts ... request . Option ) (* GetBucketAnalyticsConfigurationOutput , error )
GetBucketAnalyticsConfigurationWithContext is the same as GetBucketAnalyticsConfiguration with the addition of
the ability to pass a context and additional request options.
See GetBucketAnalyticsConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketCors    added in  v0.9.5

func (c * S3 ) GetBucketCors(input * GetBucketCorsInput ) (* GetBucketCorsOutput , error )
GetBucketCors API operation for Amazon Simple Storage Service.
Returns the Cross-Origin Resource Sharing (CORS) configuration information
set for the bucket.
To use this operation, you must have permission to perform the s3:GetBucketCORS
action. By default, the bucket owner has this permission and can grant it
to others.
To use this API operation against an access point, provide the alias of the
access point in place of the bucket name.
To use this API operation against an Object Lambda access point, provide
the alias of the Object Lambda access point in place of the bucket name.
If the Object Lambda access point alias in a request is not valid, the error
code InvalidAccessPointAliasError is returned. For more information about
InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).
For more information about CORS, see Enabling Cross-Origin Resource Sharing
( https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html ).
The following operations are related to GetBucketCors:
PutBucketCors ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html )
DeleteBucketCors ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketCors for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketCors    Example (Shared00)

To get cors configuration set on a bucket
The following example returns cross-origin resource sharing (CORS) configuration
set on a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketCorsInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketCors(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketCorsRequest    added in  v0.9.5

func (c * S3 ) GetBucketCorsRequest(input * GetBucketCorsInput ) (req * request . Request , output * GetBucketCorsOutput )
GetBucketCorsRequest generates a "aws/request.Request" representing the
client's request for the GetBucketCors operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketCors for more information on using the GetBucketCors
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketCorsRequest method.
req, resp := client.GetBucketCorsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketCors

func (*S3) GetBucketCorsWithContext    added in  v1.8.0

func (c * S3 ) GetBucketCorsWithContext(ctx aws . Context , input * GetBucketCorsInput , opts ... request . Option ) (* GetBucketCorsOutput , error )
GetBucketCorsWithContext is the same as GetBucketCors with the addition of
the ability to pass a context and additional request options.
See GetBucketCors for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketEncryption    added in  v1.12.24

func (c * S3 ) GetBucketEncryption(input * GetBucketEncryptionInput ) (* GetBucketEncryptionOutput , error )
GetBucketEncryption API operation for Amazon Simple Storage Service.
Returns the default encryption configuration for an Amazon S3 bucket. By
default, all buckets have a default encryption configuration that uses server-side
encryption with Amazon S3 managed keys (SSE-S3). For information about the
bucket default encryption feature, see Amazon S3 Bucket Default Encryption
( https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html )
in the Amazon S3 User Guide.
To use this operation, you must have permission to perform the s3:GetEncryptionConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
The following operations are related to GetBucketEncryption:
PutBucketEncryption ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html )
DeleteBucketEncryption ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketEncryption.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketEncryption for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketEncryption

func (*S3) GetBucketEncryptionRequest    added in  v1.12.24

func (c * S3 ) GetBucketEncryptionRequest(input * GetBucketEncryptionInput ) (req * request . Request , output * GetBucketEncryptionOutput )
GetBucketEncryptionRequest generates a "aws/request.Request" representing the
client's request for the GetBucketEncryption operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketEncryption for more information on using the GetBucketEncryption
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketEncryptionRequest method.
req, resp := client.GetBucketEncryptionRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketEncryption

func (*S3) GetBucketEncryptionWithContext    added in  v1.12.24

func (c * S3 ) GetBucketEncryptionWithContext(ctx aws . Context , input * GetBucketEncryptionInput , opts ... request . Option ) (* GetBucketEncryptionOutput , error )
GetBucketEncryptionWithContext is the same as GetBucketEncryption with the addition of
the ability to pass a context and additional request options.
See GetBucketEncryption for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketIntelligentTieringConfiguration    added in  v1.35.24

func (c * S3 ) GetBucketIntelligentTieringConfiguration(input * GetBucketIntelligentTieringConfigurationInput ) (* GetBucketIntelligentTieringConfigurationOutput , error )
GetBucketIntelligentTieringConfiguration API operation for Amazon Simple Storage Service.
Gets the S3 Intelligent-Tiering configuration from the specified bucket.
The S3 Intelligent-Tiering storage class is designed to optimize storage
costs by automatically moving data to the most cost-effective storage access
tier, without performance impact or operational overhead. S3 Intelligent-Tiering
delivers automatic cost savings in three low latency and high throughput
access tiers. To get the lowest storage cost on data that can be accessed
in minutes to hours, you can choose to activate additional archiving capabilities.
The S3 Intelligent-Tiering storage class is the ideal storage class for data
with unknown, changing, or unpredictable access patterns, independent of
object size or retention period. If the size of an object is less than 128
KB, it is not monitored and not eligible for auto-tiering. Smaller objects
can be stored, but they are always charged at the Frequent Access tier rates
in the S3 Intelligent-Tiering storage class.
For more information, see Storage class for automatically optimizing frequently
and infrequently accessed objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access ).
Operations related to GetBucketIntelligentTieringConfiguration include:
DeleteBucketIntelligentTieringConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketIntelligentTieringConfiguration.html )
PutBucketIntelligentTieringConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html )
ListBucketIntelligentTieringConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketIntelligentTieringConfigurations.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketIntelligentTieringConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketIntelligentTieringConfiguration

func (*S3) GetBucketIntelligentTieringConfigurationRequest    added in  v1.35.24

func (c * S3 ) GetBucketIntelligentTieringConfigurationRequest(input * GetBucketIntelligentTieringConfigurationInput ) (req * request . Request , output * GetBucketIntelligentTieringConfigurationOutput )
GetBucketIntelligentTieringConfigurationRequest generates a "aws/request.Request" representing the
client's request for the GetBucketIntelligentTieringConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketIntelligentTieringConfiguration for more information on using the GetBucketIntelligentTieringConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketIntelligentTieringConfigurationRequest method.
req, resp := client.GetBucketIntelligentTieringConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketIntelligentTieringConfiguration

func (*S3) GetBucketIntelligentTieringConfigurationWithContext    added in  v1.35.24

func (c * S3 ) GetBucketIntelligentTieringConfigurationWithContext(ctx aws . Context , input * GetBucketIntelligentTieringConfigurationInput , opts ... request . Option ) (* GetBucketIntelligentTieringConfigurationOutput , error )
GetBucketIntelligentTieringConfigurationWithContext is the same as GetBucketIntelligentTieringConfiguration with the addition of
the ability to pass a context and additional request options.
See GetBucketIntelligentTieringConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketInventoryConfiguration    added in  v1.5.11

func (c * S3 ) GetBucketInventoryConfiguration(input * GetBucketInventoryConfigurationInput ) (* GetBucketInventoryConfigurationOutput , error )
GetBucketInventoryConfiguration API operation for Amazon Simple Storage Service.
Returns an inventory configuration (identified by the inventory configuration
ID) from the bucket.
To use this operation, you must have permissions to perform the s3:GetInventoryConfiguration
action. The bucket owner has this permission by default and can grant this
permission to others. For more information about permissions, see Permissions
Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
For information about the Amazon S3 inventory feature, see Amazon S3 Inventory
( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html ).
The following operations are related to GetBucketInventoryConfiguration:
DeleteBucketInventoryConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html )
ListBucketInventoryConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html )
PutBucketInventoryConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketInventoryConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketInventoryConfiguration

func (*S3) GetBucketInventoryConfigurationRequest    added in  v1.5.11

func (c * S3 ) GetBucketInventoryConfigurationRequest(input * GetBucketInventoryConfigurationInput ) (req * request . Request , output * GetBucketInventoryConfigurationOutput )
GetBucketInventoryConfigurationRequest generates a "aws/request.Request" representing the
client's request for the GetBucketInventoryConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketInventoryConfiguration for more information on using the GetBucketInventoryConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketInventoryConfigurationRequest method.
req, resp := client.GetBucketInventoryConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketInventoryConfiguration

func (*S3) GetBucketInventoryConfigurationWithContext    added in  v1.8.0

func (c * S3 ) GetBucketInventoryConfigurationWithContext(ctx aws . Context , input * GetBucketInventoryConfigurationInput , opts ... request . Option ) (* GetBucketInventoryConfigurationOutput , error )
GetBucketInventoryConfigurationWithContext is the same as GetBucketInventoryConfiguration with the addition of
the ability to pass a context and additional request options.
See GetBucketInventoryConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketLifecycle  deprecated


func (c * S3 ) GetBucketLifecycle(input * GetBucketLifecycleInput ) (* GetBucketLifecycleOutput , error )
GetBucketLifecycle API operation for Amazon Simple Storage Service.
For an updated version of this API, see GetBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html ).
If you configured a bucket lifecycle using the filter element, you should
see the updated version of this topic. This topic is provided for backward
compatibility.
Returns the lifecycle configuration information set on the bucket. For information
about lifecycle configuration, see Object Lifecycle Management ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html ).
To use this operation, you must have permission to perform the s3:GetLifecycleConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
GetBucketLifecycle has the following special error:  Error code: NoSuchLifecycleConfiguration Description: The lifecycle
configuration does not exist. HTTP Status Code: 404 Not Found SOAP Fault
Code Prefix: Client
The following operations are related to GetBucketLifecycle:
GetBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html )
PutBucketLifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html )
DeleteBucketLifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketLifecycle for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycle
Deprecated: GetBucketLifecycle has been deprecated   Example (Shared00)

To get a bucket acl
The following example gets ACL on the specified bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketLifecycleInput{
Bucket: aws.String("acl1"),
}

result, err := svc.GetBucketLifecycle(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketLifecycleConfiguration    added in  v0.9.8

func (c * S3 ) GetBucketLifecycleConfiguration(input * GetBucketLifecycleConfigurationInput ) (* GetBucketLifecycleConfigurationOutput , error )
GetBucketLifecycleConfiguration API operation for Amazon Simple Storage Service.
Bucket lifecycle configuration now supports specifying a lifecycle rule using
an object key name prefix, one or more object tags, or a combination of both.
Accordingly, this section describes the latest API. The response describes
the new filter element that you can use to specify a filter to select a subset
of objects to which the rule applies. If you are using a previous version
of the lifecycle configuration, it still works. For the earlier action, see
GetBucketLifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html ).
Returns the lifecycle configuration information set on the bucket. For information
about lifecycle configuration, see Object Lifecycle Management ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html ).
To use this operation, you must have permission to perform the s3:GetLifecycleConfiguration
action. The bucket owner has this permission, by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
GetBucketLifecycleConfiguration has the following special error:  Error code: NoSuchLifecycleConfiguration Description: The lifecycle
configuration does not exist. HTTP Status Code: 404 Not Found SOAP Fault
Code Prefix: Client
The following operations are related to GetBucketLifecycleConfiguration:
GetBucketLifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html )
PutBucketLifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html )
DeleteBucketLifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketLifecycleConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycleConfiguration    Example (Shared00)

To get lifecycle configuration on a bucket
The following example retrieves lifecycle configuration on set on a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketLifecycleConfigurationInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketLifecycleConfiguration(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketLifecycleConfigurationRequest    added in  v0.9.8

func (c * S3 ) GetBucketLifecycleConfigurationRequest(input * GetBucketLifecycleConfigurationInput ) (req * request . Request , output * GetBucketLifecycleConfigurationOutput )
GetBucketLifecycleConfigurationRequest generates a "aws/request.Request" representing the
client's request for the GetBucketLifecycleConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketLifecycleConfiguration for more information on using the GetBucketLifecycleConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketLifecycleConfigurationRequest method.
req, resp := client.GetBucketLifecycleConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycleConfiguration

func (*S3) GetBucketLifecycleConfigurationWithContext    added in  v1.8.0

func (c * S3 ) GetBucketLifecycleConfigurationWithContext(ctx aws . Context , input * GetBucketLifecycleConfigurationInput , opts ... request . Option ) (* GetBucketLifecycleConfigurationOutput , error )
GetBucketLifecycleConfigurationWithContext is the same as GetBucketLifecycleConfiguration with the addition of
the ability to pass a context and additional request options.
See GetBucketLifecycleConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketLifecycleRequest  deprecated


func (c * S3 ) GetBucketLifecycleRequest(input * GetBucketLifecycleInput ) (req * request . Request , output * GetBucketLifecycleOutput )
GetBucketLifecycleRequest generates a "aws/request.Request" representing the
client's request for the GetBucketLifecycle operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketLifecycle for more information on using the GetBucketLifecycle
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketLifecycleRequest method.
req, resp := client.GetBucketLifecycleRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycle
Deprecated: GetBucketLifecycle has been deprecated

func (*S3) GetBucketLifecycleWithContext  deprecated     added in  v1.8.0


func (c * S3 ) GetBucketLifecycleWithContext(ctx aws . Context , input * GetBucketLifecycleInput , opts ... request . Option ) (* GetBucketLifecycleOutput , error )
GetBucketLifecycleWithContext is the same as GetBucketLifecycle with the addition of
the ability to pass a context and additional request options.
See GetBucketLifecycle for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.
Deprecated: GetBucketLifecycleWithContext has been deprecated

func (*S3) GetBucketLocation

func (c * S3 ) GetBucketLocation(input * GetBucketLocationInput ) (* GetBucketLocationOutput , error )
GetBucketLocation API operation for Amazon Simple Storage Service.
Returns the Region the bucket resides in. You set the bucket's Region using
the LocationConstraint request parameter in a CreateBucket request. For more
information, see CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html ).
To use this API operation against an access point, provide the alias of the
access point in place of the bucket name.
To use this API operation against an Object Lambda access point, provide
the alias of the Object Lambda access point in place of the bucket name.
If the Object Lambda access point alias in a request is not valid, the error
code InvalidAccessPointAliasError is returned. For more information about
InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).
We recommend that you use HeadBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_HeadBucket.html )
to return the Region that a bucket resides in. For backward compatibility,
Amazon S3 continues to support GetBucketLocation.
The following operations are related to GetBucketLocation:
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketLocation for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLocation    Example (Shared00)

To get bucket location
The following example returns bucket location.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketLocationInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketLocation(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketLocationRequest

func (c * S3 ) GetBucketLocationRequest(input * GetBucketLocationInput ) (req * request . Request , output * GetBucketLocationOutput )
GetBucketLocationRequest generates a "aws/request.Request" representing the
client's request for the GetBucketLocation operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketLocation for more information on using the GetBucketLocation
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketLocationRequest method.
req, resp := client.GetBucketLocationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLocation

func (*S3) GetBucketLocationWithContext    added in  v1.8.0

func (c * S3 ) GetBucketLocationWithContext(ctx aws . Context , input * GetBucketLocationInput , opts ... request . Option ) (* GetBucketLocationOutput , error )
GetBucketLocationWithContext is the same as GetBucketLocation with the addition of
the ability to pass a context and additional request options.
See GetBucketLocation for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketLogging

func (c * S3 ) GetBucketLogging(input * GetBucketLoggingInput ) (* GetBucketLoggingOutput , error )
GetBucketLogging API operation for Amazon Simple Storage Service.
Returns the logging status of a bucket and the permissions users have to
view and modify that status.
The following operations are related to GetBucketLogging:
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
PutBucketLogging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLogging.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketLogging for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLogging

func (*S3) GetBucketLoggingRequest

func (c * S3 ) GetBucketLoggingRequest(input * GetBucketLoggingInput ) (req * request . Request , output * GetBucketLoggingOutput )
GetBucketLoggingRequest generates a "aws/request.Request" representing the
client's request for the GetBucketLogging operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketLogging for more information on using the GetBucketLogging
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketLoggingRequest method.
req, resp := client.GetBucketLoggingRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLogging

func (*S3) GetBucketLoggingWithContext    added in  v1.8.0

func (c * S3 ) GetBucketLoggingWithContext(ctx aws . Context , input * GetBucketLoggingInput , opts ... request . Option ) (* GetBucketLoggingOutput , error )
GetBucketLoggingWithContext is the same as GetBucketLogging with the addition of
the ability to pass a context and additional request options.
See GetBucketLogging for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketMetricsConfiguration    added in  v1.5.11

func (c * S3 ) GetBucketMetricsConfiguration(input * GetBucketMetricsConfigurationInput ) (* GetBucketMetricsConfigurationOutput , error )
GetBucketMetricsConfiguration API operation for Amazon Simple Storage Service.
Gets a metrics configuration (specified by the metrics configuration ID)
from the bucket. Note that this doesn't include the daily storage metrics.
To use this operation, you must have permissions to perform the s3:GetMetricsConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
For information about CloudWatch request metrics for Amazon S3, see Monitoring
Metrics with Amazon CloudWatch ( https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html ).
The following operations are related to GetBucketMetricsConfiguration:
PutBucketMetricsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html )
DeleteBucketMetricsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketMetricsConfiguration.html )
ListBucketMetricsConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketMetricsConfigurations.html )
Monitoring Metrics with Amazon CloudWatch ( https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketMetricsConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketMetricsConfiguration

func (*S3) GetBucketMetricsConfigurationRequest    added in  v1.5.11

func (c * S3 ) GetBucketMetricsConfigurationRequest(input * GetBucketMetricsConfigurationInput ) (req * request . Request , output * GetBucketMetricsConfigurationOutput )
GetBucketMetricsConfigurationRequest generates a "aws/request.Request" representing the
client's request for the GetBucketMetricsConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketMetricsConfiguration for more information on using the GetBucketMetricsConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketMetricsConfigurationRequest method.
req, resp := client.GetBucketMetricsConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketMetricsConfiguration

func (*S3) GetBucketMetricsConfigurationWithContext    added in  v1.8.0

func (c * S3 ) GetBucketMetricsConfigurationWithContext(ctx aws . Context , input * GetBucketMetricsConfigurationInput , opts ... request . Option ) (* GetBucketMetricsConfigurationOutput , error )
GetBucketMetricsConfigurationWithContext is the same as GetBucketMetricsConfiguration with the addition of
the ability to pass a context and additional request options.
See GetBucketMetricsConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketNotification  deprecated


func (c * S3 ) GetBucketNotification(input * GetBucketNotificationConfigurationRequest ) (* NotificationConfigurationDeprecated , error )
GetBucketNotification API operation for Amazon Simple Storage Service.
No longer used, see GetBucketNotificationConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketNotificationConfiguration.html ).
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketNotification for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketNotification
Deprecated: GetBucketNotification has been deprecated   Example (Shared00)

To get notification configuration set on a bucket
The following example returns notification configuration set on a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketNotificationConfigurationRequest{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketNotification(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared01)

To get notification configuration set on a bucket
The following example returns notification configuration set on a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketNotificationConfigurationRequest{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketNotification(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketNotificationConfiguration

func (c * S3 ) GetBucketNotificationConfiguration(input * GetBucketNotificationConfigurationRequest ) (* NotificationConfiguration , error )
GetBucketNotificationConfiguration API operation for Amazon Simple Storage Service.
Returns the notification configuration of a bucket.
If notifications are not enabled on the bucket, the action returns an empty
NotificationConfiguration element.
By default, you must be the bucket owner to read the notification configuration
of a bucket. However, the bucket owner can use a bucket policy to grant permission
to other users to read this configuration with the s3:GetBucketNotification
permission.
To use this API operation against an access point, provide the alias of the
access point in place of the bucket name.
To use this API operation against an Object Lambda access point, provide
the alias of the Object Lambda access point in place of the bucket name.
If the Object Lambda access point alias in a request is not valid, the error
code InvalidAccessPointAliasError is returned. For more information about
InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).
For more information about setting and reading the notification configuration
on a bucket, see Setting Up Notification of Bucket Events ( https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html ).
For more information about bucket policies, see Using Bucket Policies ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html ).
The following action is related to GetBucketNotification:  PutBucketNotification ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketNotification.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketNotificationConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketNotificationConfiguration

func (*S3) GetBucketNotificationConfigurationRequest

func (c * S3 ) GetBucketNotificationConfigurationRequest(input * GetBucketNotificationConfigurationRequest ) (req * request . Request , output * NotificationConfiguration )
GetBucketNotificationConfigurationRequest generates a "aws/request.Request" representing the
client's request for the GetBucketNotificationConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketNotificationConfiguration for more information on using the GetBucketNotificationConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketNotificationConfigurationRequest method.
req, resp := client.GetBucketNotificationConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketNotificationConfiguration

func (*S3) GetBucketNotificationConfigurationWithContext    added in  v1.8.0

func (c * S3 ) GetBucketNotificationConfigurationWithContext(ctx aws . Context , input * GetBucketNotificationConfigurationRequest , opts ... request . Option ) (* NotificationConfiguration , error )
GetBucketNotificationConfigurationWithContext is the same as GetBucketNotificationConfiguration with the addition of
the ability to pass a context and additional request options.
See GetBucketNotificationConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketNotificationRequest  deprecated


func (c * S3 ) GetBucketNotificationRequest(input * GetBucketNotificationConfigurationRequest ) (req * request . Request , output * NotificationConfigurationDeprecated )
GetBucketNotificationRequest generates a "aws/request.Request" representing the
client's request for the GetBucketNotification operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketNotification for more information on using the GetBucketNotification
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketNotificationRequest method.
req, resp := client.GetBucketNotificationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketNotification
Deprecated: GetBucketNotification has been deprecated

func (*S3) GetBucketNotificationWithContext  deprecated     added in  v1.8.0


func (c * S3 ) GetBucketNotificationWithContext(ctx aws . Context , input * GetBucketNotificationConfigurationRequest , opts ... request . Option ) (* NotificationConfigurationDeprecated , error )
GetBucketNotificationWithContext is the same as GetBucketNotification with the addition of
the ability to pass a context and additional request options.
See GetBucketNotification for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.
Deprecated: GetBucketNotificationWithContext has been deprecated

func (*S3) GetBucketOwnershipControls    added in  v1.35.2

func (c * S3 ) GetBucketOwnershipControls(input * GetBucketOwnershipControlsInput ) (* GetBucketOwnershipControlsOutput , error )
GetBucketOwnershipControls API operation for Amazon Simple Storage Service.
Retrieves OwnershipControls for an Amazon S3 bucket. To use this operation,
you must have the s3:GetBucketOwnershipControls permission. For more information
about Amazon S3 permissions, see Specifying permissions in a policy ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html ).
For information about Amazon S3 Object Ownership, see Using Object Ownership
( https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html ).
The following operations are related to GetBucketOwnershipControls:
PutBucketOwnershipControls
DeleteBucketOwnershipControls
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketOwnershipControls for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketOwnershipControls

func (*S3) GetBucketOwnershipControlsRequest    added in  v1.35.2

func (c * S3 ) GetBucketOwnershipControlsRequest(input * GetBucketOwnershipControlsInput ) (req * request . Request , output * GetBucketOwnershipControlsOutput )
GetBucketOwnershipControlsRequest generates a "aws/request.Request" representing the
client's request for the GetBucketOwnershipControls operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketOwnershipControls for more information on using the GetBucketOwnershipControls
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketOwnershipControlsRequest method.
req, resp := client.GetBucketOwnershipControlsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketOwnershipControls

func (*S3) GetBucketOwnershipControlsWithContext    added in  v1.35.2

func (c * S3 ) GetBucketOwnershipControlsWithContext(ctx aws . Context , input * GetBucketOwnershipControlsInput , opts ... request . Option ) (* GetBucketOwnershipControlsOutput , error )
GetBucketOwnershipControlsWithContext is the same as GetBucketOwnershipControls with the addition of
the ability to pass a context and additional request options.
See GetBucketOwnershipControls for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketPolicy

func (c * S3 ) GetBucketPolicy(input * GetBucketPolicyInput ) (* GetBucketPolicyOutput , error )
GetBucketPolicy API operation for Amazon Simple Storage Service.
Returns the policy of a specified bucket. If you are using an identity other
than the root user of the Amazon Web Services account that owns the bucket,
the calling identity must have the GetBucketPolicy permissions on the specified
bucket and belong to the bucket owner's account in order to use this operation.
If you don't have GetBucketPolicy permissions, Amazon S3 returns a 403 Access
Denied error. If you have the correct permissions, but you're not using an
identity that belongs to the bucket owner's account, Amazon S3 returns a
405 Method Not Allowed error.
To ensure that bucket owners don't inadvertently lock themselves out of their
own buckets, the root principal in a bucket owner's Amazon Web Services account
can perform the GetBucketPolicy, PutBucketPolicy, and DeleteBucketPolicy
API actions, even if their bucket policy explicitly denies the root principal's
access. Bucket owner root principals can only be blocked from performing
these API actions by VPC endpoint policies and Amazon Web Services Organizations
policies.
To use this API operation against an access point, provide the alias of the
access point in place of the bucket name.
To use this API operation against an Object Lambda access point, provide
the alias of the Object Lambda access point in place of the bucket name.
If the Object Lambda access point alias in a request is not valid, the error
code InvalidAccessPointAliasError is returned. For more information about
InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).
For more information about bucket policies, see Using Bucket Policies and
User Policies ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html ).
The following action is related to GetBucketPolicy:  GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketPolicy for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketPolicy    Example (Shared00)

To get bucket policy
The following example returns bucket policy associated with a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketPolicyInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketPolicy(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketPolicyRequest

func (c * S3 ) GetBucketPolicyRequest(input * GetBucketPolicyInput ) (req * request . Request , output * GetBucketPolicyOutput )
GetBucketPolicyRequest generates a "aws/request.Request" representing the
client's request for the GetBucketPolicy operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketPolicy for more information on using the GetBucketPolicy
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketPolicyRequest method.
req, resp := client.GetBucketPolicyRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketPolicy

func (*S3) GetBucketPolicyStatus    added in  v1.15.77

func (c * S3 ) GetBucketPolicyStatus(input * GetBucketPolicyStatusInput ) (* GetBucketPolicyStatusOutput , error )
GetBucketPolicyStatus API operation for Amazon Simple Storage Service.
Retrieves the policy status for an Amazon S3 bucket, indicating whether the
bucket is public. In order to use this operation, you must have the s3:GetBucketPolicyStatus
permission. For more information about Amazon S3 permissions, see Specifying
Permissions in a Policy ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html ).
For more information about when Amazon S3 considers a bucket public, see
The Meaning of "Public" ( https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status ).
The following operations are related to GetBucketPolicyStatus:
Using Amazon S3 Block Public Access ( https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html )
GetPublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html )
PutPublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html )
DeletePublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketPolicyStatus for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketPolicyStatus

func (*S3) GetBucketPolicyStatusRequest    added in  v1.15.77

func (c * S3 ) GetBucketPolicyStatusRequest(input * GetBucketPolicyStatusInput ) (req * request . Request , output * GetBucketPolicyStatusOutput )
GetBucketPolicyStatusRequest generates a "aws/request.Request" representing the
client's request for the GetBucketPolicyStatus operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketPolicyStatus for more information on using the GetBucketPolicyStatus
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketPolicyStatusRequest method.
req, resp := client.GetBucketPolicyStatusRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketPolicyStatus

func (*S3) GetBucketPolicyStatusWithContext    added in  v1.15.77

func (c * S3 ) GetBucketPolicyStatusWithContext(ctx aws . Context , input * GetBucketPolicyStatusInput , opts ... request . Option ) (* GetBucketPolicyStatusOutput , error )
GetBucketPolicyStatusWithContext is the same as GetBucketPolicyStatus with the addition of
the ability to pass a context and additional request options.
See GetBucketPolicyStatus for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketPolicyWithContext    added in  v1.8.0

func (c * S3 ) GetBucketPolicyWithContext(ctx aws . Context , input * GetBucketPolicyInput , opts ... request . Option ) (* GetBucketPolicyOutput , error )
GetBucketPolicyWithContext is the same as GetBucketPolicy with the addition of
the ability to pass a context and additional request options.
See GetBucketPolicy for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketReplication

func (c * S3 ) GetBucketReplication(input * GetBucketReplicationInput ) (* GetBucketReplicationOutput , error )
GetBucketReplication API operation for Amazon Simple Storage Service.
Returns the replication configuration of a bucket.
It can take a while to propagate the put or delete a replication configuration
to all Amazon S3 systems. Therefore, a get request soon after put or delete
can return a wrong result.
For information about replication configuration, see Replication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html )
in the Amazon S3 User Guide.
This action requires permissions for the s3:GetReplicationConfiguration action.
For more information about permissions, see Using Bucket Policies and User
Policies ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html ).
If you include the Filter element in a replication configuration, you must
also include the DeleteMarkerReplication and Priority elements. The response
also returns those elements.
For information about GetBucketReplication errors, see List of replication-related
error codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ReplicationErrorCodeList )
The following operations are related to GetBucketReplication:
PutBucketReplication ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html )
DeleteBucketReplication ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketReplication for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketReplication    Example (Shared00)

To get replication configuration set on a bucket
The following example returns replication configuration set on a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketReplicationInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketReplication(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketReplicationRequest

func (c * S3 ) GetBucketReplicationRequest(input * GetBucketReplicationInput ) (req * request . Request , output * GetBucketReplicationOutput )
GetBucketReplicationRequest generates a "aws/request.Request" representing the
client's request for the GetBucketReplication operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketReplication for more information on using the GetBucketReplication
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketReplicationRequest method.
req, resp := client.GetBucketReplicationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketReplication

func (*S3) GetBucketReplicationWithContext    added in  v1.8.0

func (c * S3 ) GetBucketReplicationWithContext(ctx aws . Context , input * GetBucketReplicationInput , opts ... request . Option ) (* GetBucketReplicationOutput , error )
GetBucketReplicationWithContext is the same as GetBucketReplication with the addition of
the ability to pass a context and additional request options.
See GetBucketReplication for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketRequestPayment

func (c * S3 ) GetBucketRequestPayment(input * GetBucketRequestPaymentInput ) (* GetBucketRequestPaymentOutput , error )
GetBucketRequestPayment API operation for Amazon Simple Storage Service.
Returns the request payment configuration of a bucket. To use this version
of the operation, you must be the bucket owner. For more information, see
Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html ).
The following operations are related to GetBucketRequestPayment:  ListObjects ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketRequestPayment for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketRequestPayment    Example (Shared00)

To get bucket versioning configuration
The following example retrieves bucket versioning configuration.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketRequestPaymentInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketRequestPayment(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketRequestPaymentRequest

func (c * S3 ) GetBucketRequestPaymentRequest(input * GetBucketRequestPaymentInput ) (req * request . Request , output * GetBucketRequestPaymentOutput )
GetBucketRequestPaymentRequest generates a "aws/request.Request" representing the
client's request for the GetBucketRequestPayment operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketRequestPayment for more information on using the GetBucketRequestPayment
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketRequestPaymentRequest method.
req, resp := client.GetBucketRequestPaymentRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketRequestPayment

func (*S3) GetBucketRequestPaymentWithContext    added in  v1.8.0

func (c * S3 ) GetBucketRequestPaymentWithContext(ctx aws . Context , input * GetBucketRequestPaymentInput , opts ... request . Option ) (* GetBucketRequestPaymentOutput , error )
GetBucketRequestPaymentWithContext is the same as GetBucketRequestPayment with the addition of
the ability to pass a context and additional request options.
See GetBucketRequestPayment for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketTagging

func (c * S3 ) GetBucketTagging(input * GetBucketTaggingInput ) (* GetBucketTaggingOutput , error )
GetBucketTagging API operation for Amazon Simple Storage Service.
Returns the tag set associated with the bucket.
To use this operation, you must have permission to perform the s3:GetBucketTagging
action. By default, the bucket owner has this permission and can grant this
permission to others.
GetBucketTagging has the following special error:  Error code: NoSuchTagSet Description: There is no tag set associated
with the bucket.
The following operations are related to GetBucketTagging:
PutBucketTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html )
DeleteBucketTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketTagging for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketTagging    Example (Shared00)

To get tag set associated with a bucket
The following example returns tag set associated with a bucket  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketTaggingInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketTagging(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketTaggingRequest

func (c * S3 ) GetBucketTaggingRequest(input * GetBucketTaggingInput ) (req * request . Request , output * GetBucketTaggingOutput )
GetBucketTaggingRequest generates a "aws/request.Request" representing the
client's request for the GetBucketTagging operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketTagging for more information on using the GetBucketTagging
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketTaggingRequest method.
req, resp := client.GetBucketTaggingRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketTagging

func (*S3) GetBucketTaggingWithContext    added in  v1.8.0

func (c * S3 ) GetBucketTaggingWithContext(ctx aws . Context , input * GetBucketTaggingInput , opts ... request . Option ) (* GetBucketTaggingOutput , error )
GetBucketTaggingWithContext is the same as GetBucketTagging with the addition of
the ability to pass a context and additional request options.
See GetBucketTagging for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketVersioning

func (c * S3 ) GetBucketVersioning(input * GetBucketVersioningInput ) (* GetBucketVersioningOutput , error )
GetBucketVersioning API operation for Amazon Simple Storage Service.
Returns the versioning state of a bucket.
To retrieve the versioning state of a bucket, you must be the bucket owner.
This implementation also returns the MFA Delete status of the versioning
state. If the MFA Delete status is enabled, the bucket owner must use an
authentication device to change the versioning state of the bucket.
The following operations are related to GetBucketVersioning:
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
PutObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html )
DeleteObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketVersioning for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketVersioning    Example (Shared00)

To get bucket versioning configuration
The following example retrieves bucket versioning configuration.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketVersioningInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketVersioning(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketVersioningRequest

func (c * S3 ) GetBucketVersioningRequest(input * GetBucketVersioningInput ) (req * request . Request , output * GetBucketVersioningOutput )
GetBucketVersioningRequest generates a "aws/request.Request" representing the
client's request for the GetBucketVersioning operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketVersioning for more information on using the GetBucketVersioning
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketVersioningRequest method.
req, resp := client.GetBucketVersioningRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketVersioning

func (*S3) GetBucketVersioningWithContext    added in  v1.8.0

func (c * S3 ) GetBucketVersioningWithContext(ctx aws . Context , input * GetBucketVersioningInput , opts ... request . Option ) (* GetBucketVersioningOutput , error )
GetBucketVersioningWithContext is the same as GetBucketVersioning with the addition of
the ability to pass a context and additional request options.
See GetBucketVersioning for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetBucketWebsite

func (c * S3 ) GetBucketWebsite(input * GetBucketWebsiteInput ) (* GetBucketWebsiteOutput , error )
GetBucketWebsite API operation for Amazon Simple Storage Service.
Returns the website configuration for a bucket. To host website on Amazon
S3, you can configure a bucket as website by adding a website configuration.
For more information about hosting websites, see Hosting Websites on Amazon
S3 ( https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html ).
This GET action requires the S3:GetBucketWebsite permission. By default,
only the bucket owner can read the bucket website configuration. However,
bucket owners can allow other users to read the website configuration by
writing a bucket policy granting them the S3:GetBucketWebsite permission.
The following operations are related to GetBucketWebsite:
DeleteBucketWebsite ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketWebsite.html )
PutBucketWebsite ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetBucketWebsite for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketWebsite    Example (Shared00)

To get bucket website configuration
The following example retrieves website configuration of a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetBucketWebsiteInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.GetBucketWebsite(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetBucketWebsiteRequest

func (c * S3 ) GetBucketWebsiteRequest(input * GetBucketWebsiteInput ) (req * request . Request , output * GetBucketWebsiteOutput )
GetBucketWebsiteRequest generates a "aws/request.Request" representing the
client's request for the GetBucketWebsite operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetBucketWebsite for more information on using the GetBucketWebsite
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetBucketWebsiteRequest method.
req, resp := client.GetBucketWebsiteRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketWebsite

func (*S3) GetBucketWebsiteWithContext    added in  v1.8.0

func (c * S3 ) GetBucketWebsiteWithContext(ctx aws . Context , input * GetBucketWebsiteInput , opts ... request . Option ) (* GetBucketWebsiteOutput , error )
GetBucketWebsiteWithContext is the same as GetBucketWebsite with the addition of
the ability to pass a context and additional request options.
See GetBucketWebsite for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetObject

func (c * S3 ) GetObject(input * GetObjectInput ) (* GetObjectOutput , error )
Permissions    Versioning    Overriding Response Header Values    Overriding Response Header Values
GetObject API operation for Amazon Simple Storage Service.
Retrieves objects from Amazon S3. To use GET, you must have READ access to
the object. If you grant READ access to the anonymous user, you can return
the object without using an authorization header.
An Amazon S3 bucket has no directory hierarchy such as you would find in
a typical computer file system. You can, however, create a logical hierarchy
by using object key names that imply a folder structure. For example, instead
of naming an object sample.jpg, you can name it photos/2006/February/sample.jpg.
To get an object from such a logical hierarchy, specify the full key name
for the object in the GET operation. For a virtual hosted-style request example,
if you have the object photos/2006/February/sample.jpg, specify the resource
as /photos/2006/February/sample.jpg. For a path-style request example, if
you have the object photos/2006/February/sample.jpg in the bucket named examplebucket,
specify the resource as /examplebucket/photos/2006/February/sample.jpg. For
more information about request types, see HTTP Host Header Bucket Specification
( https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html#VirtualHostingSpecifyBucket ).
For more information about returning the ACL of an object, see GetObjectAcl
( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html ).
If the object you are retrieving is stored in the S3 Glacier Flexible Retrieval
or S3 Glacier Deep Archive storage class, or S3 Intelligent-Tiering Archive
or S3 Intelligent-Tiering Deep Archive tiers, before you can retrieve the
object you must first restore a copy using RestoreObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html ).
Otherwise, this action returns an InvalidObjectState error. For information
about restoring archived objects, see Restoring Archived Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html ).
Encryption request headers, like x-amz-server-side-encryption, should not
be sent for GET requests if your object uses server-side encryption with
Key Management Service (KMS) keys (SSE-KMS), dual-layer server-side encryption
with Amazon Web Services KMS keys (DSSE-KMS), or server-side encryption with
Amazon S3 managed encryption keys (SSE-S3). If your object does use these
types of keys, you’ll get an HTTP 400 Bad Request error.
If you encrypt an object by using server-side encryption with customer-provided
encryption keys (SSE-C) when you store the object in Amazon S3, then when
you GET the object, you must use the following headers:
x-amz-server-side-encryption-customer-algorithm
x-amz-server-side-encryption-customer-key
x-amz-server-side-encryption-customer-key-MD5
For more information about SSE-C, see Server-Side Encryption (Using Customer-Provided
Encryption Keys) ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html ).
Assuming you have the relevant permission to read object tags, the response
also returns the x-amz-tagging-count header that provides the count of number
of tags associated with the object. You can use GetObjectTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html )
to retrieve the tag set associated with an object. Permissions
You need the relevant read object (or version) permission for this operation.
For more information, see Specifying Permissions in a Policy ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html ).
If the object that you request doesn’t exist, the error that Amazon S3
returns depends on whether you also have the s3:ListBucket permission.
If you have the s3:ListBucket permission on the bucket, Amazon S3 returns
an HTTP status code 404 (Not Found) error.
If you don’t have the s3:ListBucket permission, Amazon S3 returns an HTTP
status code 403 ("access denied") error. Versioning
By default, the GET action returns the current version of an object. To return
a different version, use the versionId subresource.
If you supply a versionId, you need the s3:GetObjectVersion permission
to access a specific version of an object. If you request a specific version,
you do not need to have the s3:GetObject permission. If you request the
current version without a specific version ID, only s3:GetObject permission
is required. s3:GetObjectVersion permission won't be required.
If the current version of the object is a delete marker, Amazon S3 behaves
as if the object was deleted and includes x-amz-delete-marker: true in
the response.
For more information about versioning, see PutBucketVersioning ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html ). Overriding Response Header Values
There are times when you want to override certain response header values
in a GET response. For example, you might override the Content-Disposition
response header value in your GET request.
You can override values for a set of response headers using the following
query parameters. These response header values are sent only on a successful
request, that is, when status code 200 OK is returned. The set of headers
you can override using these parameters is a subset of the headers that Amazon
S3 accepts when you create an object. The response headers that you can override
for the GET response are Content-Type, Content-Language, Expires, Cache-Control,
Content-Disposition, and Content-Encoding. To override these header values
in the GET response, you use the following request parameters.
You must sign the request, either using an Authorization header or a presigned
URL, when using these parameters. They cannot be used with an unsigned (anonymous)
request.
response-content-type
response-content-language
response-expires
response-cache-control
response-content-disposition
response-content-encoding  Overriding Response Header Values
If both of the If-Match and If-Unmodified-Since headers are present in the
request as follows: If-Match condition evaluates to true, and; If-Unmodified-Since
condition evaluates to false; then, S3 returns 200 OK and the data requested.
If both of the If-None-Match and If-Modified-Since headers are present in
the request as follows:If-None-Match condition evaluates to false, and; If-Modified-Since
condition evaluates to true; then, S3 returns 304 Not Modified response code.
For more information about conditional requests, see RFC 7232 ( https://tools.ietf.org/html/rfc7232 ).
The following operations are related to GetObject:
ListBuckets ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html )
GetObjectAcl ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetObject for usage and error information.
Returned Error Codes:
ErrCodeNoSuchKey "NoSuchKey"
The specified key does not exist.
ErrCodeInvalidObjectState "InvalidObjectState"
Object is archived and inaccessible until restored.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObject    Example (Shared00)

To retrieve a byte range of an object
The following example retrieves an object for an S3 bucket. The request specifies
the range header to retrieve a specific byte range.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetObjectInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("SampleFile.txt"),
Range:  aws.String("bytes=0-9"),
}

result, err := svc.GetObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeNoSuchKey:
fmt.Println(s3.ErrCodeNoSuchKey, aerr.Error())
case s3.ErrCodeInvalidObjectState:
fmt.Println(s3.ErrCodeInvalidObjectState, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared01)

To retrieve an object
The following example retrieves an object for an S3 bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetObjectInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("HappyFace.jpg"),
}

result, err := svc.GetObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeNoSuchKey:
fmt.Println(s3.ErrCodeNoSuchKey, aerr.Error())
case s3.ErrCodeInvalidObjectState:
fmt.Println(s3.ErrCodeInvalidObjectState, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetObjectAcl    added in  v0.9.5

func (c * S3 ) GetObjectAcl(input * GetObjectAclInput ) (* GetObjectAclOutput , error )
GetObjectAcl API operation for Amazon Simple Storage Service.
Returns the access control list (ACL) of an object. To use this operation,
you must have s3:GetObjectAcl permissions or READ_ACP access to the object.
For more information, see Mapping of ACL permissions and access policy permissions
( https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#acl-access-policy-permission-mapping )
in the Amazon S3 User Guide
This action is not supported by Amazon S3 on Outposts.
By default, GET returns ACL information about the current version of an object.
To return ACL information about a different version, use the versionId subresource.
If your bucket uses the bucket owner enforced setting for S3 Object Ownership,
requests to read ACLs are still supported and return the bucket-owner-full-control
ACL with the owner being the account that created the bucket. For more information,
see Controlling object ownership and disabling ACLs ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html )
in the Amazon S3 User Guide.
The following operations are related to GetObjectAcl:
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
GetObjectAttributes ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html )
DeleteObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html )
PutObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetObjectAcl for usage and error information.
Returned Error Codes:  ErrCodeNoSuchKey "NoSuchKey"
The specified key does not exist.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectAcl    Example (Shared00)

To retrieve object ACL
The following example retrieves access control list (ACL) of an object.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetObjectAclInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("HappyFace.jpg"),
}

result, err := svc.GetObjectAcl(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeNoSuchKey:
fmt.Println(s3.ErrCodeNoSuchKey, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetObjectAclRequest    added in  v0.9.5

func (c * S3 ) GetObjectAclRequest(input * GetObjectAclInput ) (req * request . Request , output * GetObjectAclOutput )
GetObjectAclRequest generates a "aws/request.Request" representing the
client's request for the GetObjectAcl operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetObjectAcl for more information on using the GetObjectAcl
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetObjectAclRequest method.
req, resp := client.GetObjectAclRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectAcl

func (*S3) GetObjectAclWithContext    added in  v1.8.0

func (c * S3 ) GetObjectAclWithContext(ctx aws . Context , input * GetObjectAclInput , opts ... request . Option ) (* GetObjectAclOutput , error )
GetObjectAclWithContext is the same as GetObjectAcl with the addition of
the ability to pass a context and additional request options.
See GetObjectAcl for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetObjectAttributes    added in  v1.43.6

func (c * S3 ) GetObjectAttributes(input * GetObjectAttributesInput ) (* GetObjectAttributesOutput , error )
Permissions
GetObjectAttributes API operation for Amazon Simple Storage Service.
Retrieves all the metadata from an object without returning the object itself.
This action is useful if you're interested only in an object's metadata.
To use GetObjectAttributes, you must have READ access to the object.
GetObjectAttributes combines the functionality of HeadObject and ListParts.
All of the data returned with each of those individual calls can be returned
with a single call to GetObjectAttributes.
If you encrypt an object by using server-side encryption with customer-provided
encryption keys (SSE-C) when you store the object in Amazon S3, then when
you retrieve the metadata from the object, you must use the following headers:
x-amz-server-side-encryption-customer-algorithm
x-amz-server-side-encryption-customer-key
x-amz-server-side-encryption-customer-key-MD5
For more information about SSE-C, see Server-Side Encryption (Using Customer-Provided
Encryption Keys) ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )
in the Amazon S3 User Guide.
Encryption request headers, such as x-amz-server-side-encryption, should
not be sent for GET requests if your object uses server-side encryption
with Amazon Web Services KMS keys stored in Amazon Web Services Key Management
Service (SSE-KMS) or server-side encryption with Amazon S3 managed keys
(SSE-S3). If your object does use these types of keys, you'll get an HTTP
400 Bad Request error.
The last modified property in this case is the creation date of the
object.
Consider the following when using request headers:
If both of the If-Match and If-Unmodified-Since headers are present
in the request as follows, then Amazon S3 returns the HTTP status code
200 OK and the data requested: If-Match condition evaluates to true. If-Unmodified-Since
condition evaluates to false.
If both of the If-None-Match and If-Modified-Since headers are present
in the request as follows, then Amazon S3 returns the HTTP status code
304 Not Modified: If-None-Match condition evaluates to false. If-Modified-Since
condition evaluates to true.
For more information about conditional requests, see RFC 7232 ( https://tools.ietf.org/html/rfc7232 ). Permissions
The permissions that you need to use this operation depend on whether the
bucket is versioned. If the bucket is versioned, you need both the s3:GetObjectVersion
and s3:GetObjectVersionAttributes permissions for this operation. If the
bucket is not versioned, you need the s3:GetObject and s3:GetObjectAttributes
permissions. For more information, see Specifying Permissions in a Policy
( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html )
in the Amazon S3 User Guide. If the object that you request does not exist,
the error Amazon S3 returns depends on whether you also have the s3:ListBucket
permission.
If you have the s3:ListBucket permission on the bucket, Amazon S3 returns
an HTTP status code 404 Not Found ("no such key") error.
If you don't have the s3:ListBucket permission, Amazon S3 returns an
HTTP status code 403 Forbidden ("access denied") error.
The following actions are related to GetObjectAttributes:
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
GetObjectAcl ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html )
GetObjectLegalHold ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLegalHold.html )
GetObjectLockConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLockConfiguration.html )
GetObjectRetention ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectRetention.html )
GetObjectTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html )
HeadObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_HeadObject.html )
ListParts ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetObjectAttributes for usage and error information.
Returned Error Codes:  ErrCodeNoSuchKey "NoSuchKey"
The specified key does not exist.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectAttributes

func (*S3) GetObjectAttributesRequest    added in  v1.43.6

func (c * S3 ) GetObjectAttributesRequest(input * GetObjectAttributesInput ) (req * request . Request , output * GetObjectAttributesOutput )
GetObjectAttributesRequest generates a "aws/request.Request" representing the
client's request for the GetObjectAttributes operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetObjectAttributes for more information on using the GetObjectAttributes
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetObjectAttributesRequest method.
req, resp := client.GetObjectAttributesRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectAttributes

func (*S3) GetObjectAttributesWithContext    added in  v1.43.6

func (c * S3 ) GetObjectAttributesWithContext(ctx aws . Context , input * GetObjectAttributesInput , opts ... request . Option ) (* GetObjectAttributesOutput , error )
GetObjectAttributesWithContext is the same as GetObjectAttributes with the addition of
the ability to pass a context and additional request options.
See GetObjectAttributes for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetObjectLegalHold    added in  v1.15.83

func (c * S3 ) GetObjectLegalHold(input * GetObjectLegalHoldInput ) (* GetObjectLegalHoldOutput , error )
GetObjectLegalHold API operation for Amazon Simple Storage Service.
Gets an object's current legal hold status. For more information, see Locking
Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html ).
This action is not supported by Amazon S3 on Outposts.
The following action is related to GetObjectLegalHold:  GetObjectAttributes ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetObjectLegalHold for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectLegalHold

func (*S3) GetObjectLegalHoldRequest    added in  v1.15.83

func (c * S3 ) GetObjectLegalHoldRequest(input * GetObjectLegalHoldInput ) (req * request . Request , output * GetObjectLegalHoldOutput )
GetObjectLegalHoldRequest generates a "aws/request.Request" representing the
client's request for the GetObjectLegalHold operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetObjectLegalHold for more information on using the GetObjectLegalHold
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetObjectLegalHoldRequest method.
req, resp := client.GetObjectLegalHoldRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectLegalHold

func (*S3) GetObjectLegalHoldWithContext    added in  v1.15.83

func (c * S3 ) GetObjectLegalHoldWithContext(ctx aws . Context , input * GetObjectLegalHoldInput , opts ... request . Option ) (* GetObjectLegalHoldOutput , error )
GetObjectLegalHoldWithContext is the same as GetObjectLegalHold with the addition of
the ability to pass a context and additional request options.
See GetObjectLegalHold for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetObjectLockConfiguration    added in  v1.15.83

func (c * S3 ) GetObjectLockConfiguration(input * GetObjectLockConfigurationInput ) (* GetObjectLockConfigurationOutput , error )
GetObjectLockConfiguration API operation for Amazon Simple Storage Service.
Gets the Object Lock configuration for a bucket. The rule specified in the
Object Lock configuration will be applied by default to every new object
placed in the specified bucket. For more information, see Locking Objects
( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html ).
The following action is related to GetObjectLockConfiguration:  GetObjectAttributes ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetObjectLockConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectLockConfiguration

func (*S3) GetObjectLockConfigurationRequest    added in  v1.15.83

func (c * S3 ) GetObjectLockConfigurationRequest(input * GetObjectLockConfigurationInput ) (req * request . Request , output * GetObjectLockConfigurationOutput )
GetObjectLockConfigurationRequest generates a "aws/request.Request" representing the
client's request for the GetObjectLockConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetObjectLockConfiguration for more information on using the GetObjectLockConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetObjectLockConfigurationRequest method.
req, resp := client.GetObjectLockConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectLockConfiguration

func (*S3) GetObjectLockConfigurationWithContext    added in  v1.15.83

func (c * S3 ) GetObjectLockConfigurationWithContext(ctx aws . Context , input * GetObjectLockConfigurationInput , opts ... request . Option ) (* GetObjectLockConfigurationOutput , error )
GetObjectLockConfigurationWithContext is the same as GetObjectLockConfiguration with the addition of
the ability to pass a context and additional request options.
See GetObjectLockConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetObjectRequest

func (c * S3 ) GetObjectRequest(input * GetObjectInput ) (req * request . Request , output * GetObjectOutput )
GetObjectRequest generates a "aws/request.Request" representing the
client's request for the GetObject operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetObject for more information on using the GetObject
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetObjectRequest method.
req, resp := client.GetObjectRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObject

func (*S3) GetObjectRetention    added in  v1.15.83

func (c * S3 ) GetObjectRetention(input * GetObjectRetentionInput ) (* GetObjectRetentionOutput , error )
GetObjectRetention API operation for Amazon Simple Storage Service.
Retrieves an object's retention settings. For more information, see Locking
Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html ).
This action is not supported by Amazon S3 on Outposts.
The following action is related to GetObjectRetention:  GetObjectAttributes ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetObjectRetention for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectRetention

func (*S3) GetObjectRetentionRequest    added in  v1.15.83

func (c * S3 ) GetObjectRetentionRequest(input * GetObjectRetentionInput ) (req * request . Request , output * GetObjectRetentionOutput )
GetObjectRetentionRequest generates a "aws/request.Request" representing the
client's request for the GetObjectRetention operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetObjectRetention for more information on using the GetObjectRetention
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetObjectRetentionRequest method.
req, resp := client.GetObjectRetentionRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectRetention

func (*S3) GetObjectRetentionWithContext    added in  v1.15.83

func (c * S3 ) GetObjectRetentionWithContext(ctx aws . Context , input * GetObjectRetentionInput , opts ... request . Option ) (* GetObjectRetentionOutput , error )
GetObjectRetentionWithContext is the same as GetObjectRetention with the addition of
the ability to pass a context and additional request options.
See GetObjectRetention for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetObjectTagging    added in  v1.5.11

func (c * S3 ) GetObjectTagging(input * GetObjectTaggingInput ) (* GetObjectTaggingOutput , error )
GetObjectTagging API operation for Amazon Simple Storage Service.
Returns the tag-set of an object. You send the GET request against the tagging
subresource associated with the object.
To use this operation, you must have permission to perform the s3:GetObjectTagging
action. By default, the GET action returns information about current version
of an object. For a versioned bucket, you can have multiple versions of an
object in your bucket. To retrieve tags of any other version, use the versionId
query parameter. You also need permission for the s3:GetObjectVersionTagging
action.
By default, the bucket owner has this permission and can grant this permission
to others.
For information about the Amazon S3 object tagging feature, see Object Tagging
( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html ).
The following actions are related to GetObjectTagging:
DeleteObjectTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html )
GetObjectAttributes ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html )
PutObjectTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetObjectTagging for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectTagging    Example (Shared00)

To retrieve tag set of an object
The following example retrieves tag set of an object.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetObjectTaggingInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("HappyFace.jpg"),
}

result, err := svc.GetObjectTagging(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared01)

To retrieve tag set of a specific object version
The following example retrieves tag set of an object. The request specifies object
version.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetObjectTaggingInput{
Bucket:    aws.String("examplebucket"),
Key:       aws.String("exampleobject"),
VersionId: aws.String("ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI"),
}

result, err := svc.GetObjectTagging(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetObjectTaggingRequest    added in  v1.5.11

func (c * S3 ) GetObjectTaggingRequest(input * GetObjectTaggingInput ) (req * request . Request , output * GetObjectTaggingOutput )
GetObjectTaggingRequest generates a "aws/request.Request" representing the
client's request for the GetObjectTagging operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetObjectTagging for more information on using the GetObjectTagging
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetObjectTaggingRequest method.
req, resp := client.GetObjectTaggingRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectTagging

func (*S3) GetObjectTaggingWithContext    added in  v1.8.0

func (c * S3 ) GetObjectTaggingWithContext(ctx aws . Context , input * GetObjectTaggingInput , opts ... request . Option ) (* GetObjectTaggingOutput , error )
GetObjectTaggingWithContext is the same as GetObjectTagging with the addition of
the ability to pass a context and additional request options.
See GetObjectTagging for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetObjectTorrent

func (c * S3 ) GetObjectTorrent(input * GetObjectTorrentInput ) (* GetObjectTorrentOutput , error )
GetObjectTorrent API operation for Amazon Simple Storage Service.
Returns torrent files from a bucket. BitTorrent can save you bandwidth when
you're distributing large files.
You can get torrent only for objects that are less than 5 GB in size, and
that are not encrypted using server-side encryption with a customer-provided
encryption key.
To use GET, you must have READ access to the object.
This action is not supported by Amazon S3 on Outposts.
The following action is related to GetObjectTorrent:  GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetObjectTorrent for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectTorrent    Example (Shared00)

To retrieve torrent files for an object
The following example retrieves torrent files of an object.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.GetObjectTorrentInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("HappyFace.jpg"),
}

result, err := svc.GetObjectTorrent(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) GetObjectTorrentRequest

func (c * S3 ) GetObjectTorrentRequest(input * GetObjectTorrentInput ) (req * request . Request , output * GetObjectTorrentOutput )
GetObjectTorrentRequest generates a "aws/request.Request" representing the
client's request for the GetObjectTorrent operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetObjectTorrent for more information on using the GetObjectTorrent
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetObjectTorrentRequest method.
req, resp := client.GetObjectTorrentRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObjectTorrent

func (*S3) GetObjectTorrentWithContext    added in  v1.8.0

func (c * S3 ) GetObjectTorrentWithContext(ctx aws . Context , input * GetObjectTorrentInput , opts ... request . Option ) (* GetObjectTorrentOutput , error )
GetObjectTorrentWithContext is the same as GetObjectTorrent with the addition of
the ability to pass a context and additional request options.
See GetObjectTorrent for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetObjectWithContext    added in  v1.8.0

func (c * S3 ) GetObjectWithContext(ctx aws . Context , input * GetObjectInput , opts ... request . Option ) (* GetObjectOutput , error )
GetObjectWithContext is the same as GetObject with the addition of
the ability to pass a context and additional request options.
See GetObject for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) GetPublicAccessBlock    added in  v1.15.77

func (c * S3 ) GetPublicAccessBlock(input * GetPublicAccessBlockInput ) (* GetPublicAccessBlockOutput , error )
GetPublicAccessBlock API operation for Amazon Simple Storage Service.
Retrieves the PublicAccessBlock configuration for an Amazon S3 bucket. To
use this operation, you must have the s3:GetBucketPublicAccessBlock permission.
For more information about Amazon S3 permissions, see Specifying Permissions
in a Policy ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html ).
When Amazon S3 evaluates the PublicAccessBlock configuration for a bucket
or an object, it checks the PublicAccessBlock configuration for both the
bucket (or the bucket that contains the object) and the bucket owner's account.
If the PublicAccessBlock settings are different between the bucket and the
account, Amazon S3 uses the most restrictive combination of the bucket-level
and account-level settings.
For more information about when Amazon S3 considers a bucket or an object
public, see The Meaning of "Public" ( https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status ).
The following operations are related to GetPublicAccessBlock:
Using Amazon S3 Block Public Access ( https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html )
PutPublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html )
GetPublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html )
DeletePublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation GetPublicAccessBlock for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetPublicAccessBlock

func (*S3) GetPublicAccessBlockRequest    added in  v1.15.77

func (c * S3 ) GetPublicAccessBlockRequest(input * GetPublicAccessBlockInput ) (req * request . Request , output * GetPublicAccessBlockOutput )
GetPublicAccessBlockRequest generates a "aws/request.Request" representing the
client's request for the GetPublicAccessBlock operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See GetPublicAccessBlock for more information on using the GetPublicAccessBlock
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the GetPublicAccessBlockRequest method.
req, resp := client.GetPublicAccessBlockRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetPublicAccessBlock

func (*S3) GetPublicAccessBlockWithContext    added in  v1.15.77

func (c * S3 ) GetPublicAccessBlockWithContext(ctx aws . Context , input * GetPublicAccessBlockInput , opts ... request . Option ) (* GetPublicAccessBlockOutput , error )
GetPublicAccessBlockWithContext is the same as GetPublicAccessBlock with the addition of
the ability to pass a context and additional request options.
See GetPublicAccessBlock for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) HeadBucket

func (c * S3 ) HeadBucket(input * HeadBucketInput ) (* HeadBucketOutput , error )
HeadBucket API operation for Amazon Simple Storage Service.
This action is useful to determine if a bucket exists and you have permission
to access it. The action returns a 200 OK if the bucket exists and you have
permission to access it.
If the bucket does not exist or you do not have permission to access it,
the HEAD request returns a generic 400 Bad Request, 403 Forbidden or 404
Not Found code. A message body is not included, so you cannot determine the
exception beyond these error codes.
To use this operation, you must have permissions to perform the s3:ListBucket
action. The bucket owner has this permission by default and can grant this
permission to others. For more information about permissions, see Permissions
Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
To use this API operation against an access point, you must provide the alias
of the access point in place of the bucket name or specify the access point
ARN. When using the access point ARN, you must direct requests to the access
point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.
When using the Amazon Web Services SDKs, you provide the ARN in place of
the bucket name. For more information, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html ).
To use this API operation against an Object Lambda access point, provide
the alias of the Object Lambda access point in place of the bucket name.
If the Object Lambda access point alias in a request is not valid, the error
code InvalidAccessPointAliasError is returned. For more information about
InvalidAccessPointAliasError, see List of Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList ).
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation HeadBucket for usage and error information.
Returned Error Codes:  ErrCodeNoSuchBucket "NoSuchBucket"
The specified bucket does not exist.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadBucket    Example (Shared00)

To determine if bucket exists
This operation checks to see if a bucket exists.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.HeadBucketInput{
Bucket: aws.String("acl1"),
}

result, err := svc.HeadBucket(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeNoSuchBucket:
fmt.Println(s3.ErrCodeNoSuchBucket, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) HeadBucketRequest

func (c * S3 ) HeadBucketRequest(input * HeadBucketInput ) (req * request . Request , output * HeadBucketOutput )
HeadBucketRequest generates a "aws/request.Request" representing the
client's request for the HeadBucket operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See HeadBucket for more information on using the HeadBucket
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the HeadBucketRequest method.
req, resp := client.HeadBucketRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadBucket

func (*S3) HeadBucketWithContext    added in  v1.8.0

func (c * S3 ) HeadBucketWithContext(ctx aws . Context , input * HeadBucketInput , opts ... request . Option ) (* HeadBucketOutput , error )
HeadBucketWithContext is the same as HeadBucket with the addition of
the ability to pass a context and additional request options.
See HeadBucket for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) HeadObject

func (c * S3 ) HeadObject(input * HeadObjectInput ) (* HeadObjectOutput , error )
Permissions
HeadObject API operation for Amazon Simple Storage Service.
The HEAD action retrieves metadata from an object without returning the object
itself. This action is useful if you're only interested in an object's metadata.
To use HEAD, you must have READ access to the object.
A HEAD request has the same options as a GET action on an object. The response
is identical to the GET response except that there is no response body. Because
of this, if the HEAD request generates an error, it returns a generic 400
Bad Request, 403 Forbidden or 404 Not Found code. It is not possible to retrieve
the exact exception beyond these error codes.
If you encrypt an object by using server-side encryption with customer-provided
encryption keys (SSE-C) when you store the object in Amazon S3, then when
you retrieve the metadata from the object, you must use the following headers:
x-amz-server-side-encryption-customer-algorithm
x-amz-server-side-encryption-customer-key
x-amz-server-side-encryption-customer-key-MD5
For more information about SSE-C, see Server-Side Encryption (Using Customer-Provided
Encryption Keys) ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html ).
Encryption request headers, like x-amz-server-side-encryption, should
not be sent for GET requests if your object uses server-side encryption
with Key Management Service (KMS) keys (SSE-KMS), dual-layer server-side
encryption with Amazon Web Services KMS keys (DSSE-KMS), or server-side
encryption with Amazon S3 managed encryption keys (SSE-S3). If your object
does use these types of keys, you’ll get an HTTP 400 Bad Request error.
The last modified property in this case is the creation date of the
object.
Request headers are limited to 8 KB in size. For more information, see Common
Request Headers ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonRequestHeaders.html ).
Consider the following when using request headers:
Consideration 1 – If both of the If-Match and If-Unmodified-Since
headers are present in the request as follows: If-Match condition evaluates
to true, and; If-Unmodified-Since condition evaluates to false; Then Amazon
S3 returns 200 OK and the data requested.
Consideration 2 – If both of the If-None-Match and If-Modified-Since
headers are present in the request as follows: If-None-Match condition
evaluates to false, and; If-Modified-Since condition evaluates to true;
Then Amazon S3 returns the 304 Not Modified response code.
For more information about conditional requests, see RFC 7232 ( https://tools.ietf.org/html/rfc7232 ). Permissions
You need the relevant read object (or version) permission for this operation.
For more information, see Actions, resources, and condition keys for Amazon
S3 ( https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html ).
If the object you request doesn't exist, the error that Amazon S3 returns
depends on whether you also have the s3:ListBucket permission.
If you have the s3:ListBucket permission on the bucket, Amazon S3 returns
an HTTP status code 404 error.
If you don’t have the s3:ListBucket permission, Amazon S3 returns
an HTTP status code 403 error.
The following actions are related to HeadObject:
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
GetObjectAttributes ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html )
See http://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#RESTErrorResponses for more information on returned errors.
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation HeadObject for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadObject    Example (Shared00)

To retrieve metadata of an object without returning the object itself
The following example retrieves an object metadata.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.HeadObjectInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("HappyFace.jpg"),
}

result, err := svc.HeadObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) HeadObjectRequest

func (c * S3 ) HeadObjectRequest(input * HeadObjectInput ) (req * request . Request , output * HeadObjectOutput )
HeadObjectRequest generates a "aws/request.Request" representing the
client's request for the HeadObject operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See HeadObject for more information on using the HeadObject
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the HeadObjectRequest method.
req, resp := client.HeadObjectRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadObject

func (*S3) HeadObjectWithContext    added in  v1.8.0

func (c * S3 ) HeadObjectWithContext(ctx aws . Context , input * HeadObjectInput , opts ... request . Option ) (* HeadObjectOutput , error )
HeadObjectWithContext is the same as HeadObject with the addition of
the ability to pass a context and additional request options.
See HeadObject for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListBucketAnalyticsConfigurations    added in  v1.5.11

func (c * S3 ) ListBucketAnalyticsConfigurations(input * ListBucketAnalyticsConfigurationsInput ) (* ListBucketAnalyticsConfigurationsOutput , error )
ListBucketAnalyticsConfigurations API operation for Amazon Simple Storage Service.
Lists the analytics configurations for the bucket. You can have up to 1,000
analytics configurations per bucket.
This action supports list pagination and does not return more than 100 configurations
at a time. You should always check the IsTruncated element in the response.
If there are no more configurations to list, IsTruncated is set to false.
If there are more configurations to list, IsTruncated is set to true, and
there will be a value in NextContinuationToken. You use the NextContinuationToken
value to continue the pagination of the list by passing the value in continuation-token
in the request to GET the next page.
To use this operation, you must have permissions to perform the s3:GetAnalyticsConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
For information about Amazon S3 analytics feature, see Amazon S3 Analytics
– Storage Class Analysis ( https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html ).
The following operations are related to ListBucketAnalyticsConfigurations:
GetBucketAnalyticsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html )
DeleteBucketAnalyticsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html )
PutBucketAnalyticsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation ListBucketAnalyticsConfigurations for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketAnalyticsConfigurations

func (*S3) ListBucketAnalyticsConfigurationsRequest    added in  v1.5.11

func (c * S3 ) ListBucketAnalyticsConfigurationsRequest(input * ListBucketAnalyticsConfigurationsInput ) (req * request . Request , output * ListBucketAnalyticsConfigurationsOutput )
ListBucketAnalyticsConfigurationsRequest generates a "aws/request.Request" representing the
client's request for the ListBucketAnalyticsConfigurations operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See ListBucketAnalyticsConfigurations for more information on using the ListBucketAnalyticsConfigurations
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the ListBucketAnalyticsConfigurationsRequest method.
req, resp := client.ListBucketAnalyticsConfigurationsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketAnalyticsConfigurations

func (*S3) ListBucketAnalyticsConfigurationsWithContext    added in  v1.8.0

func (c * S3 ) ListBucketAnalyticsConfigurationsWithContext(ctx aws . Context , input * ListBucketAnalyticsConfigurationsInput , opts ... request . Option ) (* ListBucketAnalyticsConfigurationsOutput , error )
ListBucketAnalyticsConfigurationsWithContext is the same as ListBucketAnalyticsConfigurations with the addition of
the ability to pass a context and additional request options.
See ListBucketAnalyticsConfigurations for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListBucketIntelligentTieringConfigurations    added in  v1.35.24

func (c * S3 ) ListBucketIntelligentTieringConfigurations(input * ListBucketIntelligentTieringConfigurationsInput ) (* ListBucketIntelligentTieringConfigurationsOutput , error )
ListBucketIntelligentTieringConfigurations API operation for Amazon Simple Storage Service.
Lists the S3 Intelligent-Tiering configuration from the specified bucket.
The S3 Intelligent-Tiering storage class is designed to optimize storage
costs by automatically moving data to the most cost-effective storage access
tier, without performance impact or operational overhead. S3 Intelligent-Tiering
delivers automatic cost savings in three low latency and high throughput
access tiers. To get the lowest storage cost on data that can be accessed
in minutes to hours, you can choose to activate additional archiving capabilities.
The S3 Intelligent-Tiering storage class is the ideal storage class for data
with unknown, changing, or unpredictable access patterns, independent of
object size or retention period. If the size of an object is less than 128
KB, it is not monitored and not eligible for auto-tiering. Smaller objects
can be stored, but they are always charged at the Frequent Access tier rates
in the S3 Intelligent-Tiering storage class.
For more information, see Storage class for automatically optimizing frequently
and infrequently accessed objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access ).
Operations related to ListBucketIntelligentTieringConfigurations include:
DeleteBucketIntelligentTieringConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketIntelligentTieringConfiguration.html )
PutBucketIntelligentTieringConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html )
GetBucketIntelligentTieringConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation ListBucketIntelligentTieringConfigurations for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketIntelligentTieringConfigurations

func (*S3) ListBucketIntelligentTieringConfigurationsRequest    added in  v1.35.24

func (c * S3 ) ListBucketIntelligentTieringConfigurationsRequest(input * ListBucketIntelligentTieringConfigurationsInput ) (req * request . Request , output * ListBucketIntelligentTieringConfigurationsOutput )
ListBucketIntelligentTieringConfigurationsRequest generates a "aws/request.Request" representing the
client's request for the ListBucketIntelligentTieringConfigurations operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See ListBucketIntelligentTieringConfigurations for more information on using the ListBucketIntelligentTieringConfigurations
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the ListBucketIntelligentTieringConfigurationsRequest method.
req, resp := client.ListBucketIntelligentTieringConfigurationsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketIntelligentTieringConfigurations

func (*S3) ListBucketIntelligentTieringConfigurationsWithContext    added in  v1.35.24

func (c * S3 ) ListBucketIntelligentTieringConfigurationsWithContext(ctx aws . Context , input * ListBucketIntelligentTieringConfigurationsInput , opts ... request . Option ) (* ListBucketIntelligentTieringConfigurationsOutput , error )
ListBucketIntelligentTieringConfigurationsWithContext is the same as ListBucketIntelligentTieringConfigurations with the addition of
the ability to pass a context and additional request options.
See ListBucketIntelligentTieringConfigurations for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListBucketInventoryConfigurations    added in  v1.5.11

func (c * S3 ) ListBucketInventoryConfigurations(input * ListBucketInventoryConfigurationsInput ) (* ListBucketInventoryConfigurationsOutput , error )
ListBucketInventoryConfigurations API operation for Amazon Simple Storage Service.
Returns a list of inventory configurations for the bucket. You can have up
to 1,000 analytics configurations per bucket.
This action supports list pagination and does not return more than 100 configurations
at a time. Always check the IsTruncated element in the response. If there
are no more configurations to list, IsTruncated is set to false. If there
are more configurations to list, IsTruncated is set to true, and there is
a value in NextContinuationToken. You use the NextContinuationToken value
to continue the pagination of the list by passing the value in continuation-token
in the request to GET the next page.
To use this operation, you must have permissions to perform the s3:GetInventoryConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
For information about the Amazon S3 inventory feature, see Amazon S3 Inventory
( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html )
The following operations are related to ListBucketInventoryConfigurations:
GetBucketInventoryConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html )
DeleteBucketInventoryConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html )
PutBucketInventoryConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation ListBucketInventoryConfigurations for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketInventoryConfigurations

func (*S3) ListBucketInventoryConfigurationsRequest    added in  v1.5.11

func (c * S3 ) ListBucketInventoryConfigurationsRequest(input * ListBucketInventoryConfigurationsInput ) (req * request . Request , output * ListBucketInventoryConfigurationsOutput )
ListBucketInventoryConfigurationsRequest generates a "aws/request.Request" representing the
client's request for the ListBucketInventoryConfigurations operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See ListBucketInventoryConfigurations for more information on using the ListBucketInventoryConfigurations
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the ListBucketInventoryConfigurationsRequest method.
req, resp := client.ListBucketInventoryConfigurationsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketInventoryConfigurations

func (*S3) ListBucketInventoryConfigurationsWithContext    added in  v1.8.0

func (c * S3 ) ListBucketInventoryConfigurationsWithContext(ctx aws . Context , input * ListBucketInventoryConfigurationsInput , opts ... request . Option ) (* ListBucketInventoryConfigurationsOutput , error )
ListBucketInventoryConfigurationsWithContext is the same as ListBucketInventoryConfigurations with the addition of
the ability to pass a context and additional request options.
See ListBucketInventoryConfigurations for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListBucketMetricsConfigurations    added in  v1.5.11

func (c * S3 ) ListBucketMetricsConfigurations(input * ListBucketMetricsConfigurationsInput ) (* ListBucketMetricsConfigurationsOutput , error )
ListBucketMetricsConfigurations API operation for Amazon Simple Storage Service.
Lists the metrics configurations for the bucket. The metrics configurations
are only for the request metrics of the bucket and do not provide information
on daily storage metrics. You can have up to 1,000 configurations per bucket.
This action supports list pagination and does not return more than 100 configurations
at a time. Always check the IsTruncated element in the response. If there
are no more configurations to list, IsTruncated is set to false. If there
are more configurations to list, IsTruncated is set to true, and there is
a value in NextContinuationToken. You use the NextContinuationToken value
to continue the pagination of the list by passing the value in continuation-token
in the request to GET the next page.
To use this operation, you must have permissions to perform the s3:GetMetricsConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
For more information about metrics configurations and CloudWatch request
metrics, see Monitoring Metrics with Amazon CloudWatch ( https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html ).
The following operations are related to ListBucketMetricsConfigurations:
PutBucketMetricsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html )
GetBucketMetricsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html )
DeleteBucketMetricsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketMetricsConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation ListBucketMetricsConfigurations for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketMetricsConfigurations

func (*S3) ListBucketMetricsConfigurationsRequest    added in  v1.5.11

func (c * S3 ) ListBucketMetricsConfigurationsRequest(input * ListBucketMetricsConfigurationsInput ) (req * request . Request , output * ListBucketMetricsConfigurationsOutput )
ListBucketMetricsConfigurationsRequest generates a "aws/request.Request" representing the
client's request for the ListBucketMetricsConfigurations operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See ListBucketMetricsConfigurations for more information on using the ListBucketMetricsConfigurations
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the ListBucketMetricsConfigurationsRequest method.
req, resp := client.ListBucketMetricsConfigurationsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBucketMetricsConfigurations

func (*S3) ListBucketMetricsConfigurationsWithContext    added in  v1.8.0

func (c * S3 ) ListBucketMetricsConfigurationsWithContext(ctx aws . Context , input * ListBucketMetricsConfigurationsInput , opts ... request . Option ) (* ListBucketMetricsConfigurationsOutput , error )
ListBucketMetricsConfigurationsWithContext is the same as ListBucketMetricsConfigurations with the addition of
the ability to pass a context and additional request options.
See ListBucketMetricsConfigurations for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListBuckets

func (c * S3 ) ListBuckets(input * ListBucketsInput ) (* ListBucketsOutput , error )
ListBuckets API operation for Amazon Simple Storage Service.
Returns a list of all buckets owned by the authenticated sender of the request.
To use this operation, you must have the s3:ListAllMyBuckets permission.
For information about Amazon S3 buckets, see Creating, configuring, and working
with Amazon S3 buckets ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-buckets-s3.html ).
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation ListBuckets for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBuckets    Example (Shared00)

To list all buckets
The following example returns all the buckets owned by the sender of this request.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.ListBucketsInput{}

result, err := svc.ListBuckets(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) ListBucketsRequest

func (c * S3 ) ListBucketsRequest(input * ListBucketsInput ) (req * request . Request , output * ListBucketsOutput )
ListBucketsRequest generates a "aws/request.Request" representing the
client's request for the ListBuckets operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See ListBuckets for more information on using the ListBuckets
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the ListBucketsRequest method.
req, resp := client.ListBucketsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBuckets

func (*S3) ListBucketsWithContext    added in  v1.8.0

func (c * S3 ) ListBucketsWithContext(ctx aws . Context , input * ListBucketsInput , opts ... request . Option ) (* ListBucketsOutput , error )
ListBucketsWithContext is the same as ListBuckets with the addition of
the ability to pass a context and additional request options.
See ListBuckets for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListMultipartUploads

func (c * S3 ) ListMultipartUploads(input * ListMultipartUploadsInput ) (* ListMultipartUploadsOutput , error )
ListMultipartUploads API operation for Amazon Simple Storage Service.
This action lists in-progress multipart uploads. An in-progress multipart
upload is a multipart upload that has been initiated using the Initiate Multipart
Upload request, but has not yet been completed or aborted.
This action returns at most 1,000 multipart uploads in the response. 1,000
multipart uploads is the maximum number of uploads a response can include,
which is also the default value. You can further limit the number of uploads
in a response by specifying the max-uploads parameter in the response. If
additional multipart uploads satisfy the list criteria, the response will
contain an IsTruncated element with the value true. To list the additional
multipart uploads, use the key-marker and upload-id-marker request parameters.
In the response, the uploads are sorted by key. If your application has initiated
more than one multipart upload using the same object key, then uploads in
the response are first sorted by key. Additionally, uploads are sorted in
ascending order within each key by the upload initiation time.
For more information on multipart uploads, see Uploading Objects Using Multipart
Upload ( https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html ).
For information on permissions required to use the multipart upload API,
see Multipart Upload and Permissions ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html ).
The following operations are related to ListMultipartUploads:
CreateMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html )
UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html )
CompleteMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html )
ListParts ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html )
AbortMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation ListMultipartUploads for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListMultipartUploads    Example (Shared00)

To list in-progress multipart uploads on a bucket
The following example lists in-progress multipart uploads on a specific bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.ListMultipartUploadsInput{
Bucket: aws.String("examplebucket"),
}

result, err := svc.ListMultipartUploads(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared01)

List next set of multipart uploads when previous result is truncated
The following example specifies the upload-id-marker and key-marker from previous
truncated response to retrieve next setup of multipart uploads.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.ListMultipartUploadsInput{
Bucket:         aws.String("examplebucket"),
KeyMarker:      aws.String("nextkeyfrompreviousresponse"),
MaxUploads:     aws.Int64(2),
UploadIdMarker: aws.String("valuefrompreviousresponse"),
}

result, err := svc.ListMultipartUploads(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) ListMultipartUploadsPages

func (c * S3 ) ListMultipartUploadsPages(input * ListMultipartUploadsInput , fn func(* ListMultipartUploadsOutput , bool ) bool ) error
ListMultipartUploadsPages iterates over the pages of a ListMultipartUploads operation,
calling the "fn" function with the response data for each page. To stop
iterating, return false from the fn function.
See ListMultipartUploads method for more information on how to use this operation.
Note: This operation can generate multiple requests to a service. // Example iterating over at most 3 pages of a ListMultipartUploads operation.
pageNum := 0
err := client.ListMultipartUploadsPages(params,

func(page *s3.ListMultipartUploadsOutput, lastPage bool) bool {
pageNum++
fmt.Println(page)
return pageNum <= 3
})

func (*S3) ListMultipartUploadsPagesWithContext    added in  v1.8.0

func (c * S3 ) ListMultipartUploadsPagesWithContext(ctx aws . Context , input * ListMultipartUploadsInput , fn func(* ListMultipartUploadsOutput , bool ) bool , opts ... request . Option ) error
ListMultipartUploadsPagesWithContext same as ListMultipartUploadsPages except
it takes a Context and allows setting request options on the pages.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListMultipartUploadsRequest

func (c * S3 ) ListMultipartUploadsRequest(input * ListMultipartUploadsInput ) (req * request . Request , output * ListMultipartUploadsOutput )
ListMultipartUploadsRequest generates a "aws/request.Request" representing the
client's request for the ListMultipartUploads operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See ListMultipartUploads for more information on using the ListMultipartUploads
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the ListMultipartUploadsRequest method.
req, resp := client.ListMultipartUploadsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListMultipartUploads

func (*S3) ListMultipartUploadsWithContext    added in  v1.8.0

func (c * S3 ) ListMultipartUploadsWithContext(ctx aws . Context , input * ListMultipartUploadsInput , opts ... request . Option ) (* ListMultipartUploadsOutput , error )
ListMultipartUploadsWithContext is the same as ListMultipartUploads with the addition of
the ability to pass a context and additional request options.
See ListMultipartUploads for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListObjectVersions

func (c * S3 ) ListObjectVersions(input * ListObjectVersionsInput ) (* ListObjectVersionsOutput , error )
ListObjectVersions API operation for Amazon Simple Storage Service.
Returns metadata about all versions of the objects in a bucket. You can also
use request parameters as selection criteria to return metadata about a subset
of all the object versions.
To use this operation, you must have permission to perform the s3:ListBucketVersions
action. Be aware of the name difference.
A 200 OK response can contain valid or invalid XML. Make sure to design your
application to parse the contents of the response and handle it appropriately.
To use this operation, you must have READ access to the bucket.
This action is not supported by Amazon S3 on Outposts.
The following operations are related to ListObjectVersions:
ListObjectsV2 ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html )
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
PutObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html )
DeleteObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation ListObjectVersions for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectVersions    Example (Shared00)

To list object versions
The following example return versions of an object with specific key name prefix.
The request limits the number of items returned to two. If there are are more than
two object version, S3 returns NextToken in the response. You can specify this token
value in your next request to fetch next set of object versions.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.ListObjectVersionsInput{
Bucket: aws.String("examplebucket"),
Prefix: aws.String("HappyFace.jpg"),
}

result, err := svc.ListObjectVersions(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) ListObjectVersionsPages

func (c * S3 ) ListObjectVersionsPages(input * ListObjectVersionsInput , fn func(* ListObjectVersionsOutput , bool ) bool ) error
ListObjectVersionsPages iterates over the pages of a ListObjectVersions operation,
calling the "fn" function with the response data for each page. To stop
iterating, return false from the fn function.
See ListObjectVersions method for more information on how to use this operation.
Note: This operation can generate multiple requests to a service. // Example iterating over at most 3 pages of a ListObjectVersions operation.
pageNum := 0
err := client.ListObjectVersionsPages(params,

func(page *s3.ListObjectVersionsOutput, lastPage bool) bool {
pageNum++
fmt.Println(page)
return pageNum <= 3
})

func (*S3) ListObjectVersionsPagesWithContext    added in  v1.8.0

func (c * S3 ) ListObjectVersionsPagesWithContext(ctx aws . Context , input * ListObjectVersionsInput , fn func(* ListObjectVersionsOutput , bool ) bool , opts ... request . Option ) error
ListObjectVersionsPagesWithContext same as ListObjectVersionsPages except
it takes a Context and allows setting request options on the pages.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListObjectVersionsRequest

func (c * S3 ) ListObjectVersionsRequest(input * ListObjectVersionsInput ) (req * request . Request , output * ListObjectVersionsOutput )
ListObjectVersionsRequest generates a "aws/request.Request" representing the
client's request for the ListObjectVersions operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See ListObjectVersions for more information on using the ListObjectVersions
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the ListObjectVersionsRequest method.
req, resp := client.ListObjectVersionsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectVersions

func (*S3) ListObjectVersionsWithContext    added in  v1.8.0

func (c * S3 ) ListObjectVersionsWithContext(ctx aws . Context , input * ListObjectVersionsInput , opts ... request . Option ) (* ListObjectVersionsOutput , error )
ListObjectVersionsWithContext is the same as ListObjectVersions with the addition of
the ability to pass a context and additional request options.
See ListObjectVersions for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListObjects

func (c * S3 ) ListObjects(input * ListObjectsInput ) (* ListObjectsOutput , error )
ListObjects API operation for Amazon Simple Storage Service.
Returns some or all (up to 1,000) of the objects in a bucket. You can use
the request parameters as selection criteria to return a subset of the objects
in a bucket. A 200 OK response can contain valid or invalid XML. Be sure
to design your application to parse the contents of the response and handle
it appropriately.
This action has been revised. We recommend that you use the newer version,
ListObjectsV2 ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html ),
when developing applications. For backward compatibility, Amazon S3 continues
to support ListObjects.
The following operations are related to ListObjects:
ListObjectsV2 ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html )
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
PutObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html )
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
ListBuckets ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation ListObjects for usage and error information.
Returned Error Codes:  ErrCodeNoSuchBucket "NoSuchBucket"
The specified bucket does not exist.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjects    Example (Shared00)

To list objects in a bucket
The following example list two objects in a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.ListObjectsInput{
Bucket:  aws.String("examplebucket"),
MaxKeys: aws.Int64(2),
}

result, err := svc.ListObjects(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeNoSuchBucket:
fmt.Println(s3.ErrCodeNoSuchBucket, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) ListObjectsPages

func (c * S3 ) ListObjectsPages(input * ListObjectsInput , fn func(* ListObjectsOutput , bool ) bool ) error
ListObjectsPages iterates over the pages of a ListObjects operation,
calling the "fn" function with the response data for each page. To stop
iterating, return false from the fn function.
See ListObjects method for more information on how to use this operation.
Note: This operation can generate multiple requests to a service. // Example iterating over at most 3 pages of a ListObjects operation.
pageNum := 0
err := client.ListObjectsPages(params,

func(page *s3.ListObjectsOutput, lastPage bool) bool {
pageNum++
fmt.Println(page)
return pageNum <= 3
})

func (*S3) ListObjectsPagesWithContext    added in  v1.8.0

func (c * S3 ) ListObjectsPagesWithContext(ctx aws . Context , input * ListObjectsInput , fn func(* ListObjectsOutput , bool ) bool , opts ... request . Option ) error
ListObjectsPagesWithContext same as ListObjectsPages except
it takes a Context and allows setting request options on the pages.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListObjectsRequest

func (c * S3 ) ListObjectsRequest(input * ListObjectsInput ) (req * request . Request , output * ListObjectsOutput )
ListObjectsRequest generates a "aws/request.Request" representing the
client's request for the ListObjects operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See ListObjects for more information on using the ListObjects
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the ListObjectsRequest method.
req, resp := client.ListObjectsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjects

func (*S3) ListObjectsV2    added in  v1.1.24

func (c * S3 ) ListObjectsV2(input * ListObjectsV2Input ) (* ListObjectsV2Output , error )
ListObjectsV2 API operation for Amazon Simple Storage Service.
Returns some or all (up to 1,000) of the objects in a bucket with each request.
You can use the request parameters as selection criteria to return a subset
of the objects in a bucket. A 200 OK response can contain valid or invalid
XML. Make sure to design your application to parse the contents of the response
and handle it appropriately. Objects are returned sorted in an ascending
order of the respective key names in the list. For more information about
listing objects, see Listing object keys programmatically ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/ListingKeysUsingAPIs.html )
in the Amazon S3 User Guide.
To use this operation, you must have READ access to the bucket.
To use this action in an Identity and Access Management (IAM) policy, you
must have permission to perform the s3:ListBucket action. The bucket owner
has this permission by default and can grant this permission to others. For
more information about permissions, see Permissions Related to Bucket Subresource
Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html )
in the Amazon S3 User Guide.
This section describes the latest revision of this action. We recommend that
you use this revised API operation for application development. For backward
compatibility, Amazon S3 continues to support the prior version of this API
operation, ListObjects ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html ).
To get a list of your buckets, see ListBuckets ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html ).
The following operations are related to ListObjectsV2:
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
PutObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html )
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation ListObjectsV2 for usage and error information.
Returned Error Codes:  ErrCodeNoSuchBucket "NoSuchBucket"
The specified bucket does not exist.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectsV2    Example (Shared00)

To get object list
The following example retrieves object list. The request specifies max keys to limit
response to include only 2 object keys.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.ListObjectsV2Input{
Bucket:  aws.String("DOC-EXAMPLE-BUCKET"),
MaxKeys: aws.Int64(2),
}

result, err := svc.ListObjectsV2(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeNoSuchBucket:
fmt.Println(s3.ErrCodeNoSuchBucket, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) ListObjectsV2Pages    added in  v1.1.34

func (c * S3 ) ListObjectsV2Pages(input * ListObjectsV2Input , fn func(* ListObjectsV2Output , bool ) bool ) error
ListObjectsV2Pages iterates over the pages of a ListObjectsV2 operation,
calling the "fn" function with the response data for each page. To stop
iterating, return false from the fn function.
See ListObjectsV2 method for more information on how to use this operation.
Note: This operation can generate multiple requests to a service. // Example iterating over at most 3 pages of a ListObjectsV2 operation.
pageNum := 0
err := client.ListObjectsV2Pages(params,

func(page *s3.ListObjectsV2Output, lastPage bool) bool {
pageNum++
fmt.Println(page)
return pageNum <= 3
})

func (*S3) ListObjectsV2PagesWithContext    added in  v1.8.0

func (c * S3 ) ListObjectsV2PagesWithContext(ctx aws . Context , input * ListObjectsV2Input , fn func(* ListObjectsV2Output , bool ) bool , opts ... request . Option ) error
ListObjectsV2PagesWithContext same as ListObjectsV2Pages except
it takes a Context and allows setting request options on the pages.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListObjectsV2Request    added in  v1.1.24

func (c * S3 ) ListObjectsV2Request(input * ListObjectsV2Input ) (req * request . Request , output * ListObjectsV2Output )
ListObjectsV2Request generates a "aws/request.Request" representing the
client's request for the ListObjectsV2 operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See ListObjectsV2 for more information on using the ListObjectsV2
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the ListObjectsV2Request method.
req, resp := client.ListObjectsV2Request(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectsV2

func (*S3) ListObjectsV2WithContext    added in  v1.8.0

func (c * S3 ) ListObjectsV2WithContext(ctx aws . Context , input * ListObjectsV2Input , opts ... request . Option ) (* ListObjectsV2Output , error )
ListObjectsV2WithContext is the same as ListObjectsV2 with the addition of
the ability to pass a context and additional request options.
See ListObjectsV2 for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListObjectsWithContext    added in  v1.8.0

func (c * S3 ) ListObjectsWithContext(ctx aws . Context , input * ListObjectsInput , opts ... request . Option ) (* ListObjectsOutput , error )
ListObjectsWithContext is the same as ListObjects with the addition of
the ability to pass a context and additional request options.
See ListObjects for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListParts

func (c * S3 ) ListParts(input * ListPartsInput ) (* ListPartsOutput , error )
ListParts API operation for Amazon Simple Storage Service.
Lists the parts that have been uploaded for a specific multipart upload.
This operation must include the upload ID, which you obtain by sending the
initiate multipart upload request (see CreateMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html )).
This request returns a maximum of 1,000 uploaded parts. The default number
of parts returned is 1,000 parts. You can restrict the number of parts returned
by specifying the max-parts request parameter. If your multipart upload consists
of more than 1,000 parts, the response returns an IsTruncated field with
the value of true, and a NextPartNumberMarker element. In subsequent ListParts
requests you can include the part-number-marker query string parameter and
set its value to the NextPartNumberMarker field value from the previous response.
If the upload was created using a checksum algorithm, you will need to have
permission to the kms:Decrypt action for the request to succeed.
For more information on multipart uploads, see Uploading Objects Using Multipart
Upload ( https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html ).
For information on permissions required to use the multipart upload API,
see Multipart Upload and Permissions ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html ).
The following operations are related to ListParts:
CreateMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html )
UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html )
CompleteMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html )
AbortMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html )
GetObjectAttributes ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html )
ListMultipartUploads ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation ListParts for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListParts    Example (Shared00)

To list parts of a multipart upload.
The following example lists parts uploaded for a specific multipart upload.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.ListPartsInput{
Bucket:   aws.String("examplebucket"),
Key:      aws.String("bigobject"),
UploadId: aws.String("example7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--"),
}

result, err := svc.ListParts(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) ListPartsPages

func (c * S3 ) ListPartsPages(input * ListPartsInput , fn func(* ListPartsOutput , bool ) bool ) error
ListPartsPages iterates over the pages of a ListParts operation,
calling the "fn" function with the response data for each page. To stop
iterating, return false from the fn function.
See ListParts method for more information on how to use this operation.
Note: This operation can generate multiple requests to a service. // Example iterating over at most 3 pages of a ListParts operation.
pageNum := 0
err := client.ListPartsPages(params,

func(page *s3.ListPartsOutput, lastPage bool) bool {
pageNum++
fmt.Println(page)
return pageNum <= 3
})

func (*S3) ListPartsPagesWithContext    added in  v1.8.0

func (c * S3 ) ListPartsPagesWithContext(ctx aws . Context , input * ListPartsInput , fn func(* ListPartsOutput , bool ) bool , opts ... request . Option ) error
ListPartsPagesWithContext same as ListPartsPages except
it takes a Context and allows setting request options on the pages.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) ListPartsRequest

func (c * S3 ) ListPartsRequest(input * ListPartsInput ) (req * request . Request , output * ListPartsOutput )
ListPartsRequest generates a "aws/request.Request" representing the
client's request for the ListParts operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See ListParts for more information on using the ListParts
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the ListPartsRequest method.
req, resp := client.ListPartsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListParts

func (*S3) ListPartsWithContext    added in  v1.8.0

func (c * S3 ) ListPartsWithContext(ctx aws . Context , input * ListPartsInput , opts ... request . Option ) (* ListPartsOutput , error )
ListPartsWithContext is the same as ListParts with the addition of
the ability to pass a context and additional request options.
See ListParts for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketAccelerateConfiguration    added in  v1.1.19

func (c * S3 ) PutBucketAccelerateConfiguration(input * PutBucketAccelerateConfigurationInput ) (* PutBucketAccelerateConfigurationOutput , error )
PutBucketAccelerateConfiguration API operation for Amazon Simple Storage Service.
Sets the accelerate configuration of an existing bucket. Amazon S3 Transfer
Acceleration is a bucket-level feature that enables you to perform faster
data transfers to Amazon S3.
To use this operation, you must have permission to perform the s3:PutAccelerateConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
The Transfer Acceleration state of a bucket can be set to one of the following
two values:
Enabled – Enables accelerated data transfers to the bucket.
Suspended – Disables accelerated data transfers to the bucket.
The GetBucketAccelerateConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html )
action returns the transfer acceleration state of a bucket.
After setting the Transfer Acceleration state of a bucket to Enabled, it
might take up to thirty minutes before the data transfer rates to the bucket
increase.
The name of the bucket used for Transfer Acceleration must be DNS-compliant
and must not contain periods (".").
For more information about transfer acceleration, see Transfer Acceleration
( https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html ).
The following operations are related to PutBucketAccelerateConfiguration:
GetBucketAccelerateConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html )
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketAccelerateConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAccelerateConfiguration

func (*S3) PutBucketAccelerateConfigurationRequest    added in  v1.1.19

func (c * S3 ) PutBucketAccelerateConfigurationRequest(input * PutBucketAccelerateConfigurationInput ) (req * request . Request , output * PutBucketAccelerateConfigurationOutput )
PutBucketAccelerateConfigurationRequest generates a "aws/request.Request" representing the
client's request for the PutBucketAccelerateConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketAccelerateConfiguration for more information on using the PutBucketAccelerateConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketAccelerateConfigurationRequest method.
req, resp := client.PutBucketAccelerateConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAccelerateConfiguration

func (*S3) PutBucketAccelerateConfigurationWithContext    added in  v1.8.0

func (c * S3 ) PutBucketAccelerateConfigurationWithContext(ctx aws . Context , input * PutBucketAccelerateConfigurationInput , opts ... request . Option ) (* PutBucketAccelerateConfigurationOutput , error )
PutBucketAccelerateConfigurationWithContext is the same as PutBucketAccelerateConfiguration with the addition of
the ability to pass a context and additional request options.
See PutBucketAccelerateConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketAcl    added in  v0.9.5

func (c * S3 ) PutBucketAcl(input * PutBucketAclInput ) (* PutBucketAclOutput , error )
Permissions    Grantee Values
PutBucketAcl API operation for Amazon Simple Storage Service.
Sets the permissions on an existing bucket using access control lists (ACL).
For more information, see Using ACLs ( https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html ).
To set the ACL of a bucket, you must have WRITE_ACP permission.
You can use one of the following two ways to set a bucket's permissions:
Specify the ACL in the request body
Specify permissions using request headers
You cannot specify access permission using both the body and the request
headers.
Depending on your application needs, you may choose to set the ACL on a bucket
using either the request body or the headers. For example, if you have an
existing application that updates a bucket ACL using the request body, then
you can continue to use that approach.
If your bucket uses the bucket owner enforced setting for S3 Object Ownership,
ACLs are disabled and no longer affect permissions. You must use policies
to grant access to your bucket and the objects in it. Requests to set ACLs
or update ACLs fail and return the AccessControlListNotSupported error code.
Requests to read ACLs are still supported. For more information, see Controlling
object ownership ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html )
in the Amazon S3 User Guide. Permissions
You can set access permissions by using one of the following methods:
Specify a canned ACL with the x-amz-acl request header. Amazon S3 supports
a set of predefined ACLs, known as canned ACLs. Each canned ACL has a
predefined set of grantees and permissions. Specify the canned ACL name
as the value of x-amz-acl. If you use this header, you cannot use other
access control-specific headers in your request. For more information,
see Canned ACL ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL ).
Specify access permissions explicitly with the x-amz-grant-read, x-amz-grant-read-acp,
x-amz-grant-write-acp, and x-amz-grant-full-control headers. When using
these headers, you specify explicit access permissions and grantees (Amazon
Web Services accounts or Amazon S3 groups) who will receive the permission.
If you use these ACL-specific headers, you cannot use the x-amz-acl header
to set a canned ACL. These parameters map to the set of permissions that
Amazon S3 supports in an ACL. For more information, see Access Control
List (ACL) Overview ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html ).
You specify each grantee as a type=value pair, where the type is one of
the following: id – if the value specified is the canonical user ID
of an Amazon Web Services account uri – if you are granting permissions
to a predefined group emailAddress – if the value specified is the email
address of an Amazon Web Services account Using email addresses to specify
a grantee is only supported in the following Amazon Web Services Regions:
US East (N. Virginia) US West (N. California) US West (Oregon) Asia Pacific
(Singapore) Asia Pacific (Sydney) Asia Pacific (Tokyo) Europe (Ireland)
South America (São Paulo) For a list of all the Amazon S3 supported Regions
and endpoints, see Regions and Endpoints ( https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region )
in the Amazon Web Services General Reference. For example, the following
x-amz-grant-write header grants create, overwrite, and delete objects
permission to LogDelivery group predefined by Amazon S3 and two Amazon
Web Services accounts identified by their email addresses. x-amz-grant-write:
uri=" http://acs.amazonaws.com/groups/s3/LogDelivery ", id="111122223333",
id="555566667777"
You can use either a canned ACL or specify access permissions explicitly.
You cannot do both. Grantee Values
You can specify the person (grantee) to whom you're assigning access rights
(using request elements) in the following ways:
By the person's ID: <Grantee xmlns:xsi=" http://www.w3.org/2001/XMLSchema-instance "
xsi:type="CanonicalUser"><ID><>ID<></ID><DisplayName><>GranteesEmail<></DisplayName>
</Grantee> DisplayName is optional and ignored in the request
By URI: <Grantee xmlns:xsi=" http://www.w3.org/2001/XMLSchema-instance "
xsi:type="Group"><URI><> http://acs.amazonaws.com/groups/global/AuthenticatedUsers <></URI></Grantee>
By Email address: <Grantee xmlns:xsi=" http://www.w3.org/2001/XMLSchema-instance "
xsi:type="AmazonCustomerByEmail"><EmailAddress><>Grantees@email.com<></EmailAddress>&</Grantee>
The grantee is resolved to the CanonicalUser and, in a response to a GET
Object acl request, appears as the CanonicalUser. Using email addresses
to specify a grantee is only supported in the following Amazon Web Services
Regions: US East (N. Virginia) US West (N. California) US West (Oregon)
Asia Pacific (Singapore) Asia Pacific (Sydney) Asia Pacific (Tokyo) Europe
(Ireland) South America (São Paulo) For a list of all the Amazon S3 supported
Regions and endpoints, see Regions and Endpoints ( https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region )
in the Amazon Web Services General Reference.
The following operations are related to PutBucketAcl:
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
DeleteBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html )
GetObjectAcl ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketAcl for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAcl    Example (Shared00)

Put bucket acl
The following example replaces existing ACL on a bucket. The ACL grants the bucket
owner (specified using the owner ID) and write permission to the LogDelivery group.
Because this is a replace operation, you must specify all the grants in your request.
To incrementally add or remove ACL grants, you might use the console.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketAclInput{
Bucket:           aws.String("examplebucket"),
GrantFullControl: aws.String("id=examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484"),
GrantWrite:       aws.String("uri=http://acs.amazonaws.com/groups/s3/LogDelivery"),
}

result, err := svc.PutBucketAcl(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketAclRequest    added in  v0.9.5

func (c * S3 ) PutBucketAclRequest(input * PutBucketAclInput ) (req * request . Request , output * PutBucketAclOutput )
PutBucketAclRequest generates a "aws/request.Request" representing the
client's request for the PutBucketAcl operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketAcl for more information on using the PutBucketAcl
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketAclRequest method.
req, resp := client.PutBucketAclRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAcl

func (*S3) PutBucketAclWithContext    added in  v1.8.0

func (c * S3 ) PutBucketAclWithContext(ctx aws . Context , input * PutBucketAclInput , opts ... request . Option ) (* PutBucketAclOutput , error )
PutBucketAclWithContext is the same as PutBucketAcl with the addition of
the ability to pass a context and additional request options.
See PutBucketAcl for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketAnalyticsConfiguration    added in  v1.5.11

func (c * S3 ) PutBucketAnalyticsConfiguration(input * PutBucketAnalyticsConfigurationInput ) (* PutBucketAnalyticsConfigurationOutput , error )
PutBucketAnalyticsConfiguration API operation for Amazon Simple Storage Service.
Sets an analytics configuration for the bucket (specified by the analytics
configuration ID). You can have up to 1,000 analytics configurations per
bucket.
You can choose to have storage class analysis export analysis reports sent
to a comma-separated values (CSV) flat file. See the DataExport request element.
Reports are updated daily and are based on the object filters that you configure.
When selecting data export, you specify a destination bucket and an optional
destination prefix where the file is written. You can export the data to
a destination bucket in a different account. However, the destination bucket
must be in the same Region as the bucket that you are making the PUT analytics
configuration to. For more information, see Amazon S3 Analytics – Storage
Class Analysis ( https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html ).
You must create a bucket policy on the destination bucket where the exported
file is written to grant permissions to Amazon S3 to write objects to the
bucket. For an example policy, see Granting Permissions for Amazon S3 Inventory
and Storage Class Analysis ( https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-9 ).
To use this operation, you must have permissions to perform the s3:PutAnalyticsConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
PutBucketAnalyticsConfiguration has the following special errors:
HTTP Error: HTTP 400 Bad Request Code: InvalidArgument Cause: Invalid
argument.
HTTP Error: HTTP 400 Bad Request Code: TooManyConfigurations Cause:
You are attempting to create a new configuration but have already reached
the 1,000-configuration limit.
HTTP Error: HTTP 403 Forbidden Code: AccessDenied Cause: You are not
the owner of the specified bucket, or you do not have the s3:PutAnalyticsConfiguration
bucket permission to set the configuration on the bucket.
The following operations are related to PutBucketAnalyticsConfiguration:
GetBucketAnalyticsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html )
DeleteBucketAnalyticsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html )
ListBucketAnalyticsConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketAnalyticsConfigurations.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketAnalyticsConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAnalyticsConfiguration

func (*S3) PutBucketAnalyticsConfigurationRequest    added in  v1.5.11

func (c * S3 ) PutBucketAnalyticsConfigurationRequest(input * PutBucketAnalyticsConfigurationInput ) (req * request . Request , output * PutBucketAnalyticsConfigurationOutput )
PutBucketAnalyticsConfigurationRequest generates a "aws/request.Request" representing the
client's request for the PutBucketAnalyticsConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketAnalyticsConfiguration for more information on using the PutBucketAnalyticsConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketAnalyticsConfigurationRequest method.
req, resp := client.PutBucketAnalyticsConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAnalyticsConfiguration

func (*S3) PutBucketAnalyticsConfigurationWithContext    added in  v1.8.0

func (c * S3 ) PutBucketAnalyticsConfigurationWithContext(ctx aws . Context , input * PutBucketAnalyticsConfigurationInput , opts ... request . Option ) (* PutBucketAnalyticsConfigurationOutput , error )
PutBucketAnalyticsConfigurationWithContext is the same as PutBucketAnalyticsConfiguration with the addition of
the ability to pass a context and additional request options.
See PutBucketAnalyticsConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketCors    added in  v0.9.5

func (c * S3 ) PutBucketCors(input * PutBucketCorsInput ) (* PutBucketCorsOutput , error )
PutBucketCors API operation for Amazon Simple Storage Service.
Sets the cors configuration for your bucket. If the configuration exists,
Amazon S3 replaces it.
To use this operation, you must be allowed to perform the s3:PutBucketCORS
action. By default, the bucket owner has this permission and can grant it
to others.
You set this configuration on a bucket so that the bucket can service cross-origin
requests. For example, you might want to enable a request whose origin is http://www.example.com to access your Amazon S3 bucket at my.example.bucket.com
by using the browser's XMLHttpRequest capability.
To enable cross-origin resource sharing (CORS) on a bucket, you add the cors
subresource to the bucket. The cors subresource is an XML document in which
you configure rules that identify origins and the HTTP methods that can be
executed on your bucket. The document is limited to 64 KB in size.
When Amazon S3 receives a cross-origin request (or a pre-flight OPTIONS request)
against a bucket, it evaluates the cors configuration on the bucket and uses
the first CORSRule rule that matches the incoming browser request to enable
a cross-origin request. For a rule to match, the following conditions must
be met:
The request's Origin header must match AllowedOrigin elements.
The request method (for example, GET, PUT, HEAD, and so on) or the Access-Control-Request-Method
header in case of a pre-flight OPTIONS request must be one of the AllowedMethod
elements.
Every header specified in the Access-Control-Request-Headers request
header of a pre-flight request must match an AllowedHeader element.
For more information about CORS, go to Enabling Cross-Origin Resource Sharing
( https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html ) in the Amazon
S3 User Guide.
The following operations are related to PutBucketCors:
GetBucketCors ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketCors.html )
DeleteBucketCors ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html )
RESTOPTIONSobject ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTOPTIONSobject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketCors for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketCors    Example (Shared00)

To set cors configuration on a bucket.
The following example enables PUT, POST, and DELETE requests from www.example.com,
and enables GET requests from any domain.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketCorsInput{
Bucket: aws.String(""),
CORSConfiguration: &s3.CORSConfiguration{
CORSRules: []*s3.CORSRule{
{
AllowedHeaders: []*string{
aws.String("*"),
},
AllowedMethods: []*string{
aws.String("PUT"),
aws.String("POST"),
aws.String("DELETE"),
},
AllowedOrigins: []*string{
aws.String("http://www.example.com"),
},
ExposeHeaders: []*string{
aws.String("x-amz-server-side-encryption"),
},
MaxAgeSeconds: aws.Int64(3000),
},
{
AllowedHeaders: []*string{
aws.String("Authorization"),
},
AllowedMethods: []*string{
aws.String("GET"),
},
AllowedOrigins: []*string{
aws.String("*"),
},
MaxAgeSeconds: aws.Int64(3000),
},
},
},
}

result, err := svc.PutBucketCors(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketCorsRequest    added in  v0.9.5

func (c * S3 ) PutBucketCorsRequest(input * PutBucketCorsInput ) (req * request . Request , output * PutBucketCorsOutput )
PutBucketCorsRequest generates a "aws/request.Request" representing the
client's request for the PutBucketCors operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketCors for more information on using the PutBucketCors
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketCorsRequest method.
req, resp := client.PutBucketCorsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketCors

func (*S3) PutBucketCorsWithContext    added in  v1.8.0

func (c * S3 ) PutBucketCorsWithContext(ctx aws . Context , input * PutBucketCorsInput , opts ... request . Option ) (* PutBucketCorsOutput , error )
PutBucketCorsWithContext is the same as PutBucketCors with the addition of
the ability to pass a context and additional request options.
See PutBucketCors for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketEncryption    added in  v1.12.24

func (c * S3 ) PutBucketEncryption(input * PutBucketEncryptionInput ) (* PutBucketEncryptionOutput , error )
PutBucketEncryption API operation for Amazon Simple Storage Service.
This action uses the encryption subresource to configure default encryption
and Amazon S3 Bucket Keys for an existing bucket.
By default, all buckets have a default encryption configuration that uses
server-side encryption with Amazon S3 managed keys (SSE-S3). You can optionally
configure default encryption for a bucket by using server-side encryption
with Key Management Service (KMS) keys (SSE-KMS) or dual-layer server-side
encryption with Amazon Web Services KMS keys (DSSE-KMS). If you specify default
encryption by using SSE-KMS, you can also configure Amazon S3 Bucket Keys
( https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html ). If you
use PutBucketEncryption to set your default bucket encryption ( https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html )
to SSE-KMS, you should verify that your KMS key ID is correct. Amazon S3
does not validate the KMS key ID provided in PutBucketEncryption requests.
This action requires Amazon Web Services Signature Version 4. For more information,
see Authenticating Requests (Amazon Web Services Signature Version 4) ( https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html ).
To use this operation, you must have permission to perform the s3:PutEncryptionConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html )
in the Amazon S3 User Guide.
The following operations are related to PutBucketEncryption:
GetBucketEncryption ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html )
DeleteBucketEncryption ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketEncryption.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketEncryption for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketEncryption

func (*S3) PutBucketEncryptionRequest    added in  v1.12.24

func (c * S3 ) PutBucketEncryptionRequest(input * PutBucketEncryptionInput ) (req * request . Request , output * PutBucketEncryptionOutput )
PutBucketEncryptionRequest generates a "aws/request.Request" representing the
client's request for the PutBucketEncryption operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketEncryption for more information on using the PutBucketEncryption
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketEncryptionRequest method.
req, resp := client.PutBucketEncryptionRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketEncryption

func (*S3) PutBucketEncryptionWithContext    added in  v1.12.24

func (c * S3 ) PutBucketEncryptionWithContext(ctx aws . Context , input * PutBucketEncryptionInput , opts ... request . Option ) (* PutBucketEncryptionOutput , error )
PutBucketEncryptionWithContext is the same as PutBucketEncryption with the addition of
the ability to pass a context and additional request options.
See PutBucketEncryption for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketIntelligentTieringConfiguration    added in  v1.35.24

func (c * S3 ) PutBucketIntelligentTieringConfiguration(input * PutBucketIntelligentTieringConfigurationInput ) (* PutBucketIntelligentTieringConfigurationOutput , error )
HTTP 400 Bad Request Error    HTTP 400 Bad Request Error    HTTP 403 Forbidden Error
PutBucketIntelligentTieringConfiguration API operation for Amazon Simple Storage Service.
Puts a S3 Intelligent-Tiering configuration to the specified bucket. You
can have up to 1,000 S3 Intelligent-Tiering configurations per bucket.
The S3 Intelligent-Tiering storage class is designed to optimize storage
costs by automatically moving data to the most cost-effective storage access
tier, without performance impact or operational overhead. S3 Intelligent-Tiering
delivers automatic cost savings in three low latency and high throughput
access tiers. To get the lowest storage cost on data that can be accessed
in minutes to hours, you can choose to activate additional archiving capabilities.
The S3 Intelligent-Tiering storage class is the ideal storage class for data
with unknown, changing, or unpredictable access patterns, independent of
object size or retention period. If the size of an object is less than 128
KB, it is not monitored and not eligible for auto-tiering. Smaller objects
can be stored, but they are always charged at the Frequent Access tier rates
in the S3 Intelligent-Tiering storage class.
For more information, see Storage class for automatically optimizing frequently
and infrequently accessed objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access ).
Operations related to PutBucketIntelligentTieringConfiguration include:
DeleteBucketIntelligentTieringConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketIntelligentTieringConfiguration.html )
GetBucketIntelligentTieringConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html )
ListBucketIntelligentTieringConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketIntelligentTieringConfigurations.html )
You only need S3 Intelligent-Tiering enabled on a bucket if you want to automatically
move objects stored in the S3 Intelligent-Tiering storage class to the Archive
Access or Deep Archive Access tier.
PutBucketIntelligentTieringConfiguration has the following special errors: HTTP 400 Bad Request Error
Code: InvalidArgument
Cause: Invalid Argument HTTP 400 Bad Request Error
Code: TooManyConfigurations
Cause: You are attempting to create a new configuration but have already
reached the 1,000-configuration limit. HTTP 403 Forbidden Error
Cause: You are not the owner of the specified bucket, or you do not have
the s3:PutIntelligentTieringConfiguration bucket permission to set the configuration
on the bucket.
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketIntelligentTieringConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketIntelligentTieringConfiguration

func (*S3) PutBucketIntelligentTieringConfigurationRequest    added in  v1.35.24

func (c * S3 ) PutBucketIntelligentTieringConfigurationRequest(input * PutBucketIntelligentTieringConfigurationInput ) (req * request . Request , output * PutBucketIntelligentTieringConfigurationOutput )
PutBucketIntelligentTieringConfigurationRequest generates a "aws/request.Request" representing the
client's request for the PutBucketIntelligentTieringConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketIntelligentTieringConfiguration for more information on using the PutBucketIntelligentTieringConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketIntelligentTieringConfigurationRequest method.
req, resp := client.PutBucketIntelligentTieringConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketIntelligentTieringConfiguration

func (*S3) PutBucketIntelligentTieringConfigurationWithContext    added in  v1.35.24

func (c * S3 ) PutBucketIntelligentTieringConfigurationWithContext(ctx aws . Context , input * PutBucketIntelligentTieringConfigurationInput , opts ... request . Option ) (* PutBucketIntelligentTieringConfigurationOutput , error )
PutBucketIntelligentTieringConfigurationWithContext is the same as PutBucketIntelligentTieringConfiguration with the addition of
the ability to pass a context and additional request options.
See PutBucketIntelligentTieringConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketInventoryConfiguration    added in  v1.5.11

func (c * S3 ) PutBucketInventoryConfiguration(input * PutBucketInventoryConfigurationInput ) (* PutBucketInventoryConfigurationOutput , error )
Permissions    HTTP 400 Bad Request Error    HTTP 400 Bad Request Error    HTTP 403 Forbidden Error
PutBucketInventoryConfiguration API operation for Amazon Simple Storage Service.
This implementation of the PUT action adds an inventory configuration (identified
by the inventory ID) to the bucket. You can have up to 1,000 inventory configurations
per bucket.
Amazon S3 inventory generates inventories of the objects in the bucket on
a daily or weekly basis, and the results are published to a flat file. The
bucket that is inventoried is called the source bucket, and the bucket where
the inventory flat file is stored is called the destination bucket. The destination
bucket must be in the same Amazon Web Services Region as the source bucket.
When you configure an inventory for a source bucket, you specify the destination
bucket where you want the inventory to be stored, and whether to generate
the inventory daily or weekly. You can also configure what object metadata
to include and whether to inventory all object versions or only current versions.
For more information, see Amazon S3 Inventory ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html )
in the Amazon S3 User Guide.
You must create a bucket policy on the destination bucket to grant permissions
to Amazon S3 to write objects to the bucket in the defined location. For
an example policy, see Granting Permissions for Amazon S3 Inventory and Storage
Class Analysis ( https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-9 ). Permissions
To use this operation, you must have permission to perform the s3:PutInventoryConfiguration
action. The bucket owner has this permission by default and can grant this
permission to others.
The s3:PutInventoryConfiguration permission allows a user to create an S3
Inventory ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-inventory.html )
report that includes all object metadata fields available and to specify
the destination bucket to store the inventory. A user with read access to
objects in the destination bucket can also access all object metadata fields
that are available in the inventory report.
To restrict access to an inventory report, see Restricting access to an Amazon
S3 Inventory report ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html#example-bucket-policies-use-case-10 )
in the Amazon S3 User Guide. For more information about the metadata fields
available in S3 Inventory, see Amazon S3 Inventory lists ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-inventory.html#storage-inventory-contents )
in the Amazon S3 User Guide. For more information about permissions, see
Permissions related to bucket subresource operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Identity and access management in Amazon S3 ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html )
in the Amazon S3 User Guide.
PutBucketInventoryConfiguration has the following special errors: HTTP 400 Bad Request Error
Code: InvalidArgument
Cause: Invalid Argument HTTP 400 Bad Request Error
Code: TooManyConfigurations
Cause: You are attempting to create a new configuration but have already
reached the 1,000-configuration limit. HTTP 403 Forbidden Error
Cause: You are not the owner of the specified bucket, or you do not have
the s3:PutInventoryConfiguration bucket permission to set the configuration
on the bucket.
The following operations are related to PutBucketInventoryConfiguration:
GetBucketInventoryConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html )
DeleteBucketInventoryConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html )
ListBucketInventoryConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketInventoryConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketInventoryConfiguration

func (*S3) PutBucketInventoryConfigurationRequest    added in  v1.5.11

func (c * S3 ) PutBucketInventoryConfigurationRequest(input * PutBucketInventoryConfigurationInput ) (req * request . Request , output * PutBucketInventoryConfigurationOutput )
PutBucketInventoryConfigurationRequest generates a "aws/request.Request" representing the
client's request for the PutBucketInventoryConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketInventoryConfiguration for more information on using the PutBucketInventoryConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketInventoryConfigurationRequest method.
req, resp := client.PutBucketInventoryConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketInventoryConfiguration

func (*S3) PutBucketInventoryConfigurationWithContext    added in  v1.8.0

func (c * S3 ) PutBucketInventoryConfigurationWithContext(ctx aws . Context , input * PutBucketInventoryConfigurationInput , opts ... request . Option ) (* PutBucketInventoryConfigurationOutput , error )
PutBucketInventoryConfigurationWithContext is the same as PutBucketInventoryConfiguration with the addition of
the ability to pass a context and additional request options.
See PutBucketInventoryConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketLifecycle  deprecated


func (c * S3 ) PutBucketLifecycle(input * PutBucketLifecycleInput ) (* PutBucketLifecycleOutput , error )
PutBucketLifecycle API operation for Amazon Simple Storage Service.
For an updated version of this API, see PutBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html ).
This version has been deprecated. Existing lifecycle configurations will
work. For new lifecycle configurations, use the updated API.
Creates a new lifecycle configuration for the bucket or replaces an existing
lifecycle configuration. For information about lifecycle configuration, see
Object Lifecycle Management ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html )
in the Amazon S3 User Guide.
By default, all Amazon S3 resources, including buckets, objects, and related
subresources (for example, lifecycle configuration and website configuration)
are private. Only the resource owner, the Amazon Web Services account that
created the resource, can access it. The resource owner can optionally grant
access permissions to others by writing an access policy. For this operation,
users must get the s3:PutLifecycleConfiguration permission.
You can also explicitly deny permissions. Explicit denial also supersedes
any other permissions. If you want to prevent users or accounts from removing
or deleting objects from your bucket, you must deny them permissions for
the following actions:
s3:DeleteObject
s3:DeleteObjectVersion
s3:PutLifecycleConfiguration
For more information about permissions, see Managing Access Permissions to
your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html )
in the Amazon S3 User Guide.
For more examples of transitioning objects to storage classes such as STANDARD_IA
or ONEZONE_IA, see Examples of Lifecycle Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#lifecycle-configuration-examples ).
The following operations are related to PutBucketLifecycle:
GetBucketLifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html )(Deprecated)
GetBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html )
RestoreObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html )
By default, a resource owner—in this case, a bucket owner, which is
the Amazon Web Services account that created the bucket—can perform
any of the operations. A resource owner can also grant others permission
to perform the operation. For more information, see the following topics
in the Amazon S3 User Guide: Specifying Permissions in a Policy ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html )
Managing Access Permissions to your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketLifecycle for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLifecycle
Deprecated: PutBucketLifecycle has been deprecated

func (*S3) PutBucketLifecycleConfiguration    added in  v0.9.8

func (c * S3 ) PutBucketLifecycleConfiguration(input * PutBucketLifecycleConfigurationInput ) (* PutBucketLifecycleConfigurationOutput , error )
Rules    Permissions
PutBucketLifecycleConfiguration API operation for Amazon Simple Storage Service.
Creates a new lifecycle configuration for the bucket or replaces an existing
lifecycle configuration. Keep in mind that this will overwrite an existing
lifecycle configuration, so if you want to retain any configuration details,
they must be included in the new lifecycle configuration. For information
about lifecycle configuration, see Managing your storage lifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html ).
Bucket lifecycle configuration now supports specifying a lifecycle rule using
an object key name prefix, one or more object tags, or a combination of both.
Accordingly, this section describes the latest API. The previous version
of the API supported filtering based only on an object key name prefix, which
is supported for backward compatibility. For the related API description,
see PutBucketLifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html ). Rules
You specify the lifecycle configuration in your request body. The lifecycle
configuration is specified as XML consisting of one or more rules. An Amazon
S3 Lifecycle configuration can have up to 1,000 rules. This limit is not
adjustable. Each rule consists of the following:
A filter identifying a subset of objects to which the rule applies.
The filter can be based on a key name prefix, object tags, or a combination
of both.
A status indicating whether the rule is in effect.
One or more lifecycle transition and expiration actions that you want
Amazon S3 to perform on the objects identified by the filter. If the state
of your bucket is versioning-enabled or versioning-suspended, you can
have many versions of the same object (one current version and zero or
more noncurrent versions). Amazon S3 provides predefined actions that
you can specify for current and noncurrent object versions.
For more information, see Object Lifecycle Management ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html )
and Lifecycle Configuration Elements ( https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html ). Permissions
By default, all Amazon S3 resources are private, including buckets, objects,
and related subresources (for example, lifecycle configuration and website
configuration). Only the resource owner (that is, the Amazon Web Services
account that created it) can access the resource. The resource owner can
optionally grant access permissions to others by writing an access policy.
For this operation, a user must get the s3:PutLifecycleConfiguration permission.
You can also explicitly deny permissions. An explicit deny also supersedes
any other permissions. If you want to block users or accounts from removing
or deleting objects from your bucket, you must deny them permissions for
the following actions:
s3:DeleteObject
s3:DeleteObjectVersion
s3:PutLifecycleConfiguration
For more information about permissions, see Managing Access Permissions to
Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
The following operations are related to PutBucketLifecycleConfiguration:
Examples of Lifecycle Configuration ( https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-configuration-examples.html )
GetBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html )
DeleteBucketLifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketLifecycleConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLifecycleConfiguration    Example (Shared00)

Put bucket lifecycle
The following example replaces existing lifecycle configuration, if any, on the specified
bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketLifecycleConfigurationInput{
Bucket: aws.String("examplebucket"),
LifecycleConfiguration: &s3.BucketLifecycleConfiguration{
Rules: []*s3.LifecycleRule{
{
Expiration: &s3.LifecycleExpiration{
Days: aws.Int64(3650),
},
Filter: &s3.LifecycleRuleFilter{
Prefix: aws.String("documents/"),
},
ID:     aws.String("TestOnly"),
Status: aws.String("Enabled"),
Transitions: []*s3.Transition{
{
Days:         aws.Int64(365),
StorageClass: aws.String("GLACIER"),
},
},
},
},
},
}

result, err := svc.PutBucketLifecycleConfiguration(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketLifecycleConfigurationRequest    added in  v0.9.8

func (c * S3 ) PutBucketLifecycleConfigurationRequest(input * PutBucketLifecycleConfigurationInput ) (req * request . Request , output * PutBucketLifecycleConfigurationOutput )
PutBucketLifecycleConfigurationRequest generates a "aws/request.Request" representing the
client's request for the PutBucketLifecycleConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketLifecycleConfiguration for more information on using the PutBucketLifecycleConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketLifecycleConfigurationRequest method.
req, resp := client.PutBucketLifecycleConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLifecycleConfiguration

func (*S3) PutBucketLifecycleConfigurationWithContext    added in  v1.8.0

func (c * S3 ) PutBucketLifecycleConfigurationWithContext(ctx aws . Context , input * PutBucketLifecycleConfigurationInput , opts ... request . Option ) (* PutBucketLifecycleConfigurationOutput , error )
PutBucketLifecycleConfigurationWithContext is the same as PutBucketLifecycleConfiguration with the addition of
the ability to pass a context and additional request options.
See PutBucketLifecycleConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketLifecycleRequest  deprecated


func (c * S3 ) PutBucketLifecycleRequest(input * PutBucketLifecycleInput ) (req * request . Request , output * PutBucketLifecycleOutput )
PutBucketLifecycleRequest generates a "aws/request.Request" representing the
client's request for the PutBucketLifecycle operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketLifecycle for more information on using the PutBucketLifecycle
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketLifecycleRequest method.
req, resp := client.PutBucketLifecycleRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLifecycle
Deprecated: PutBucketLifecycle has been deprecated

func (*S3) PutBucketLifecycleWithContext  deprecated     added in  v1.8.0


func (c * S3 ) PutBucketLifecycleWithContext(ctx aws . Context , input * PutBucketLifecycleInput , opts ... request . Option ) (* PutBucketLifecycleOutput , error )
PutBucketLifecycleWithContext is the same as PutBucketLifecycle with the addition of
the ability to pass a context and additional request options.
See PutBucketLifecycle for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.
Deprecated: PutBucketLifecycleWithContext has been deprecated

func (*S3) PutBucketLogging

func (c * S3 ) PutBucketLogging(input * PutBucketLoggingInput ) (* PutBucketLoggingOutput , error )
Grantee Values
PutBucketLogging API operation for Amazon Simple Storage Service.
Set the logging parameters for a bucket and to specify permissions for who
can view and modify the logging parameters. All logs are saved to buckets
in the same Amazon Web Services Region as the source bucket. To set the logging
status of a bucket, you must be the bucket owner.
The bucket owner is automatically granted FULL_CONTROL to all logs. You use
the Grantee request element to grant access to other people. The Permissions
request element specifies the kind of access the grantee has to the logs.
If the target bucket for log delivery uses the bucket owner enforced setting
for S3 Object Ownership, you can't use the Grantee request element to grant
access to others. Permissions can only be granted using policies. For more
information, see Permissions for server access log delivery ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html#grant-log-delivery-permissions-general )
in the Amazon S3 User Guide. Grantee Values
You can specify the person (grantee) to whom you're assigning access rights
(by using request elements) in the following ways:
By the person's ID: <Grantee xmlns:xsi=" http://www.w3.org/2001/XMLSchema-instance "
xsi:type="CanonicalUser"><ID><>ID<></ID><DisplayName><>GranteesEmail<></DisplayName>
</Grantee> DisplayName is optional and ignored in the request.
By Email address: <Grantee xmlns:xsi=" http://www.w3.org/2001/XMLSchema-instance "
xsi:type="AmazonCustomerByEmail"><EmailAddress><>Grantees@email.com<></EmailAddress></Grantee>
The grantee is resolved to the CanonicalUser and, in a response to a GETObjectAcl
request, appears as the CanonicalUser.
By URI: <Grantee xmlns:xsi=" http://www.w3.org/2001/XMLSchema-instance "
xsi:type="Group"><URI><> http://acs.amazonaws.com/groups/global/AuthenticatedUsers <></URI></Grantee>
To enable logging, you use LoggingEnabled and its children request elements.
To disable logging, you use an empty BucketLoggingStatus request element:
<BucketLoggingStatus xmlns=" http://doc.s3.amazonaws.com/2006-03-01 " />
For more information about server access logging, see Server Access Logging
( https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerLogs.html ) in
the Amazon S3 User Guide.
For more information about creating a bucket, see CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html ).
For more information about returning the logging status of a bucket, see
GetBucketLogging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html ).
The following operations are related to PutBucketLogging:
PutObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html )
DeleteBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html )
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
GetBucketLogging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketLogging for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLogging    Example (Shared00)

Set logging configuration for a bucket
The following example sets logging policy on a bucket. For the Log Delivery group
to deliver logs to the destination bucket, it needs permission for the READ_ACP action
which the policy grants.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketLoggingInput{
Bucket: aws.String("sourcebucket"),
BucketLoggingStatus: &s3.BucketLoggingStatus{
LoggingEnabled: &s3.LoggingEnabled{
TargetBucket: aws.String("targetbucket"),
TargetGrants: []*s3.TargetGrant{
{
Grantee: &s3.Grantee{
Type: aws.String("Group"),
URI:  aws.String("http://acs.amazonaws.com/groups/global/AllUsers"),
},
Permission: aws.String("READ"),
},
},
TargetPrefix: aws.String("MyBucketLogs/"),
},
},
}

result, err := svc.PutBucketLogging(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketLoggingRequest

func (c * S3 ) PutBucketLoggingRequest(input * PutBucketLoggingInput ) (req * request . Request , output * PutBucketLoggingOutput )
PutBucketLoggingRequest generates a "aws/request.Request" representing the
client's request for the PutBucketLogging operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketLogging for more information on using the PutBucketLogging
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketLoggingRequest method.
req, resp := client.PutBucketLoggingRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLogging

func (*S3) PutBucketLoggingWithContext    added in  v1.8.0

func (c * S3 ) PutBucketLoggingWithContext(ctx aws . Context , input * PutBucketLoggingInput , opts ... request . Option ) (* PutBucketLoggingOutput , error )
PutBucketLoggingWithContext is the same as PutBucketLogging with the addition of
the ability to pass a context and additional request options.
See PutBucketLogging for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketMetricsConfiguration    added in  v1.5.11

func (c * S3 ) PutBucketMetricsConfiguration(input * PutBucketMetricsConfigurationInput ) (* PutBucketMetricsConfigurationOutput , error )
PutBucketMetricsConfiguration API operation for Amazon Simple Storage Service.
Sets a metrics configuration (specified by the metrics configuration ID)
for the bucket. You can have up to 1,000 metrics configurations per bucket.
If you're updating an existing metrics configuration, note that this is a
full replacement of the existing metrics configuration. If you don't include
the elements you want to keep, they are erased.
To use this operation, you must have permissions to perform the s3:PutMetricsConfiguration
action. The bucket owner has this permission by default. The bucket owner
can grant this permission to others. For more information about permissions,
see Permissions Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
For information about CloudWatch request metrics for Amazon S3, see Monitoring
Metrics with Amazon CloudWatch ( https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html ).
The following operations are related to PutBucketMetricsConfiguration:
DeleteBucketMetricsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketMetricsConfiguration.html )
GetBucketMetricsConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html )
ListBucketMetricsConfigurations ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketMetricsConfigurations.html )
PutBucketMetricsConfiguration has the following special error:  Error code: TooManyConfigurations Description: You are attempting to
create a new configuration but have already reached the 1,000-configuration
limit. HTTP Status Code: HTTP 400 Bad Request
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketMetricsConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketMetricsConfiguration

func (*S3) PutBucketMetricsConfigurationRequest    added in  v1.5.11

func (c * S3 ) PutBucketMetricsConfigurationRequest(input * PutBucketMetricsConfigurationInput ) (req * request . Request , output * PutBucketMetricsConfigurationOutput )
PutBucketMetricsConfigurationRequest generates a "aws/request.Request" representing the
client's request for the PutBucketMetricsConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketMetricsConfiguration for more information on using the PutBucketMetricsConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketMetricsConfigurationRequest method.
req, resp := client.PutBucketMetricsConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketMetricsConfiguration

func (*S3) PutBucketMetricsConfigurationWithContext    added in  v1.8.0

func (c * S3 ) PutBucketMetricsConfigurationWithContext(ctx aws . Context , input * PutBucketMetricsConfigurationInput , opts ... request . Option ) (* PutBucketMetricsConfigurationOutput , error )
PutBucketMetricsConfigurationWithContext is the same as PutBucketMetricsConfiguration with the addition of
the ability to pass a context and additional request options.
See PutBucketMetricsConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketNotification  deprecated


func (c * S3 ) PutBucketNotification(input * PutBucketNotificationInput ) (* PutBucketNotificationOutput , error )
PutBucketNotification API operation for Amazon Simple Storage Service.
No longer used, see the PutBucketNotificationConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketNotificationConfiguration.html )
operation.
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketNotification for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketNotification
Deprecated: PutBucketNotification has been deprecated

func (*S3) PutBucketNotificationConfiguration

func (c * S3 ) PutBucketNotificationConfiguration(input * PutBucketNotificationConfigurationInput ) (* PutBucketNotificationConfigurationOutput , error )
PutBucketNotificationConfiguration API operation for Amazon Simple Storage Service.
Enables notifications of specified events for a bucket. For more information
about event notifications, see Configuring Event Notifications ( https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html ).
Using this API, you can replace an existing notification configuration. The
configuration is an XML file that defines the event types that you want Amazon
S3 to publish and the destination where you want Amazon S3 to publish an
event notification when it detects an event of the specified type.
By default, your bucket has no event notifications configured. That is, the
notification configuration will be an empty NotificationConfiguration.
<NotificationConfiguration>
</NotificationConfiguration>
This action replaces the existing notification configuration with the configuration
you include in the request body.
After Amazon S3 receives this request, it first verifies that any Amazon
Simple Notification Service (Amazon SNS) or Amazon Simple Queue Service (Amazon
SQS) destination exists, and that the bucket owner has permission to publish
to it by sending a test notification. In the case of Lambda destinations,
Amazon S3 verifies that the Lambda function permissions grant Amazon S3 permission
to invoke the function from the Amazon S3 bucket. For more information, see
Configuring Notifications for Amazon S3 Events ( https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html ).
You can disable notifications by adding the empty NotificationConfiguration
element.
For more information about the number of event notification configurations
that you can create per bucket, see Amazon S3 service quotas ( https://docs.aws.amazon.com/general/latest/gr/s3.html#limits_s3 )
in Amazon Web Services General Reference.
By default, only the bucket owner can configure notifications on a bucket.
However, bucket owners can use a bucket policy to grant permission to other
users to set this configuration with the required s3:PutBucketNotification
permission.
The PUT notification is an atomic operation. For example, suppose your notification
configuration includes SNS topic, SQS queue, and Lambda function configurations.
When you send a PUT request with this configuration, Amazon S3 sends test
messages to your SNS topic. If the message fails, the entire PUT action will
fail, and Amazon S3 will not add the configuration to your bucket.
If the configuration in the request body includes only one TopicConfiguration
specifying only the s3:ReducedRedundancyLostObject event type, the response
will also include the x-amz-sns-test-message-id header containing the message
ID of the test notification sent to the topic.
The following action is related to PutBucketNotificationConfiguration:  GetBucketNotificationConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketNotificationConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketNotificationConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketNotificationConfiguration    Example (Shared00)

Set notification configuration for a bucket
The following example sets notification configuration on a bucket to publish the
object created events to an SNS topic.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketNotificationConfigurationInput{
Bucket: aws.String("examplebucket"),
NotificationConfiguration: &s3.NotificationConfiguration{
TopicConfigurations: []*s3.TopicConfiguration{
{
Events: []*string{
aws.String("s3:ObjectCreated:*"),
},
TopicArn: aws.String("arn:aws:sns:us-west-2:123456789012:s3-notification-topic"),
},
},
},
}

result, err := svc.PutBucketNotificationConfiguration(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketNotificationConfigurationRequest

func (c * S3 ) PutBucketNotificationConfigurationRequest(input * PutBucketNotificationConfigurationInput ) (req * request . Request , output * PutBucketNotificationConfigurationOutput )
PutBucketNotificationConfigurationRequest generates a "aws/request.Request" representing the
client's request for the PutBucketNotificationConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketNotificationConfiguration for more information on using the PutBucketNotificationConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketNotificationConfigurationRequest method.
req, resp := client.PutBucketNotificationConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketNotificationConfiguration

func (*S3) PutBucketNotificationConfigurationWithContext    added in  v1.8.0

func (c * S3 ) PutBucketNotificationConfigurationWithContext(ctx aws . Context , input * PutBucketNotificationConfigurationInput , opts ... request . Option ) (* PutBucketNotificationConfigurationOutput , error )
PutBucketNotificationConfigurationWithContext is the same as PutBucketNotificationConfiguration with the addition of
the ability to pass a context and additional request options.
See PutBucketNotificationConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketNotificationRequest  deprecated


func (c * S3 ) PutBucketNotificationRequest(input * PutBucketNotificationInput ) (req * request . Request , output * PutBucketNotificationOutput )
PutBucketNotificationRequest generates a "aws/request.Request" representing the
client's request for the PutBucketNotification operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketNotification for more information on using the PutBucketNotification
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketNotificationRequest method.
req, resp := client.PutBucketNotificationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketNotification
Deprecated: PutBucketNotification has been deprecated

func (*S3) PutBucketNotificationWithContext  deprecated     added in  v1.8.0


func (c * S3 ) PutBucketNotificationWithContext(ctx aws . Context , input * PutBucketNotificationInput , opts ... request . Option ) (* PutBucketNotificationOutput , error )
PutBucketNotificationWithContext is the same as PutBucketNotification with the addition of
the ability to pass a context and additional request options.
See PutBucketNotification for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.
Deprecated: PutBucketNotificationWithContext has been deprecated

func (*S3) PutBucketOwnershipControls    added in  v1.35.2

func (c * S3 ) PutBucketOwnershipControls(input * PutBucketOwnershipControlsInput ) (* PutBucketOwnershipControlsOutput , error )
PutBucketOwnershipControls API operation for Amazon Simple Storage Service.
Creates or modifies OwnershipControls for an Amazon S3 bucket. To use this
operation, you must have the s3:PutBucketOwnershipControls permission. For
more information about Amazon S3 permissions, see Specifying permissions
in a policy ( https://docs.aws.amazon.com/AmazonS3/latest/user-guide/using-with-s3-actions.html ).
For information about Amazon S3 Object Ownership, see Using object ownership
( https://docs.aws.amazon.com/AmazonS3/latest/user-guide/about-object-ownership.html ).
The following operations are related to PutBucketOwnershipControls:
GetBucketOwnershipControls
DeleteBucketOwnershipControls
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketOwnershipControls for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketOwnershipControls

func (*S3) PutBucketOwnershipControlsRequest    added in  v1.35.2

func (c * S3 ) PutBucketOwnershipControlsRequest(input * PutBucketOwnershipControlsInput ) (req * request . Request , output * PutBucketOwnershipControlsOutput )
PutBucketOwnershipControlsRequest generates a "aws/request.Request" representing the
client's request for the PutBucketOwnershipControls operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketOwnershipControls for more information on using the PutBucketOwnershipControls
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketOwnershipControlsRequest method.
req, resp := client.PutBucketOwnershipControlsRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketOwnershipControls

func (*S3) PutBucketOwnershipControlsWithContext    added in  v1.35.2

func (c * S3 ) PutBucketOwnershipControlsWithContext(ctx aws . Context , input * PutBucketOwnershipControlsInput , opts ... request . Option ) (* PutBucketOwnershipControlsOutput , error )
PutBucketOwnershipControlsWithContext is the same as PutBucketOwnershipControls with the addition of
the ability to pass a context and additional request options.
See PutBucketOwnershipControls for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketPolicy

func (c * S3 ) PutBucketPolicy(input * PutBucketPolicyInput ) (* PutBucketPolicyOutput , error )
PutBucketPolicy API operation for Amazon Simple Storage Service.
Applies an Amazon S3 bucket policy to an Amazon S3 bucket. If you are using
an identity other than the root user of the Amazon Web Services account that
owns the bucket, the calling identity must have the PutBucketPolicy permissions
on the specified bucket and belong to the bucket owner's account in order
to use this operation.
If you don't have PutBucketPolicy permissions, Amazon S3 returns a 403 Access
Denied error. If you have the correct permissions, but you're not using an
identity that belongs to the bucket owner's account, Amazon S3 returns a
405 Method Not Allowed error.
To ensure that bucket owners don't inadvertently lock themselves out of their
own buckets, the root principal in a bucket owner's Amazon Web Services account
can perform the GetBucketPolicy, PutBucketPolicy, and DeleteBucketPolicy
API actions, even if their bucket policy explicitly denies the root principal's
access. Bucket owner root principals can only be blocked from performing
these API actions by VPC endpoint policies and Amazon Web Services Organizations
policies.
For more information, see Bucket policy examples ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html ).
The following operations are related to PutBucketPolicy:
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
DeleteBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketPolicy for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketPolicy    Example (Shared00)

Set bucket policy
The following example sets a permission policy on a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketPolicyInput{
Bucket: aws.String("examplebucket"),
Policy: aws.String("{\"Version\": \"2012-10-17\", \"Statement\": [{ \"Sid\": \"id-1\",\"Effect\": \"Allow\",\"Principal\": {\"AWS\": \"arn:aws:iam::123456789012:root\"}, \"Action\": [ \"s3:PutObject\",\"s3:PutObjectAcl\"], \"Resource\": [\"arn:aws:s3:::acl3/*\" ] } ]}"),
}

result, err := svc.PutBucketPolicy(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketPolicyRequest

func (c * S3 ) PutBucketPolicyRequest(input * PutBucketPolicyInput ) (req * request . Request , output * PutBucketPolicyOutput )
PutBucketPolicyRequest generates a "aws/request.Request" representing the
client's request for the PutBucketPolicy operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketPolicy for more information on using the PutBucketPolicy
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketPolicyRequest method.
req, resp := client.PutBucketPolicyRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketPolicy

func (*S3) PutBucketPolicyWithContext    added in  v1.8.0

func (c * S3 ) PutBucketPolicyWithContext(ctx aws . Context , input * PutBucketPolicyInput , opts ... request . Option ) (* PutBucketPolicyOutput , error )
PutBucketPolicyWithContext is the same as PutBucketPolicy with the addition of
the ability to pass a context and additional request options.
See PutBucketPolicy for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketReplication

func (c * S3 ) PutBucketReplication(input * PutBucketReplicationInput ) (* PutBucketReplicationOutput , error )
Handling Replication of Encrypted Objects    Permissions
PutBucketReplication API operation for Amazon Simple Storage Service.
Creates a replication configuration or replaces an existing one. For more
information, see Replication ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html )
in the Amazon S3 User Guide.
Specify the replication configuration in the request body. In the replication
configuration, you provide the name of the destination bucket or buckets
where you want Amazon S3 to replicate objects, the IAM role that Amazon S3
can assume to replicate objects on your behalf, and other relevant information.
You can invoke this request for a specific Amazon Web Services Region by
using the aws:RequestedRegion ( https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requestedregion )
condition key.
A replication configuration must include at least one rule, and can contain
a maximum of 1,000. Each rule identifies a subset of objects to replicate
by filtering the objects in the source bucket. To choose additional subsets
of objects to replicate, add a rule for each subset.
To specify a subset of the objects in the source bucket to apply a replication
rule to, add the Filter element as a child of the Rule element. You can filter
objects based on an object key prefix, one or more object tags, or both.
When you add the Filter element in the configuration, you must also add the
following elements: DeleteMarkerReplication, Status, and Priority.
If you are using an earlier version of the replication configuration, Amazon
S3 handles replication of delete markers differently. For more information,
see Backward Compatibility ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations ).
For information about enabling versioning on a bucket, see Using Versioning
( https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html ). Handling Replication of Encrypted Objects
By default, Amazon S3 doesn't replicate objects that are stored at rest using
server-side encryption with KMS keys. To replicate Amazon Web Services KMS-encrypted
objects, add the following: SourceSelectionCriteria, SseKmsEncryptedObjects,
Status, EncryptionConfiguration, and ReplicaKmsKeyID. For information about
replication configuration, see Replicating Objects Created with SSE Using
KMS keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-config-for-kms-objects.html ).
For information on PutBucketReplication errors, see List of replication-related
error codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ReplicationErrorCodeList ) Permissions
To create a PutBucketReplication request, you must have s3:PutReplicationConfiguration
permissions for the bucket.
By default, a resource owner, in this case the Amazon Web Services account
that created the bucket, can perform this operation. The resource owner can
also grant others permissions to perform the operation. For more information
about permissions, see Specifying Permissions in a Policy ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
To perform this operation, the user or role performing the action must have
the iam:PassRole ( https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_passrole.html )
permission.
The following operations are related to PutBucketReplication:
GetBucketReplication ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html )
DeleteBucketReplication ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketReplication for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketReplication    Example (Shared00)

Set replication configuration on a bucket
The following example sets replication configuration on a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketReplicationInput{
Bucket: aws.String("examplebucket"),
ReplicationConfiguration: &s3.ReplicationConfiguration{
Role: aws.String("arn:aws:iam::123456789012:role/examplerole"),
Rules: []*s3.ReplicationRule{
{
Destination: &s3.Destination{
Bucket:       aws.String("arn:aws:s3:::destinationbucket"),
StorageClass: aws.String("STANDARD"),
},
Prefix: aws.String(""),
Status: aws.String("Enabled"),
},
},
},
}

result, err := svc.PutBucketReplication(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketReplicationRequest

func (c * S3 ) PutBucketReplicationRequest(input * PutBucketReplicationInput ) (req * request . Request , output * PutBucketReplicationOutput )
PutBucketReplicationRequest generates a "aws/request.Request" representing the
client's request for the PutBucketReplication operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketReplication for more information on using the PutBucketReplication
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketReplicationRequest method.
req, resp := client.PutBucketReplicationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketReplication

func (*S3) PutBucketReplicationWithContext    added in  v1.8.0

func (c * S3 ) PutBucketReplicationWithContext(ctx aws . Context , input * PutBucketReplicationInput , opts ... request . Option ) (* PutBucketReplicationOutput , error )
PutBucketReplicationWithContext is the same as PutBucketReplication with the addition of
the ability to pass a context and additional request options.
See PutBucketReplication for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketRequestPayment

func (c * S3 ) PutBucketRequestPayment(input * PutBucketRequestPaymentInput ) (* PutBucketRequestPaymentOutput , error )
PutBucketRequestPayment API operation for Amazon Simple Storage Service.
Sets the request payment configuration for a bucket. By default, the bucket
owner pays for downloads from the bucket. This configuration parameter enables
the bucket owner (only) to specify that the person requesting the download
will be charged for the download. For more information, see Requester Pays
Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html ).
The following operations are related to PutBucketRequestPayment:
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
GetBucketRequestPayment ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketRequestPayment.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketRequestPayment for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketRequestPayment    Example (Shared00)

Set request payment configuration on a bucket.
The following example sets request payment configuration on a bucket so that person
requesting the download is charged.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketRequestPaymentInput{
Bucket: aws.String("examplebucket"),
RequestPaymentConfiguration: &s3.RequestPaymentConfiguration{
Payer: aws.String("Requester"),
},
}

result, err := svc.PutBucketRequestPayment(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketRequestPaymentRequest

func (c * S3 ) PutBucketRequestPaymentRequest(input * PutBucketRequestPaymentInput ) (req * request . Request , output * PutBucketRequestPaymentOutput )
PutBucketRequestPaymentRequest generates a "aws/request.Request" representing the
client's request for the PutBucketRequestPayment operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketRequestPayment for more information on using the PutBucketRequestPayment
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketRequestPaymentRequest method.
req, resp := client.PutBucketRequestPaymentRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketRequestPayment

func (*S3) PutBucketRequestPaymentWithContext    added in  v1.8.0

func (c * S3 ) PutBucketRequestPaymentWithContext(ctx aws . Context , input * PutBucketRequestPaymentInput , opts ... request . Option ) (* PutBucketRequestPaymentOutput , error )
PutBucketRequestPaymentWithContext is the same as PutBucketRequestPayment with the addition of
the ability to pass a context and additional request options.
See PutBucketRequestPayment for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketTagging

func (c * S3 ) PutBucketTagging(input * PutBucketTaggingInput ) (* PutBucketTaggingOutput , error )
PutBucketTagging API operation for Amazon Simple Storage Service.
Sets the tags for a bucket.
Use tags to organize your Amazon Web Services bill to reflect your own cost
structure. To do this, sign up to get your Amazon Web Services account bill
with tag key values included. Then, to see the cost of combined resources,
organize your billing information according to resources with the same tag
key values. For example, you can tag several resources with a specific application
name, and then organize your billing information to see the total cost of
that application across several services. For more information, see Cost
Allocation and Tagging ( https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html )
and Using Cost Allocation in Amazon S3 Bucket Tags ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/CostAllocTagging.html ).
When this operation sets the tags for a bucket, it will overwrite any current
tags the bucket already has. You cannot use this operation to add tags to
an existing list of tags.
To use this operation, you must have permissions to perform the s3:PutBucketTagging
action. The bucket owner has this permission by default and can grant this
permission to others. For more information about permissions, see Permissions
Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html ).
PutBucketTagging has the following special errors. For more Amazon S3 errors
see, Error Responses ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html ).
InvalidTag - The tag provided was not a valid tag. This error can occur
if the tag did not pass input validation. For more information, see Using
Cost Allocation in Amazon S3 Bucket Tags ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/CostAllocTagging.html ).
MalformedXML - The XML provided does not match the schema.
OperationAborted - A conflicting conditional action is currently in
progress against this resource. Please try again.
InternalError - The service was unable to apply the provided tag to
the bucket.
The following operations are related to PutBucketTagging:
GetBucketTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html )
DeleteBucketTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketTagging for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketTagging    Example (Shared00)

Set tags on a bucket
The following example sets tags on a bucket. Any existing tags are replaced.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketTaggingInput{
Bucket: aws.String("examplebucket"),
Tagging: &s3.Tagging{
TagSet: []*s3.Tag{
{
Key:   aws.String("Key1"),
Value: aws.String("Value1"),
},
{
Key:   aws.String("Key2"),
Value: aws.String("Value2"),
},
},
},
}

result, err := svc.PutBucketTagging(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketTaggingRequest

func (c * S3 ) PutBucketTaggingRequest(input * PutBucketTaggingInput ) (req * request . Request , output * PutBucketTaggingOutput )
PutBucketTaggingRequest generates a "aws/request.Request" representing the
client's request for the PutBucketTagging operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketTagging for more information on using the PutBucketTagging
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketTaggingRequest method.
req, resp := client.PutBucketTaggingRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketTagging

func (*S3) PutBucketTaggingWithContext    added in  v1.8.0

func (c * S3 ) PutBucketTaggingWithContext(ctx aws . Context , input * PutBucketTaggingInput , opts ... request . Option ) (* PutBucketTaggingOutput , error )
PutBucketTaggingWithContext is the same as PutBucketTagging with the addition of
the ability to pass a context and additional request options.
See PutBucketTagging for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketVersioning

func (c * S3 ) PutBucketVersioning(input * PutBucketVersioningInput ) (* PutBucketVersioningOutput , error )
PutBucketVersioning API operation for Amazon Simple Storage Service.
Sets the versioning state of an existing bucket.
You can set the versioning state with one of the following values:
Enabled—Enables versioning for the objects in the bucket. All objects added
to the bucket receive a unique version ID.
Suspended—Disables versioning for the objects in the bucket. All objects
added to the bucket receive the version ID null.
If the versioning state has never been set on a bucket, it has no versioning
state; a GetBucketVersioning ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html )
request does not return a versioning state value.
In order to enable MFA Delete, you must be the bucket owner. If you are the
bucket owner and want to enable MFA Delete in the bucket versioning configuration,
you must include the x-amz-mfa request header and the Status and the MfaDelete
request elements in a request to set the versioning state of the bucket.
If you have an object expiration lifecycle configuration in your non-versioned
bucket and you want to maintain the same permanent delete behavior when you
enable versioning, you must add a noncurrent expiration policy. The noncurrent
expiration lifecycle configuration will manage the deletes of the noncurrent
object versions in the version-enabled bucket. (A version-enabled bucket
maintains one current and zero or more noncurrent object versions.) For more
information, see Lifecycle and Versioning ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html#lifecycle-and-other-bucket-config ).
The following operations are related to PutBucketVersioning:
CreateBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html )
DeleteBucket ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html )
GetBucketVersioning ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketVersioning for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketVersioning    Example (Shared00)

Set versioning configuration on a bucket
The following example sets versioning configuration on bucket. The configuration
enables versioning on the bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketVersioningInput{
Bucket: aws.String("examplebucket"),
VersioningConfiguration: &s3.VersioningConfiguration{
MFADelete: aws.String("Disabled"),
Status:    aws.String("Enabled"),
},
}

result, err := svc.PutBucketVersioning(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketVersioningRequest

func (c * S3 ) PutBucketVersioningRequest(input * PutBucketVersioningInput ) (req * request . Request , output * PutBucketVersioningOutput )
PutBucketVersioningRequest generates a "aws/request.Request" representing the
client's request for the PutBucketVersioning operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketVersioning for more information on using the PutBucketVersioning
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketVersioningRequest method.
req, resp := client.PutBucketVersioningRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketVersioning

func (*S3) PutBucketVersioningWithContext    added in  v1.8.0

func (c * S3 ) PutBucketVersioningWithContext(ctx aws . Context , input * PutBucketVersioningInput , opts ... request . Option ) (* PutBucketVersioningOutput , error )
PutBucketVersioningWithContext is the same as PutBucketVersioning with the addition of
the ability to pass a context and additional request options.
See PutBucketVersioning for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutBucketWebsite

func (c * S3 ) PutBucketWebsite(input * PutBucketWebsiteInput ) (* PutBucketWebsiteOutput , error )
PutBucketWebsite API operation for Amazon Simple Storage Service.
Sets the configuration of the website that is specified in the website subresource.
To configure a bucket as a website, you can add this subresource on the bucket
with website configuration information such as the file name of the index
document and any redirect rules. For more information, see Hosting Websites
on Amazon S3 ( https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html ).
This PUT action requires the S3:PutBucketWebsite permission. By default,
only the bucket owner can configure the website attached to a bucket; however,
bucket owners can allow other users to set the website configuration by writing
a bucket policy that grants them the S3:PutBucketWebsite permission.
To redirect all website requests sent to the bucket's website endpoint, you
add a website configuration with the following elements. Because all requests
are sent to another website, you don't need to provide index document name
for the bucket.
WebsiteConfiguration
RedirectAllRequestsTo
HostName
Protocol
If you want granular control over redirects, you can use the following elements
to add routing rules that describe conditions for redirecting requests and
information about the redirect destination. In this case, the website configuration
must provide an index document for the bucket, because some requests might
not be redirected.
WebsiteConfiguration
IndexDocument
Suffix
ErrorDocument
Key
RoutingRules
RoutingRule
Condition
HttpErrorCodeReturnedEquals
KeyPrefixEquals
Redirect
Protocol
HostName
ReplaceKeyPrefixWith
ReplaceKeyWith
HttpRedirectCode
Amazon S3 has a limitation of 50 routing rules per website configuration.
If you require more than 50 routing rules, you can use object redirect. For
more information, see Configuring an Object Redirect ( https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html )
in the Amazon S3 User Guide.
The maximum request length is limited to 128 KB.
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutBucketWebsite for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketWebsite    Example (Shared00)

Set website configuration on a bucket
The following example adds website configuration to a bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutBucketWebsiteInput{
Bucket: aws.String("examplebucket"),
WebsiteConfiguration: &s3.WebsiteConfiguration{
ErrorDocument: &s3.ErrorDocument{
Key: aws.String("error.html"),
},
IndexDocument: &s3.IndexDocument{
Suffix: aws.String("index.html"),
},
},
}

result, err := svc.PutBucketWebsite(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutBucketWebsiteRequest

func (c * S3 ) PutBucketWebsiteRequest(input * PutBucketWebsiteInput ) (req * request . Request , output * PutBucketWebsiteOutput )
PutBucketWebsiteRequest generates a "aws/request.Request" representing the
client's request for the PutBucketWebsite operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutBucketWebsite for more information on using the PutBucketWebsite
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutBucketWebsiteRequest method.
req, resp := client.PutBucketWebsiteRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketWebsite

func (*S3) PutBucketWebsiteWithContext    added in  v1.8.0

func (c * S3 ) PutBucketWebsiteWithContext(ctx aws . Context , input * PutBucketWebsiteInput , opts ... request . Option ) (* PutBucketWebsiteOutput , error )
PutBucketWebsiteWithContext is the same as PutBucketWebsite with the addition of
the ability to pass a context and additional request options.
See PutBucketWebsite for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutObject

func (c * S3 ) PutObject(input * PutObjectInput ) (* PutObjectOutput , error )
PutObject API operation for Amazon Simple Storage Service.
Adds an object to a bucket. You must have WRITE permissions on a bucket to
add an object to it.
Amazon S3 never adds partial objects; if you receive a success response,
Amazon S3 added the entire object to the bucket. You cannot use PutObject
to only update a single piece of metadata for an existing object. You must
put the entire object with updated metadata if you want to update some values.
Amazon S3 is a distributed system. If it receives multiple write requests
for the same object simultaneously, it overwrites all but the last object
written. To prevent objects from being deleted or overwritten, you can use
Amazon S3 Object Lock ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock.html ).
To ensure that data is not corrupted traversing the network, use the Content-MD5
header. When you use this header, Amazon S3 checks the object against the
provided MD5 value and, if they do not match, returns an error. Additionally,
you can calculate the MD5 while putting an object to Amazon S3 and compare
the returned ETag to the calculated MD5 value.
To successfully complete the PutObject request, you must have the s3:PutObject
in your IAM permissions.
To successfully change the objects acl of your PutObject request, you
must have the s3:PutObjectAcl in your IAM permissions.
To successfully set the tag-set with your PutObject request, you must
have the s3:PutObjectTagging in your IAM permissions.
The Content-MD5 header is required for any request to upload an object
with a retention period configured using Amazon S3 Object Lock. For more
information about Amazon S3 Object Lock, see Amazon S3 Object Lock Overview
( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html )
in the Amazon S3 User Guide.
You have four mutually exclusive options to protect data using server-side
encryption in Amazon S3, depending on how you choose to manage the encryption
keys. Specifically, the encryption key options are Amazon S3 managed keys
(SSE-S3), Amazon Web Services KMS keys (SSE-KMS or DSSE-KMS), and customer-provided
keys (SSE-C). Amazon S3 encrypts data with server-side encryption by using
Amazon S3 managed keys (SSE-S3) by default. You can optionally tell Amazon
S3 to encrypt data at rest by using server-side encryption with other key
options. For more information, see Using Server-Side Encryption ( https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html ).
When adding a new object, you can use headers to grant ACL-based permissions
to individual Amazon Web Services accounts or to predefined groups defined
by Amazon S3. These permissions are then added to the ACL on the object.
By default, all objects are private. Only the owner has full access control.
For more information, see Access Control List (ACL) Overview ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html )
and Managing ACLs Using the REST API ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-using-rest-api.html ).
If the bucket that you're uploading objects to uses the bucket owner enforced
setting for S3 Object Ownership, ACLs are disabled and no longer affect permissions.
Buckets that use this setting only accept PUT requests that don't specify
an ACL or PUT requests that specify bucket owner full control ACLs, such
as the bucket-owner-full-control canned ACL or an equivalent form of this
ACL expressed in the XML format. PUT requests that contain other ACLs (for
example, custom grants to certain Amazon Web Services accounts) fail and
return a 400 error with the error code AccessControlListNotSupported. For
more information, see Controlling ownership of objects and disabling ACLs
( https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html )
in the Amazon S3 User Guide.
If your bucket uses the bucket owner enforced setting for Object Ownership,
all objects written to the bucket by any account will be owned by the bucket
owner.
By default, Amazon S3 uses the STANDARD Storage Class to store newly created
objects. The STANDARD storage class provides high durability and high availability.
Depending on performance needs, you can specify a different Storage Class.
Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information,
see Storage Classes ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html )
in the Amazon S3 User Guide.
If you enable versioning for a bucket, Amazon S3 automatically generates
a unique version ID for the object being stored. Amazon S3 returns this ID
in the response. When you enable versioning for a bucket, if Amazon S3 receives
multiple write requests for the same object simultaneously, it stores all
of the objects. For more information about versioning, see Adding Objects
to Versioning-Enabled Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/AddingObjectstoVersioningEnabledBuckets.html ).
For information about returning the versioning state of a bucket, see GetBucketVersioning
( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html ).
For more information about related Amazon S3 APIs, see the following:
CopyObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html )
DeleteObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutObject for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObject    Example (Shared00)

To upload an object and specify server-side encryption and object tags
The following example uploads an object. The request specifies the optional server-side
encryption option. The request also specifies optional object tags. If the bucket
is versioning enabled, S3 returns version ID in response.  package main

import (
"fmt"
"strings"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutObjectInput{
Body:                 aws.ReadSeekCloser(strings.NewReader("filetoupload")),
Bucket:               aws.String("examplebucket"),
Key:                  aws.String("exampleobject"),
ServerSideEncryption: aws.String("AES256"),
Tagging:              aws.String("key1=value1&key2=value2"),
}

result, err := svc.PutObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared01)

To create an object.
The following example creates an object. If the bucket is versioning enabled, S3
returns version ID in response.  package main

import (
"fmt"
"strings"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutObjectInput{
Body:   aws.ReadSeekCloser(strings.NewReader("filetoupload")),
Bucket: aws.String("examplebucket"),
Key:    aws.String("objectkey"),
}

result, err := svc.PutObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared02)

To upload an object (specify optional headers)
The following example uploads an object. The request specifies optional request headers
to directs S3 to use specific storage class and use server-side encryption.  package main

import (
"fmt"
"strings"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutObjectInput{
Body:                 aws.ReadSeekCloser(strings.NewReader("HappyFace.jpg")),
Bucket:               aws.String("examplebucket"),
Key:                  aws.String("HappyFace.jpg"),
ServerSideEncryption: aws.String("AES256"),
StorageClass:         aws.String("STANDARD_IA"),
}

result, err := svc.PutObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared03)

To upload an object and specify optional tags
The following example uploads an object. The request specifies optional object tags.
The bucket is versioned, therefore S3 returns version ID of the newly created object.  package main

import (
"fmt"
"strings"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutObjectInput{
Body:    aws.ReadSeekCloser(strings.NewReader("c:\\HappyFace.jpg")),
Bucket:  aws.String("examplebucket"),
Key:     aws.String("HappyFace.jpg"),
Tagging: aws.String("key1=value1&key2=value2"),
}

result, err := svc.PutObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared04)

To upload object and specify user-defined metadata
The following example creates an object. The request also specifies optional metadata.
If the bucket is versioning enabled, S3 returns version ID in response.  package main

import (
"fmt"
"strings"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutObjectInput{
Body:   aws.ReadSeekCloser(strings.NewReader("filetoupload")),
Bucket: aws.String("examplebucket"),
Key:    aws.String("exampleobject"),
Metadata: map[string]*string{
"metadata1": aws.String("value1"),
"metadata2": aws.String("value2"),
},
}

result, err := svc.PutObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared05)

To upload an object and specify canned ACL.
The following example uploads and object. The request specifies optional canned ACL
(access control list) to all READ access to authenticated users. If the bucket is
versioning enabled, S3 returns version ID in response.  package main

import (
"fmt"
"strings"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutObjectInput{
ACL:    aws.String("authenticated-read"),
Body:   aws.ReadSeekCloser(strings.NewReader("filetoupload")),
Bucket: aws.String("examplebucket"),
Key:    aws.String("exampleobject"),
}

result, err := svc.PutObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared06)

To upload an object
The following example uploads an object to a versioning-enabled bucket. The source
file is specified using Windows file syntax. S3 returns VersionId of the newly created
object.  package main

import (
"fmt"
"strings"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutObjectInput{
Body:   aws.ReadSeekCloser(strings.NewReader("HappyFace.jpg")),
Bucket: aws.String("examplebucket"),
Key:    aws.String("HappyFace.jpg"),
}

result, err := svc.PutObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutObjectAcl    added in  v0.9.5

func (c * S3 ) PutObjectAcl(input * PutObjectAclInput ) (* PutObjectAclOutput , error )
Permissions    Grantee Values    Versioning
PutObjectAcl API operation for Amazon Simple Storage Service.
Uses the acl subresource to set the access control list (ACL) permissions
for a new or existing object in an S3 bucket. You must have WRITE_ACP permission
to set the ACL of an object. For more information, see What permissions can
I grant? ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#permissions )
in the Amazon S3 User Guide.
This action is not supported by Amazon S3 on Outposts.
Depending on your application needs, you can choose to set the ACL on an
object using either the request body or the headers. For example, if you
have an existing application that updates a bucket ACL using the request
body, you can continue to use that approach. For more information, see Access
Control List (ACL) Overview ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html )
in the Amazon S3 User Guide.
If your bucket uses the bucket owner enforced setting for S3 Object Ownership,
ACLs are disabled and no longer affect permissions. You must use policies
to grant access to your bucket and the objects in it. Requests to set ACLs
or update ACLs fail and return the AccessControlListNotSupported error code.
Requests to read ACLs are still supported. For more information, see Controlling
object ownership ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html )
in the Amazon S3 User Guide. Permissions
You can set access permissions using one of the following methods:
Specify a canned ACL with the x-amz-acl request header. Amazon S3 supports
a set of predefined ACLs, known as canned ACLs. Each canned ACL has a
predefined set of grantees and permissions. Specify the canned ACL name
as the value of x-amz-acl. If you use this header, you cannot use other
access control-specific headers in your request. For more information,
see Canned ACL ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL ).
Specify access permissions explicitly with the x-amz-grant-read, x-amz-grant-read-acp,
x-amz-grant-write-acp, and x-amz-grant-full-control headers. When using
these headers, you specify explicit access permissions and grantees (Amazon
Web Services accounts or Amazon S3 groups) who will receive the permission.
If you use these ACL-specific headers, you cannot use x-amz-acl header
to set a canned ACL. These parameters map to the set of permissions that
Amazon S3 supports in an ACL. For more information, see Access Control
List (ACL) Overview ( https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html ).
You specify each grantee as a type=value pair, where the type is one of
the following: id – if the value specified is the canonical user ID
of an Amazon Web Services account uri – if you are granting permissions
to a predefined group emailAddress – if the value specified is the email
address of an Amazon Web Services account Using email addresses to specify
a grantee is only supported in the following Amazon Web Services Regions:
US East (N. Virginia) US West (N. California) US West (Oregon) Asia Pacific
(Singapore) Asia Pacific (Sydney) Asia Pacific (Tokyo) Europe (Ireland)
South America (São Paulo) For a list of all the Amazon S3 supported Regions
and endpoints, see Regions and Endpoints ( https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region )
in the Amazon Web Services General Reference. For example, the following
x-amz-grant-read header grants list objects permission to the two Amazon
Web Services accounts identified by their email addresses. x-amz-grant-read:
emailAddress="xyz@amazon.com", emailAddress="abc@amazon.com"
You can use either a canned ACL or specify access permissions explicitly.
You cannot do both. Grantee Values
You can specify the person (grantee) to whom you're assigning access rights
(using request elements) in the following ways:
By the person's ID: <Grantee xmlns:xsi=" http://www.w3.org/2001/XMLSchema-instance "
xsi:type="CanonicalUser"><ID><>ID<></ID><DisplayName><>GranteesEmail<></DisplayName>
</Grantee> DisplayName is optional and ignored in the request.
By URI: <Grantee xmlns:xsi=" http://www.w3.org/2001/XMLSchema-instance "
xsi:type="Group"><URI><> http://acs.amazonaws.com/groups/global/AuthenticatedUsers <></URI></Grantee>
By Email address: <Grantee xmlns:xsi=" http://www.w3.org/2001/XMLSchema-instance "
xsi:type="AmazonCustomerByEmail"><EmailAddress><>Grantees@email.com<></EmailAddress>lt;/Grantee>
The grantee is resolved to the CanonicalUser and, in a response to a GET
Object acl request, appears as the CanonicalUser. Using email addresses
to specify a grantee is only supported in the following Amazon Web Services
Regions: US East (N. Virginia) US West (N. California) US West (Oregon)
Asia Pacific (Singapore) Asia Pacific (Sydney) Asia Pacific (Tokyo) Europe
(Ireland) South America (São Paulo) For a list of all the Amazon S3 supported
Regions and endpoints, see Regions and Endpoints ( https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region )
in the Amazon Web Services General Reference.  Versioning
The ACL of an object is set at the object version level. By default, PUT
sets the ACL of the current version of an object. To set the ACL of a different
version, use the versionId subresource.
The following operations are related to PutObjectAcl:
CopyObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html )
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutObjectAcl for usage and error information.
Returned Error Codes:  ErrCodeNoSuchKey "NoSuchKey"
The specified key does not exist.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectAcl    Example (Shared00)

To grant permissions using object ACL
The following example adds grants to an object ACL. The first permission grants user1
and user2 FULL_CONTROL and the AllUsers group READ permission.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutObjectAclInput{
AccessControlPolicy: &s3.AccessControlPolicy{},
Bucket:              aws.String("examplebucket"),
GrantFullControl:    aws.String("emailaddress=user1@example.com,emailaddress=user2@example.com"),
GrantRead:           aws.String("uri=http://acs.amazonaws.com/groups/global/AllUsers"),
Key:                 aws.String("HappyFace.jpg"),
}

result, err := svc.PutObjectAcl(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeNoSuchKey:
fmt.Println(s3.ErrCodeNoSuchKey, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutObjectAclRequest    added in  v0.9.5

func (c * S3 ) PutObjectAclRequest(input * PutObjectAclInput ) (req * request . Request , output * PutObjectAclOutput )
PutObjectAclRequest generates a "aws/request.Request" representing the
client's request for the PutObjectAcl operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutObjectAcl for more information on using the PutObjectAcl
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutObjectAclRequest method.
req, resp := client.PutObjectAclRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectAcl

func (*S3) PutObjectAclWithContext    added in  v1.8.0

func (c * S3 ) PutObjectAclWithContext(ctx aws . Context , input * PutObjectAclInput , opts ... request . Option ) (* PutObjectAclOutput , error )
PutObjectAclWithContext is the same as PutObjectAcl with the addition of
the ability to pass a context and additional request options.
See PutObjectAcl for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutObjectLegalHold    added in  v1.15.83

func (c * S3 ) PutObjectLegalHold(input * PutObjectLegalHoldInput ) (* PutObjectLegalHoldOutput , error )
PutObjectLegalHold API operation for Amazon Simple Storage Service.
Applies a legal hold configuration to the specified object. For more information,
see Locking Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html ).
This action is not supported by Amazon S3 on Outposts.
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutObjectLegalHold for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectLegalHold

func (*S3) PutObjectLegalHoldRequest    added in  v1.15.83

func (c * S3 ) PutObjectLegalHoldRequest(input * PutObjectLegalHoldInput ) (req * request . Request , output * PutObjectLegalHoldOutput )
PutObjectLegalHoldRequest generates a "aws/request.Request" representing the
client's request for the PutObjectLegalHold operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutObjectLegalHold for more information on using the PutObjectLegalHold
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutObjectLegalHoldRequest method.
req, resp := client.PutObjectLegalHoldRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectLegalHold

func (*S3) PutObjectLegalHoldWithContext    added in  v1.15.83

func (c * S3 ) PutObjectLegalHoldWithContext(ctx aws . Context , input * PutObjectLegalHoldInput , opts ... request . Option ) (* PutObjectLegalHoldOutput , error )
PutObjectLegalHoldWithContext is the same as PutObjectLegalHold with the addition of
the ability to pass a context and additional request options.
See PutObjectLegalHold for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutObjectLockConfiguration    added in  v1.15.83

func (c * S3 ) PutObjectLockConfiguration(input * PutObjectLockConfigurationInput ) (* PutObjectLockConfigurationOutput , error )
PutObjectLockConfiguration API operation for Amazon Simple Storage Service.
Places an Object Lock configuration on the specified bucket. The rule specified
in the Object Lock configuration will be applied by default to every new
object placed in the specified bucket. For more information, see Locking
Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html ).
The DefaultRetention settings require both a mode and a period.
The DefaultRetention period can be either Days or Years but you must
select one. You cannot specify Days and Years at the same time.
You can only enable Object Lock for new buckets. If you want to turn
on Object Lock for an existing bucket, contact Amazon Web Services Support.
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutObjectLockConfiguration for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectLockConfiguration

func (*S3) PutObjectLockConfigurationRequest    added in  v1.15.83

func (c * S3 ) PutObjectLockConfigurationRequest(input * PutObjectLockConfigurationInput ) (req * request . Request , output * PutObjectLockConfigurationOutput )
PutObjectLockConfigurationRequest generates a "aws/request.Request" representing the
client's request for the PutObjectLockConfiguration operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutObjectLockConfiguration for more information on using the PutObjectLockConfiguration
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutObjectLockConfigurationRequest method.
req, resp := client.PutObjectLockConfigurationRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectLockConfiguration

func (*S3) PutObjectLockConfigurationWithContext    added in  v1.15.83

func (c * S3 ) PutObjectLockConfigurationWithContext(ctx aws . Context , input * PutObjectLockConfigurationInput , opts ... request . Option ) (* PutObjectLockConfigurationOutput , error )
PutObjectLockConfigurationWithContext is the same as PutObjectLockConfiguration with the addition of
the ability to pass a context and additional request options.
See PutObjectLockConfiguration for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutObjectRequest

func (c * S3 ) PutObjectRequest(input * PutObjectInput ) (req * request . Request , output * PutObjectOutput )
PutObjectRequest generates a "aws/request.Request" representing the
client's request for the PutObject operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutObject for more information on using the PutObject
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutObjectRequest method.
req, resp := client.PutObjectRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObject

func (*S3) PutObjectRetention    added in  v1.15.83

func (c * S3 ) PutObjectRetention(input * PutObjectRetentionInput ) (* PutObjectRetentionOutput , error )
PutObjectRetention API operation for Amazon Simple Storage Service.
Places an Object Retention configuration on an object. For more information,
see Locking Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html ).
Users or accounts require the s3:PutObjectRetention permission in order to
place an Object Retention configuration on objects. Bypassing a Governance
Retention configuration requires the s3:BypassGovernanceRetention permission.
This action is not supported by Amazon S3 on Outposts.
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutObjectRetention for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectRetention

func (*S3) PutObjectRetentionRequest    added in  v1.15.83

func (c * S3 ) PutObjectRetentionRequest(input * PutObjectRetentionInput ) (req * request . Request , output * PutObjectRetentionOutput )
PutObjectRetentionRequest generates a "aws/request.Request" representing the
client's request for the PutObjectRetention operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutObjectRetention for more information on using the PutObjectRetention
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutObjectRetentionRequest method.
req, resp := client.PutObjectRetentionRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectRetention

func (*S3) PutObjectRetentionWithContext    added in  v1.15.83

func (c * S3 ) PutObjectRetentionWithContext(ctx aws . Context , input * PutObjectRetentionInput , opts ... request . Option ) (* PutObjectRetentionOutput , error )
PutObjectRetentionWithContext is the same as PutObjectRetention with the addition of
the ability to pass a context and additional request options.
See PutObjectRetention for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutObjectTagging    added in  v1.5.11

func (c * S3 ) PutObjectTagging(input * PutObjectTaggingInput ) (* PutObjectTaggingOutput , error )
PutObjectTagging API operation for Amazon Simple Storage Service.
Sets the supplied tag-set to an object that already exists in a bucket. A
tag is a key-value pair. For more information, see Object Tagging ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html ).
You can associate tags with an object by sending a PUT request against the
tagging subresource that is associated with the object. You can retrieve
tags by sending a GET request. For more information, see GetObjectTagging
( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html ).
For tagging-related restrictions related to characters and encodings, see
Tag Restrictions ( https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html ).
Note that Amazon S3 limits the maximum number of tags to 10 tags per object.
To use this operation, you must have permission to perform the s3:PutObjectTagging
action. By default, the bucket owner has this permission and can grant this
permission to others.
To put tags of any other version, use the versionId query parameter. You
also need permission for the s3:PutObjectVersionTagging action.
PutObjectTagging has the following special errors. For more Amazon S3 errors
see, Error Responses ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html ).
InvalidTag - The tag provided was not a valid tag. This error can occur
if the tag did not pass input validation. For more information, see Object
Tagging ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html ).
MalformedXML - The XML provided does not match the schema.
OperationAborted - A conflicting conditional action is currently in
progress against this resource. Please try again.
InternalError - The service was unable to apply the provided tag to
the object.
The following operations are related to PutObjectTagging:
GetObjectTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html )
DeleteObjectTagging ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutObjectTagging for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectTagging    Example (Shared00)

To add tags to an existing object
The following example adds tags to an existing object.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.PutObjectTaggingInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("HappyFace.jpg"),
Tagging: &s3.Tagging{
TagSet: []*s3.Tag{
{
Key:   aws.String("Key3"),
Value: aws.String("Value3"),
},
{
Key:   aws.String("Key4"),
Value: aws.String("Value4"),
},
},
},
}

result, err := svc.PutObjectTagging(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) PutObjectTaggingRequest    added in  v1.5.11

func (c * S3 ) PutObjectTaggingRequest(input * PutObjectTaggingInput ) (req * request . Request , output * PutObjectTaggingOutput )
PutObjectTaggingRequest generates a "aws/request.Request" representing the
client's request for the PutObjectTagging operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutObjectTagging for more information on using the PutObjectTagging
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutObjectTaggingRequest method.
req, resp := client.PutObjectTaggingRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectTagging

func (*S3) PutObjectTaggingWithContext    added in  v1.8.0

func (c * S3 ) PutObjectTaggingWithContext(ctx aws . Context , input * PutObjectTaggingInput , opts ... request . Option ) (* PutObjectTaggingOutput , error )
PutObjectTaggingWithContext is the same as PutObjectTagging with the addition of
the ability to pass a context and additional request options.
See PutObjectTagging for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutObjectWithContext    added in  v1.8.0

func (c * S3 ) PutObjectWithContext(ctx aws . Context , input * PutObjectInput , opts ... request . Option ) (* PutObjectOutput , error )
PutObjectWithContext is the same as PutObject with the addition of
the ability to pass a context and additional request options.
See PutObject for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) PutPublicAccessBlock    added in  v1.15.77

func (c * S3 ) PutPublicAccessBlock(input * PutPublicAccessBlockInput ) (* PutPublicAccessBlockOutput , error )
PutPublicAccessBlock API operation for Amazon Simple Storage Service.
Creates or modifies the PublicAccessBlock configuration for an Amazon S3
bucket. To use this operation, you must have the s3:PutBucketPublicAccessBlock
permission. For more information about Amazon S3 permissions, see Specifying
Permissions in a Policy ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html ).
When Amazon S3 evaluates the PublicAccessBlock configuration for a bucket
or an object, it checks the PublicAccessBlock configuration for both the
bucket (or the bucket that contains the object) and the bucket owner's account.
If the PublicAccessBlock configurations are different between the bucket
and the account, S3 uses the most restrictive combination of the bucket-level
and account-level settings.
For more information about when Amazon S3 considers a bucket or an object
public, see The Meaning of "Public" ( https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status ).
The following operations are related to PutPublicAccessBlock:
GetPublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html )
DeletePublicAccessBlock ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html )
GetBucketPolicyStatus ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicyStatus.html )
Using Amazon S3 Block Public Access ( https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation PutPublicAccessBlock for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutPublicAccessBlock

func (*S3) PutPublicAccessBlockRequest    added in  v1.15.77

func (c * S3 ) PutPublicAccessBlockRequest(input * PutPublicAccessBlockInput ) (req * request . Request , output * PutPublicAccessBlockOutput )
PutPublicAccessBlockRequest generates a "aws/request.Request" representing the
client's request for the PutPublicAccessBlock operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See PutPublicAccessBlock for more information on using the PutPublicAccessBlock
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the PutPublicAccessBlockRequest method.
req, resp := client.PutPublicAccessBlockRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutPublicAccessBlock

func (*S3) PutPublicAccessBlockWithContext    added in  v1.15.77

func (c * S3 ) PutPublicAccessBlockWithContext(ctx aws . Context , input * PutPublicAccessBlockInput , opts ... request . Option ) (* PutPublicAccessBlockOutput , error )
PutPublicAccessBlockWithContext is the same as PutPublicAccessBlock with the addition of
the ability to pass a context and additional request options.
See PutPublicAccessBlock for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) RestoreObject

func (c * S3 ) RestoreObject(input * RestoreObjectInput ) (* RestoreObjectOutput , error )
Restores an archived copy of an object back into Amazon S3    Permissions    Restoring objects    Responses
RestoreObject API operation for Amazon Simple Storage Service. Restores an archived copy of an object back into Amazon S3
This action is not supported by Amazon S3 on Outposts.
This action performs the following types of requests:
select - Perform a select query on an archived object
restore an archive - Restore an archived object
For more information about the S3 structure in the request body, see the
following:
PutObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html )
Managing Access with ACLs ( https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html )
in the Amazon S3 User Guide
Protecting Data Using Server-Side Encryption ( https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html )
in the Amazon S3 User Guide
Define the SQL expression for the SELECT type of restoration for your query
in the request body's SelectParameters structure. You can use expressions
like the following examples.
The following expression returns all records from the specified object.
SELECT * FROM Object
Assuming that you are not using any headers for data stored in the object,
you can specify columns with positional headers. SELECT s._1, s._2 FROM
Object s WHERE s._3 > 100
If you have headers and you set the fileHeaderInfo in the CSV structure
in the request body to USE, you can specify headers in the query. (If
you set the fileHeaderInfo field to IGNORE, the first row is skipped for
the query.) You cannot mix ordinal positions with header column names.
SELECT s.Id, s.FirstName, s.SSN FROM S3Object s
When making a select request, you can also do the following:
To expedite your queries, specify the Expedited tier. For more information
about tiers, see "Restoring Archives," later in this topic.
Specify details about the data serialization format of both the input
object that is being queried and the serialization of the CSV-encoded
query results.
The following are additional important facts about the select feature:
The output results are new Amazon S3 objects. Unlike archive retrievals,
they are stored until explicitly deleted-manually or through a lifecycle
configuration.
You can issue more than one select request on the same Amazon S3 object.
Amazon S3 doesn't duplicate requests, so avoid issuing duplicate requests.
Amazon S3 accepts a select request even if the object has already been
restored. A select request doesn’t return error response 409.  Permissions
To use this operation, you must have permissions to perform the s3:RestoreObject
action. The bucket owner has this permission by default and can grant this
permission to others. For more information about permissions, see Permissions
Related to Bucket Subresource Operations ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources )
and Managing Access Permissions to Your Amazon S3 Resources ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html )
in the Amazon S3 User Guide. Restoring objects
Objects that you archive to the S3 Glacier Flexible Retrieval Flexible Retrieval
or S3 Glacier Deep Archive storage class, and S3 Intelligent-Tiering Archive
or S3 Intelligent-Tiering Deep Archive tiers, are not accessible in real
time. For objects in the S3 Glacier Flexible Retrieval Flexible Retrieval
or S3 Glacier Deep Archive storage classes, you must first initiate a restore
request, and then wait until a temporary copy of the object is available.
If you want a permanent copy of the object, create a copy of it in the Amazon
S3 Standard storage class in your S3 bucket. To access an archived object,
you must restore the object for the duration (number of days) that you specify.
For objects in the Archive Access or Deep Archive Access tiers of S3 Intelligent-Tiering,
you must first initiate a restore request, and then wait until the object
is moved into the Frequent Access tier.
To restore a specific object version, you can provide a version ID. If you
don't provide a version ID, Amazon S3 restores the current version.
When restoring an archived object, you can specify one of the following data
access tier options in the Tier element of the request body:
Expedited - Expedited retrievals allow you to quickly access your data
stored in the S3 Glacier Flexible Retrieval Flexible Retrieval storage
class or S3 Intelligent-Tiering Archive tier when occasional urgent requests
for restoring archives are required. For all but the largest archived
objects (250 MB+), data accessed using Expedited retrievals is typically
made available within 1–5 minutes. Provisioned capacity ensures that
retrieval capacity for Expedited retrievals is available when you need
it. Expedited retrievals and provisioned capacity are not available for
objects stored in the S3 Glacier Deep Archive storage class or S3 Intelligent-Tiering
Deep Archive tier.
Standard - Standard retrievals allow you to access any of your archived
objects within several hours. This is the default option for retrieval
requests that do not specify the retrieval option. Standard retrievals
typically finish within 3–5 hours for objects stored in the S3 Glacier
Flexible Retrieval Flexible Retrieval storage class or S3 Intelligent-Tiering
Archive tier. They typically finish within 12 hours for objects stored
in the S3 Glacier Deep Archive storage class or S3 Intelligent-Tiering
Deep Archive tier. Standard retrievals are free for objects stored in
S3 Intelligent-Tiering.
Bulk - Bulk retrievals free for objects stored in the S3 Glacier Flexible
Retrieval and S3 Intelligent-Tiering storage classes, enabling you to
retrieve large amounts, even petabytes, of data at no cost. Bulk retrievals
typically finish within 5–12 hours for objects stored in the S3 Glacier
Flexible Retrieval Flexible Retrieval storage class or S3 Intelligent-Tiering
Archive tier. Bulk retrievals are also the lowest-cost retrieval option
when restoring objects from S3 Glacier Deep Archive. They typically finish
within 48 hours for objects stored in the S3 Glacier Deep Archive storage
class or S3 Intelligent-Tiering Deep Archive tier.
For more information about archive retrieval options and provisioned capacity
for Expedited data access, see Restoring Archived Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html )
in the Amazon S3 User Guide.
You can use Amazon S3 restore speed upgrade to change the restore speed to
a faster speed while it is in progress. For more information, see Upgrading
the speed of an in-progress restore ( https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html#restoring-objects-upgrade-tier.title.html )
in the Amazon S3 User Guide.
To get the status of object restoration, you can send a HEAD request. Operations
return the x-amz-restore header, which provides information about the restoration
status, in the response. You can use Amazon S3 event notifications to notify
you when a restore is initiated or completed. For more information, see Configuring
Amazon S3 Event Notifications ( https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html )
in the Amazon S3 User Guide.
After restoring an archived object, you can update the restoration period
by reissuing the request with a new period. Amazon S3 updates the restoration
period relative to the current time and charges only for the request-there
are no data transfer charges. You cannot update the restoration period when
Amazon S3 is actively processing your current restore request for the object.
If your bucket has a lifecycle configuration with a rule that includes an
expiration action, the object expiration overrides the life span that you
specify in a restore request. For example, if you restore an object copy
for 10 days, but the object is scheduled to expire in 3 days, Amazon S3 deletes
the object in 3 days. For more information about lifecycle configuration,
see PutBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html )
and Object Lifecycle Management ( https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html )
in Amazon S3 User Guide. Responses
A successful action returns either the 200 OK or 202 Accepted status code.
If the object is not previously restored, then Amazon S3 returns 202
Accepted in the response.
If the object is previously restored, Amazon S3 returns 200 OK in the
response.
Special errors: Code: RestoreAlreadyInProgress Cause: Object restore
is already in progress. (This error does not apply to SELECT type requests.)
HTTP Status Code: 409 Conflict SOAP Fault Code Prefix: Client
Code: GlacierExpeditedRetrievalNotAvailable Cause: expedited retrievals
are currently not available. Try again later. (Returned if there is insufficient
capacity to process the Expedited request. This error applies only to
Expedited retrievals and not to S3 Standard or Bulk retrievals.) HTTP
Status Code: 503 SOAP Fault Code Prefix: N/A
The following operations are related to RestoreObject:
PutBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html )
GetBucketNotificationConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketNotificationConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation RestoreObject for usage and error information.
Returned Error Codes:  ErrCodeObjectAlreadyInActiveTierError "ObjectAlreadyInActiveTierError"
This action is not allowed against this storage tier.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RestoreObject    Example (Shared00)

To restore an archived object
The following example restores for one day an archived copy of an object back into
Amazon S3 bucket.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.RestoreObjectInput{
Bucket: aws.String("examplebucket"),
Key:    aws.String("archivedobjectkey"),
RestoreRequest: &s3.RestoreRequest{
Days: aws.Int64(1),
GlacierJobParameters: &s3.GlacierJobParameters{
Tier: aws.String("Expedited"),
},
},
}

result, err := svc.RestoreObject(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
case s3.ErrCodeObjectAlreadyInActiveTierError:
fmt.Println(s3.ErrCodeObjectAlreadyInActiveTierError, aerr.Error())
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) RestoreObjectRequest

func (c * S3 ) RestoreObjectRequest(input * RestoreObjectInput ) (req * request . Request , output * RestoreObjectOutput )
RestoreObjectRequest generates a "aws/request.Request" representing the
client's request for the RestoreObject operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See RestoreObject for more information on using the RestoreObject
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the RestoreObjectRequest method.
req, resp := client.RestoreObjectRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/RestoreObject

func (*S3) RestoreObjectWithContext    added in  v1.8.0

func (c * S3 ) RestoreObjectWithContext(ctx aws . Context , input * RestoreObjectInput , opts ... request . Option ) (* RestoreObjectOutput , error )
RestoreObjectWithContext is the same as RestoreObject with the addition of
the ability to pass a context and additional request options.
See RestoreObject for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) SelectObjectContent    added in  v1.14.0

func (c * S3 ) SelectObjectContent(input * SelectObjectContentInput ) (* SelectObjectContentOutput , error )
Permissions    Object Data Formats    Working with the Response Body    GetObject Support    Special Errors
SelectObjectContent API operation for Amazon Simple Storage Service.
This action filters the contents of an Amazon S3 object based on a simple
structured query language (SQL) statement. In the request, along with the
SQL expression, you must also specify a data serialization format (JSON,
CSV, or Apache Parquet) of the object. Amazon S3 uses this format to parse
object data into records, and returns only records that match the specified
SQL expression. You must also specify the data serialization format for the
response.
This action is not supported by Amazon S3 on Outposts.
For more information about Amazon S3 Select, see Selecting Content from Objects
( https://docs.aws.amazon.com/AmazonS3/latest/dev/selecting-content-from-objects.html )
and SELECT Command ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-glacier-select-sql-reference-select.html )
in the Amazon S3 User Guide. Permissions
You must have s3:GetObject permission for this operation. Amazon S3 Select
does not support anonymous access. For more information about permissions,
see Specifying Permissions in a Policy ( https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html )
in the Amazon S3 User Guide. Object Data Formats
You can use Amazon S3 Select to query objects that have the following format
properties:
CSV, JSON, and Parquet - Objects must be in CSV, JSON, or Parquet format.
UTF-8 - UTF-8 is the only encoding type Amazon S3 Select supports.
GZIP or BZIP2 - CSV and JSON files can be compressed using GZIP or BZIP2.
GZIP and BZIP2 are the only compression formats that Amazon S3 Select
supports for CSV and JSON files. Amazon S3 Select supports columnar compression
for Parquet using GZIP or Snappy. Amazon S3 Select does not support whole-object
compression for Parquet objects.
Server-side encryption - Amazon S3 Select supports querying objects
that are protected with server-side encryption. For objects that are encrypted
with customer-provided encryption keys (SSE-C), you must use HTTPS, and
you must use the headers that are documented in the GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html ).
For more information about SSE-C, see Server-Side Encryption (Using Customer-Provided
Encryption Keys) ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )
in the Amazon S3 User Guide. For objects that are encrypted with Amazon
S3 managed keys (SSE-S3) and Amazon Web Services KMS keys (SSE-KMS), server-side
encryption is handled transparently, so you don't need to specify anything.
For more information about server-side encryption, including SSE-S3 and
SSE-KMS, see Protecting Data Using Server-Side Encryption ( https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html )
in the Amazon S3 User Guide.  Working with the Response Body
Given the response size is unknown, Amazon S3 Select streams the response
as a series of messages and includes a Transfer-Encoding header with chunked
as its value in the response. For more information, see Appendix: SelectObjectContent
Response ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTSelectObjectAppendix.html ). GetObject Support
The SelectObjectContent action does not support the following GetObject functionality.
For more information, see GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html ).
Range: Although you can specify a scan range for an Amazon S3 Select
request (see SelectObjectContentRequest - ScanRange ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_SelectObjectContent.html#AmazonS3-SelectObjectContent-request-ScanRange )
in the request parameters), you cannot specify the range of bytes of an
object to return.
The GLACIER, DEEP_ARCHIVE, and REDUCED_REDUNDANCY storage classes, or
the ARCHIVE_ACCESS and DEEP_ARCHIVE_ACCESS access tiers of the INTELLIGENT_TIERING
storage class: You cannot query objects in the GLACIER, DEEP_ARCHIVE,
or REDUCED_REDUNDANCY storage classes, nor objects in the ARCHIVE_ACCESS
or DEEP_ARCHIVE_ACCESS access tiers of the INTELLIGENT_TIERING storage
class. For more information about storage classes, see Using Amazon S3
storage classes ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html )
in the Amazon S3 User Guide.  Special Errors
For a list of special errors for this operation, see List of SELECT Object
Content Error Codes ( https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#SelectObjectContentErrorCodeList )
The following operations are related to SelectObjectContent:
GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html )
GetBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html )
PutBucketLifecycleConfiguration ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation SelectObjectContent for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SelectObjectContent    Example
sess := session.Must(session.NewSession())
svc := New(sess)

/*
Example myObjectKey CSV content:

name,number
gopher,0
ᵷodɥǝɹ,1
*/1
*/

// Make the Select Object Content API request using the object uploaded.
resp, err := svc.SelectObjectContent(&SelectObjectContentInput{
Bucket:         aws.String("myBucket"),
Key:            aws.String("myObjectKey"),
Expression:     aws.String("SELECT name FROM S3Object WHERE cast(number as int) < 1"),
ExpressionType: aws.String(ExpressionTypeSql),
InputSerialization: &InputSerialization{
CSV: &CSVInput{
FileHeaderInfo: aws.String(FileHeaderInfoUse),
},
},
OutputSerialization: &OutputSerialization{
CSV: &CSVOutput{},
},
})
if err != nil {
fmt.Fprintf(os.Stderr, "failed making API request, %v\n", err)
return
}
defer resp.EventStream.Close()

results, resultWriter := io.Pipe()
go func() {
defer resultWriter.Close()
for event := range resp.EventStream.Events() {
switch e := event.(type) {
case *RecordsEvent:
resultWriter.Write(e.Payload)
case *StatsEvent:
fmt.Printf("Processed %d bytes\n", *e.Details.BytesProcessed)
}
}
}()

// Printout the results
resReader := csv.NewReader(results)
for {
record, err := resReader.Read()
if err == io.EOF {
break
}
fmt.Println(record)
}

if err := resp.EventStream.Err(); err != nil {
fmt.Fprintf(os.Stderr, "reading from event stream failed, %v\n", err)
}  Output:

func (*S3) SelectObjectContentRequest    added in  v1.14.0

func (c * S3 ) SelectObjectContentRequest(input * SelectObjectContentInput ) (req * request . Request , output * SelectObjectContentOutput )
SelectObjectContentRequest generates a "aws/request.Request" representing the
client's request for the SelectObjectContent operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See SelectObjectContent for more information on using the SelectObjectContent
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the SelectObjectContentRequest method.
req, resp := client.SelectObjectContentRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/SelectObjectContent

func (*S3) SelectObjectContentWithContext    added in  v1.14.0

func (c * S3 ) SelectObjectContentWithContext(ctx aws . Context , input * SelectObjectContentInput , opts ... request . Option ) (* SelectObjectContentOutput , error )
SelectObjectContentWithContext is the same as SelectObjectContent with the addition of
the ability to pass a context and additional request options.
See SelectObjectContent for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) UploadPart

func (c * S3 ) UploadPart(input * UploadPartInput ) (* UploadPartOutput , error )
UploadPart API operation for Amazon Simple Storage Service.
Uploads a part in a multipart upload.
In this operation, you provide part data in your request. However, you have
an option to specify your existing Amazon S3 object as a data source for
the part you are uploading. To upload a part from an existing object, you
use the UploadPartCopy ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html )
operation.
You must initiate a multipart upload (see CreateMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html ))
before you can upload any part. In response to your initiate request, Amazon
S3 returns an upload ID, a unique identifier, that you must include in your
upload part request.
Part numbers can be any number from 1 to 10,000, inclusive. A part number
uniquely identifies a part and also defines its position within the object
being created. If you upload a new part using the same part number that was
used with a previous part, the previously uploaded part is overwritten.
For information about maximum and minimum part sizes and other multipart
upload specifications, see Multipart upload limits ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/qfacts.html )
in the Amazon S3 User Guide.
To ensure that data is not corrupted when traversing the network, specify
the Content-MD5 header in the upload part request. Amazon S3 checks the part
data against the provided MD5 value. If they do not match, Amazon S3 returns
an error.
If the upload request is signed with Signature Version 4, then Amazon Web
Services S3 uses the x-amz-content-sha256 header as a checksum instead of
Content-MD5. For more information see Authenticating Requests: Using the
Authorization Header (Amazon Web Services Signature Version 4) ( https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html ).
Note: After you initiate multipart upload and upload one or more parts, you
must either complete or abort multipart upload in order to stop getting charged
for storage of the uploaded parts. Only after you either complete or abort
multipart upload, Amazon S3 frees up the parts storage and stops charging
you for the parts storage.
For more information on multipart uploads, go to Multipart Upload Overview
( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html ) in the
Amazon S3 User Guide .
For information on the permissions required to use the multipart upload API,
go to Multipart Upload and Permissions ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html )
in the Amazon S3 User Guide.
Server-side encryption is for data encryption at rest. Amazon S3 encrypts
your data as it writes it to disks in its data centers and decrypts it when
you access it. You have three mutually exclusive options to protect data
using server-side encryption in Amazon S3, depending on how you choose to
manage the encryption keys. Specifically, the encryption key options are
Amazon S3 managed keys (SSE-S3), Amazon Web Services KMS keys (SSE-KMS),
and Customer-Provided Keys (SSE-C). Amazon S3 encrypts data with server-side
encryption using Amazon S3 managed keys (SSE-S3) by default. You can optionally
tell Amazon S3 to encrypt data at rest using server-side encryption with
other key options. The option you use depends on whether you want to use
KMS keys (SSE-KMS) or provide your own encryption key (SSE-C). If you choose
to provide your own encryption key, the request headers you provide in the
request must match the headers you used in the request to initiate the upload
by using CreateMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html ).
For more information, go to Using Server-Side Encryption ( https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html )
in the Amazon S3 User Guide.
Server-side encryption is supported by the S3 Multipart Upload actions. Unless
you are using a customer-provided encryption key (SSE-C), you don't need
to specify the encryption parameters in each UploadPart request. Instead,
you only need to specify the server-side encryption parameters in the initial
Initiate Multipart request. For more information, see CreateMultipartUpload
( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html ).
If you requested server-side encryption using a customer-provided encryption
key (SSE-C) in your initiate multipart upload request, you must provide identical
encryption information in each part upload using the following headers.
x-amz-server-side-encryption-customer-algorithm
x-amz-server-side-encryption-customer-key
x-amz-server-side-encryption-customer-key-MD5
UploadPart has the following special errors:  Code: NoSuchUpload Cause: The specified multipart upload does not exist.
The upload ID might be invalid, or the multipart upload might have been
aborted or completed. HTTP Status Code: 404 Not Found SOAP Fault Code
Prefix: Client
The following operations are related to UploadPart:
CreateMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html )
CompleteMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html )
AbortMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html )
ListParts ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html )
ListMultipartUploads ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation UploadPart for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/UploadPart    Example (Shared00)

To upload a part
The following example uploads part 1 of a multipart upload. The example specifies
a file name for the part data. The Upload ID is same that is returned by the initiate
multipart upload.  package main

import (
"fmt"
"strings"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.UploadPartInput{
Body:       aws.ReadSeekCloser(strings.NewReader("fileToUpload")),
Bucket:     aws.String("examplebucket"),
Key:        aws.String("examplelargeobject"),
PartNumber: aws.Int64(1),
UploadId:   aws.String("xadcOB_7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--"),
}

result, err := svc.UploadPart(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) UploadPartCopy

func (c * S3 ) UploadPartCopy(input * UploadPartCopyInput ) (* UploadPartCopyOutput , error )
Versioning
UploadPartCopy API operation for Amazon Simple Storage Service.
Uploads a part by copying data from an existing object as data source. You
specify the data source by adding the request header x-amz-copy-source in
your request and a byte range by adding the request header x-amz-copy-source-range
in your request.
For information about maximum and minimum part sizes and other multipart
upload specifications, see Multipart upload limits ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/qfacts.html )
in the Amazon S3 User Guide.
Instead of using an existing object as part data, you might use the UploadPart
( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html ) action
and provide data in your request.
You must initiate a multipart upload before you can upload any part. In response
to your initiate request. Amazon S3 returns a unique identifier, the upload
ID, that you must include in your upload part request.
For more information about using the UploadPartCopy operation, see the following:
For conceptual information about multipart uploads, see Uploading Objects
Using Multipart Upload ( https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html )
in the Amazon S3 User Guide.
For information about permissions required to use the multipart upload
API, see Multipart Upload and Permissions ( https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html )
in the Amazon S3 User Guide.
For information about copying objects using a single atomic action vs.
a multipart upload, see Operations on Objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectOperations.html )
in the Amazon S3 User Guide.
For information about using server-side encryption with customer-provided
encryption keys with the UploadPartCopy operation, see CopyObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html )
and UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html ).
Note the following additional considerations about the request headers x-amz-copy-source-if-match,
x-amz-copy-source-if-none-match, x-amz-copy-source-if-unmodified-since, and
x-amz-copy-source-if-modified-since:
Consideration 1 - If both of the x-amz-copy-source-if-match and x-amz-copy-source-if-unmodified-since
headers are present in the request as follows: x-amz-copy-source-if-match
condition evaluates to true, and; x-amz-copy-source-if-unmodified-since
condition evaluates to false; Amazon S3 returns 200 OK and copies the
data.
Consideration 2 - If both of the x-amz-copy-source-if-none-match and
x-amz-copy-source-if-modified-since headers are present in the request
as follows: x-amz-copy-source-if-none-match condition evaluates to false,
and; x-amz-copy-source-if-modified-since condition evaluates to true;
Amazon S3 returns 412 Precondition Failed response code.  Versioning
If your bucket has versioning enabled, you could have multiple versions of
the same object. By default, x-amz-copy-source identifies the current version
of the object to copy. If the current version is a delete marker and you
don't specify a versionId in the x-amz-copy-source, Amazon S3 returns a 404
error, because the object does not exist. If you specify versionId in the
x-amz-copy-source and the versionId is a delete marker, Amazon S3 returns
an HTTP 400 error, because you are not allowed to specify a delete marker
as a version for the x-amz-copy-source.
You can optionally specify a specific version of the source object to copy
by adding the versionId subresource as shown in the following example:
x-amz-copy-source: /bucket/object?versionId=version id
Special errors
Code: NoSuchUpload Cause: The specified multipart upload does not exist.
The upload ID might be invalid, or the multipart upload might have been
aborted or completed. HTTP Status Code: 404 Not Found
Code: InvalidRequest Cause: The specified copy source is not supported
as a byte-range copy source. HTTP Status Code: 400 Bad Request
The following operations are related to UploadPartCopy:
CreateMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html )
UploadPart ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html )
CompleteMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html )
AbortMultipartUpload ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html )
ListParts ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html )
ListMultipartUploads ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html )
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation UploadPartCopy for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/UploadPartCopy    Example (Shared00)

To upload a part by copying data from an existing object as data source
The following example uploads a part of a multipart upload by copying data from an
existing object as data source.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.UploadPartCopyInput{
Bucket:     aws.String("examplebucket"),
CopySource: aws.String("/bucketname/sourceobjectkey"),
Key:        aws.String("examplelargeobject"),
PartNumber: aws.Int64(1),
UploadId:   aws.String("exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--"),
}

result, err := svc.UploadPartCopy(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run    Example (Shared01)

To upload a part by copying byte range from an existing object as data source
The following example uploads a part of a multipart upload by copying a specified
byte range from an existing object as data source.  package main

import (
"fmt"

"github.com/aws/aws-sdk-go/aws"
"github.com/aws/aws-sdk-go/aws/awserr"
"github.com/aws/aws-sdk-go/aws/session"
"github.com/aws/aws-sdk-go/service/s3"
)


func main() {
svc := s3.New(session.New())
input := &s3.UploadPartCopyInput{
Bucket:          aws.String("examplebucket"),
CopySource:      aws.String("/bucketname/sourceobjectkey"),
CopySourceRange: aws.String("bytes=1-100000"),
Key:             aws.String("examplelargeobject"),
PartNumber:      aws.Int64(2),
UploadId:        aws.String("exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--"),
}

result, err := svc.UploadPartCopy(input)
if err != nil {
if aerr, ok := err.(awserr.Error); ok {
switch aerr.Code() {
default:
fmt.Println(aerr.Error())
}
} else {
// Print the error, cast err to awserr.Error to get the Code and
// Message from an error.
fmt.Println(err.Error())
}
return
}

fmt.Println(result)
}  Output:

Share  Format  Run

func (*S3) UploadPartCopyRequest

func (c * S3 ) UploadPartCopyRequest(input * UploadPartCopyInput ) (req * request . Request , output * UploadPartCopyOutput )
UploadPartCopyRequest generates a "aws/request.Request" representing the
client's request for the UploadPartCopy operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See UploadPartCopy for more information on using the UploadPartCopy
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the UploadPartCopyRequest method.
req, resp := client.UploadPartCopyRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/UploadPartCopy

func (*S3) UploadPartCopyWithContext    added in  v1.8.0

func (c * S3 ) UploadPartCopyWithContext(ctx aws . Context , input * UploadPartCopyInput , opts ... request . Option ) (* UploadPartCopyOutput , error )
UploadPartCopyWithContext is the same as UploadPartCopy with the addition of
the ability to pass a context and additional request options.
See UploadPartCopy for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) UploadPartRequest

func (c * S3 ) UploadPartRequest(input * UploadPartInput ) (req * request . Request , output * UploadPartOutput )
UploadPartRequest generates a "aws/request.Request" representing the
client's request for the UploadPart operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See UploadPart for more information on using the UploadPart
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the UploadPartRequest method.
req, resp := client.UploadPartRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/UploadPart

func (*S3) UploadPartWithContext    added in  v1.8.0

func (c * S3 ) UploadPartWithContext(ctx aws . Context , input * UploadPartInput , opts ... request . Option ) (* UploadPartOutput , error )
UploadPartWithContext is the same as UploadPart with the addition of
the ability to pass a context and additional request options.
See UploadPart for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) WaitUntilBucketExists    added in  v0.10.3

func (c * S3 ) WaitUntilBucketExists(input * HeadBucketInput ) error
WaitUntilBucketExists uses the Amazon S3 API operation
HeadBucket to wait for a condition to be met before returning.
If the condition is not met within the max attempt window, an error will
be returned.

func (*S3) WaitUntilBucketExistsWithContext    added in  v1.8.0

func (c * S3 ) WaitUntilBucketExistsWithContext(ctx aws . Context , input * HeadBucketInput , opts ... request . WaiterOption ) error
WaitUntilBucketExistsWithContext is an extended version of WaitUntilBucketExists.
With the support for passing in a context and options to configure the
Waiter and the underlying request options.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) WaitUntilBucketNotExists    added in  v0.10.3

func (c * S3 ) WaitUntilBucketNotExists(input * HeadBucketInput ) error
WaitUntilBucketNotExists uses the Amazon S3 API operation
HeadBucket to wait for a condition to be met before returning.
If the condition is not met within the max attempt window, an error will
be returned.

func (*S3) WaitUntilBucketNotExistsWithContext    added in  v1.8.0

func (c * S3 ) WaitUntilBucketNotExistsWithContext(ctx aws . Context , input * HeadBucketInput , opts ... request . WaiterOption ) error
WaitUntilBucketNotExistsWithContext is an extended version of WaitUntilBucketNotExists.
With the support for passing in a context and options to configure the
Waiter and the underlying request options.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) WaitUntilObjectExists    added in  v0.10.3

func (c * S3 ) WaitUntilObjectExists(input * HeadObjectInput ) error
WaitUntilObjectExists uses the Amazon S3 API operation
HeadObject to wait for a condition to be met before returning.
If the condition is not met within the max attempt window, an error will
be returned.

func (*S3) WaitUntilObjectExistsWithContext    added in  v1.8.0

func (c * S3 ) WaitUntilObjectExistsWithContext(ctx aws . Context , input * HeadObjectInput , opts ... request . WaiterOption ) error
WaitUntilObjectExistsWithContext is an extended version of WaitUntilObjectExists.
With the support for passing in a context and options to configure the
Waiter and the underlying request options.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) WaitUntilObjectNotExists    added in  v0.10.3

func (c * S3 ) WaitUntilObjectNotExists(input * HeadObjectInput ) error
WaitUntilObjectNotExists uses the Amazon S3 API operation
HeadObject to wait for a condition to be met before returning.
If the condition is not met within the max attempt window, an error will
be returned.

func (*S3) WaitUntilObjectNotExistsWithContext    added in  v1.8.0

func (c * S3 ) WaitUntilObjectNotExistsWithContext(ctx aws . Context , input * HeadObjectInput , opts ... request . WaiterOption ) error
WaitUntilObjectNotExistsWithContext is an extended version of WaitUntilObjectNotExists.
With the support for passing in a context and options to configure the
Waiter and the underlying request options.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.

func (*S3) WriteGetObjectResponse    added in  v1.38.0

func (c * S3 ) WriteGetObjectResponse(input * WriteGetObjectResponseInput ) (* WriteGetObjectResponseOutput , error )
WriteGetObjectResponse API operation for Amazon Simple Storage Service.
Passes transformed objects to a GetObject operation when using Object Lambda
access points. For information about Object Lambda access points, see Transforming
objects with Object Lambda access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html )
in the Amazon S3 User Guide.
This operation supports metadata that can be returned by GetObject ( https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html ),
in addition to RequestRoute, RequestToken, StatusCode, ErrorCode, and ErrorMessage.
The GetObject response metadata is supported so that the WriteGetObjectResponse
caller, typically an Lambda function, can provide the same metadata when
it internally invokes GetObject. When WriteGetObjectResponse is called by
a customer-owned Lambda function, the metadata returned to the end user GetObject
call might differ from what Amazon S3 would normally return.
You can include any number of metadata headers. When including a metadata
header, it should be prefaced with x-amz-meta. For example, x-amz-meta-my-custom-header:
MyCustomValue. The primary use case for this is to forward GetObject metadata.
Amazon Web Services provides some prebuilt Lambda functions that you can
use with S3 Object Lambda to detect and redact personally identifiable information
(PII) and decompress S3 objects. These Lambda functions are available in
the Amazon Web Services Serverless Application Repository, and can be selected
through the Amazon Web Services Management Console when you create your Object
Lambda access point.
Example 1: PII Access Control - This Lambda function uses Amazon Comprehend,
a natural language processing (NLP) service using machine learning to find
insights and relationships in text. It automatically detects personally identifiable
information (PII) such as names, addresses, dates, credit card numbers, and
social security numbers from documents in your Amazon S3 bucket.
Example 2: PII Redaction - This Lambda function uses Amazon Comprehend, a
natural language processing (NLP) service using machine learning to find
insights and relationships in text. It automatically redacts personally identifiable
information (PII) such as names, addresses, dates, credit card numbers, and
social security numbers from documents in your Amazon S3 bucket.
Example 3: Decompression - The Lambda function S3ObjectLambdaDecompression,
is equipped to decompress objects stored in S3 in one of six compressed file
formats including bzip2, gzip, snappy, zlib, zstandard and ZIP.
For information on how to view and use these functions, see Using Amazon
Web Services built Lambda functions ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-examples.html )
in the Amazon S3 User Guide.
Returns awserr.Error for service API and SDK errors. Use runtime type assertions
with awserr.Error's Code and Message methods to get detailed information about
the error.
See the AWS API reference guide for Amazon Simple Storage Service's
API operation WriteGetObjectResponse for usage and error information.
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/WriteGetObjectResponse

func (*S3) WriteGetObjectResponseRequest    added in  v1.38.0

func (c * S3 ) WriteGetObjectResponseRequest(input * WriteGetObjectResponseInput ) (req * request . Request , output * WriteGetObjectResponseOutput )
WriteGetObjectResponseRequest generates a "aws/request.Request" representing the
client's request for the WriteGetObjectResponse operation. The "output" return
value will be populated with the request's response once the request completes
successfully.
Use "Send" method on the returned Request to send the API call to the service.
the "output" return value is not valid until after Send returns without error.
See WriteGetObjectResponse for more information on using the WriteGetObjectResponse
API call, and error handling.
This method is useful when you want to inject custom logic or configuration
into the SDK's request lifecycle. Such as custom headers, or retry logic. // Example sending a request using the WriteGetObjectResponseRequest method.
req, resp := client.WriteGetObjectResponseRequest(params)

err := req.Send()
if err == nil { // resp is now filled
fmt.Println(resp)
}
See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/WriteGetObjectResponse

func (*S3) WriteGetObjectResponseWithContext    added in  v1.38.0

func (c * S3 ) WriteGetObjectResponseWithContext(ctx aws . Context , input * WriteGetObjectResponseInput , opts ... request . Option ) (* WriteGetObjectResponseOutput , error )
WriteGetObjectResponseWithContext is the same as WriteGetObjectResponse with the addition of
the ability to pass a context and additional request options.
See WriteGetObjectResponse for details on how to use this API operation.
The context must be non-nil and will be used for request cancellation. If
the context is nil a panic will occur. In the future the SDK may create
sub-contexts for http.Requests. See https://golang.org/pkg/context/ for more information on using Contexts.
type SSEKMS    added in  v1.12.24
type SSEKMS struct {  // Specifies the ID of the Key Management Service (KMS) symmetric encryption   // customer managed key to use for encrypting inventory reports.  //  // KeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by SSEKMS's  // String and GoString methods.  //  // KeyId is a required field KeyId * string `type:"string" required:"true" sensitive:"true"` // contains filtered or unexported fields }
Specifies the use of SSE-KMS to encrypt delivered inventory reports.

func (SSEKMS) GoString    added in  v1.12.24

func (s SSEKMS ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SSEKMS) SetKeyId    added in  v1.12.24

func (s * SSEKMS ) SetKeyId(v string ) * SSEKMS
SetKeyId sets the KeyId field's value.

func (SSEKMS) String    added in  v1.12.24

func (s SSEKMS ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SSEKMS) Validate    added in  v1.12.24

func (s * SSEKMS ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type SSES3    added in  v1.12.24
type SSES3 struct { // contains filtered or unexported fields }
Specifies the use of SSE-S3 to encrypt delivered inventory reports.

func (SSES3) GoString    added in  v1.12.24

func (s SSES3 ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (SSES3) String    added in  v1.12.24

func (s SSES3 ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type ScanRange    added in  v1.25.21
type ScanRange struct {  // Specifies the end of the byte range. This parameter is optional. Valid values:   // non-negative integers. The default value is one less than the size of the  // object being queried. If only the End parameter is supplied, it is interpreted  // to mean scan the last N bytes of the file. For example, <scanrange><end>50</end></scanrange>  // means scan the last 50 bytes. End * int64 `type:"long"`  // Specifies the start of the byte range. This parameter is optional. Valid   // values: non-negative integers. The default value is 0. If only start is supplied,  // it means scan from that point to the end of the file. For example, <scanrange><start>50</start></scanrange>  // means scan from byte 50 until the end of the file. Start * int64 `type:"long"` // contains filtered or unexported fields }
Specifies the byte range of the object to get the records from. A record
is processed when its first byte is contained by the range. This parameter
is optional, but when specified, it must not be empty. See RFC 2616, Section
14.35.1 about how to specify the start and end of the range.

func (ScanRange) GoString    added in  v1.25.21

func (s ScanRange ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ScanRange) SetEnd    added in  v1.25.21

func (s * ScanRange ) SetEnd(v int64 ) * ScanRange
SetEnd sets the End field's value.

func (*ScanRange) SetStart    added in  v1.25.21

func (s * ScanRange ) SetStart(v int64 ) * ScanRange
SetStart sets the Start field's value.

func (ScanRange) String    added in  v1.25.21

func (s ScanRange ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type SelectObjectContentEventStream    added in  v1.14.0
type SelectObjectContentEventStream struct {  // Reader is the EventStream reader for the SelectObjectContentEventStream   // events. This value is automatically set by the SDK when the API call is made  // Use this member when unit testing your code with the SDK to mock out the  // EventStream Reader.  //  // Must not be nil. Reader SelectObjectContentEventStreamReader   // StreamCloser is the io.Closer for the EventStream connection. For HTTP   // EventStream this is the response Body. The stream will be closed when  // the Close method of the EventStream is called. StreamCloser io . Closer  // contains filtered or unexported fields }
SelectObjectContentEventStream provides the event stream handling for the SelectObjectContent.
For testing and mocking the event stream this type should be initialized via
the NewSelectObjectContentEventStream constructor function. Using the functional options
to pass in nested mock behavior.

func NewSelectObjectContentEventStream    added in  v1.34.3

func NewSelectObjectContentEventStream(opts ...func(* SelectObjectContentEventStream )) * SelectObjectContentEventStream
NewSelectObjectContentEventStream initializes an SelectObjectContentEventStream.
This function should only be used for testing and mocking the SelectObjectContentEventStream
stream within your application.
The Reader member must be set before reading events from the stream.
The StreamCloser member should be set to the underlying io.Closer,
(e.g. http.Response.Body), that will be closed when the stream Close method
is called. es := NewSelectObjectContentEventStream(func(o *SelectObjectContentEventStream){
es.Reader = myMockStreamReader
es.StreamCloser = myMockStreamCloser
})

func (*SelectObjectContentEventStream) Close    added in  v1.14.0

func (es * SelectObjectContentEventStream ) Close() (err error )
Close closes the stream. This will also cause the stream to be closed.
Close must be called when done using the stream API. Not calling Close
may result in resource leaks.
You can use the closing of the Reader's Events channel to terminate your
application's read from the API's stream.

func (*SelectObjectContentEventStream) Err    added in  v1.14.0

func (es * SelectObjectContentEventStream ) Err() error
Err returns any error that occurred while reading or writing EventStream
Events from the service API's response. Returns nil if there were no errors.

func (*SelectObjectContentEventStream) Events    added in  v1.14.0

func (es * SelectObjectContentEventStream ) Events() <-chan SelectObjectContentEventStreamEvent
Events returns a channel to read events from.
These events are:  ContinuationEvent  EndEvent  ProgressEvent  RecordsEvent  StatsEvent  SelectObjectContentEventStreamUnknownEvent
type SelectObjectContentEventStreamEvent    added in  v1.14.0
type SelectObjectContentEventStreamEvent interface { eventstreamapi . Marshaler  eventstreamapi . Unmarshaler  // contains filtered or unexported methods }
SelectObjectContentEventStreamEvent groups together all EventStream
events writes for SelectObjectContentEventStream.
These events are:  ContinuationEvent  EndEvent  ProgressEvent  RecordsEvent  StatsEvent
type SelectObjectContentEventStreamReader    added in  v1.14.0
type SelectObjectContentEventStreamReader interface {  // Returns a channel of events as they are read from the event stream.  Events() <-chan SelectObjectContentEventStreamEvent   // Close will stop the reader reading events from the stream.  Close() error   // Returns any error that has occurred while reading from the event stream.  Err() error }
SelectObjectContentEventStreamReader provides the interface for reading to the stream. The
default implementation for this interface will be SelectObjectContentEventStreamData.
The reader's Close method must allow multiple concurrent calls.
These events are:  ContinuationEvent  EndEvent  ProgressEvent  RecordsEvent  StatsEvent  SelectObjectContentEventStreamUnknownEvent
type SelectObjectContentEventStreamUnknownEvent    added in  v1.33.7
type SelectObjectContentEventStreamUnknownEvent struct { Type string  Message eventstream . Message  }
SelectObjectContentEventStreamUnknownEvent provides a failsafe event for the
SelectObjectContentEventStream group of events when an unknown event is received.

func (*SelectObjectContentEventStreamUnknownEvent) MarshalEvent    added in  v1.33.7

func (e * SelectObjectContentEventStreamUnknownEvent ) MarshalEvent(pm protocol . PayloadMarshaler ) (
msg eventstream . Message , err error ,
)
MarshalEvent marshals the type into an stream event value. This method
should only used internally within the SDK's EventStream handling.

func (*SelectObjectContentEventStreamUnknownEvent) UnmarshalEvent    added in  v1.33.7

func (e * SelectObjectContentEventStreamUnknownEvent ) UnmarshalEvent(
payloadUnmarshaler protocol . PayloadUnmarshaler ,
msg eventstream . Message ,
) error
UnmarshalEvent unmarshals the EventStream Message into the SelectObjectContentEventStreamData value.
This method is only used internally within the SDK's EventStream handling.
type SelectObjectContentInput    added in  v1.14.0
type SelectObjectContentInput struct {  // The S3 bucket.   //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The expression that is used to query the object.   //  // Expression is a required field Expression * string `type:"string" required:"true"`  // The type of the provided expression (for example, SQL).   //  // ExpressionType is a required field ExpressionType * string `type:"string" required:"true" enum:"ExpressionType"`  // Describes the format of the data in the object that is being queried.   //  // InputSerialization is a required field InputSerialization * InputSerialization `type:"structure" required:"true"`  // The object key.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Describes the format of the data that you want Amazon S3 to return in response.   //  // OutputSerialization is a required field OutputSerialization * OutputSerialization `type:"structure" required:"true"`  // Specifies if periodic request progress information should be enabled.  RequestProgress * RequestProgress `type:"structure"`  // The server-side encryption (SSE) algorithm used to encrypt the object. This   // parameter is needed only when the object was created using a checksum algorithm.  // For more information, see Protecting data using SSE-C keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )  // in the Amazon S3 User Guide. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // The server-side encryption (SSE) customer managed key. This parameter is   // needed only when the object was created using a checksum algorithm. For more  // information, see Protecting data using SSE-C keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )  // in the Amazon S3 User Guide.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by SelectObjectContentInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // The MD5 server-side encryption (SSE) customer managed key. This parameter   // is needed only when the object was created using a checksum algorithm. For  // more information, see Protecting data using SSE-C keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html )  // in the Amazon S3 User Guide. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // Specifies the byte range of the object to get the records from. A record   // is processed when its first byte is contained by the range. This parameter  // is optional, but when specified, it must not be empty. See RFC 2616 , Section  // 14.35.1 about how to specify the start and end of the range.  //  // ScanRangemay be used in the following ways:  //  //    * <scanrange><start>50</start><end>100</end></scanrange> - process only  //    the records starting between the bytes 50 and 100 (inclusive, counting  //    from zero)  //  //    * <scanrange><start>50</start></scanrange> - process only the records  //    starting after the byte 50  //  //    * <scanrange><end>50</end></scanrange> - process only the records within  //    the last 50 bytes of the file. ScanRange * ScanRange `type:"structure"` // contains filtered or unexported fields }
Request to filter the contents of an Amazon S3 object based on a simple Structured
Query Language (SQL) statement. In the request, along with the SQL expression,
you must specify a data serialization format (JSON or CSV) of the object.
Amazon S3 uses this to parse object data into records. It returns only records
that match the specified SQL expression. You must also specify the data serialization
format for the response. For more information, see S3Select API Documentation
( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectSELECTContent.html ).

func (SelectObjectContentInput) GoString    added in  v1.14.0

func (s SelectObjectContentInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SelectObjectContentInput) SetBucket    added in  v1.14.0

func (s * SelectObjectContentInput ) SetBucket(v string ) * SelectObjectContentInput
SetBucket sets the Bucket field's value.

func (*SelectObjectContentInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * SelectObjectContentInput ) SetExpectedBucketOwner(v string ) * SelectObjectContentInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*SelectObjectContentInput) SetExpression    added in  v1.14.0

func (s * SelectObjectContentInput ) SetExpression(v string ) * SelectObjectContentInput
SetExpression sets the Expression field's value.

func (*SelectObjectContentInput) SetExpressionType    added in  v1.14.0

func (s * SelectObjectContentInput ) SetExpressionType(v string ) * SelectObjectContentInput
SetExpressionType sets the ExpressionType field's value.

func (*SelectObjectContentInput) SetInputSerialization    added in  v1.14.0

func (s * SelectObjectContentInput ) SetInputSerialization(v * InputSerialization ) * SelectObjectContentInput
SetInputSerialization sets the InputSerialization field's value.

func (*SelectObjectContentInput) SetKey    added in  v1.14.0

func (s * SelectObjectContentInput ) SetKey(v string ) * SelectObjectContentInput
SetKey sets the Key field's value.

func (*SelectObjectContentInput) SetOutputSerialization    added in  v1.14.0

func (s * SelectObjectContentInput ) SetOutputSerialization(v * OutputSerialization ) * SelectObjectContentInput
SetOutputSerialization sets the OutputSerialization field's value.

func (*SelectObjectContentInput) SetRequestProgress    added in  v1.14.0

func (s * SelectObjectContentInput ) SetRequestProgress(v * RequestProgress ) * SelectObjectContentInput
SetRequestProgress sets the RequestProgress field's value.

func (*SelectObjectContentInput) SetSSECustomerAlgorithm    added in  v1.14.0

func (s * SelectObjectContentInput ) SetSSECustomerAlgorithm(v string ) * SelectObjectContentInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*SelectObjectContentInput) SetSSECustomerKey    added in  v1.14.0

func (s * SelectObjectContentInput ) SetSSECustomerKey(v string ) * SelectObjectContentInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*SelectObjectContentInput) SetSSECustomerKeyMD5    added in  v1.14.0

func (s * SelectObjectContentInput ) SetSSECustomerKeyMD5(v string ) * SelectObjectContentInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*SelectObjectContentInput) SetScanRange    added in  v1.25.21

func (s * SelectObjectContentInput ) SetScanRange(v * ScanRange ) * SelectObjectContentInput
SetScanRange sets the ScanRange field's value.

func (SelectObjectContentInput) String    added in  v1.14.0

func (s SelectObjectContentInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SelectObjectContentInput) Validate    added in  v1.14.0

func (s * SelectObjectContentInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type SelectObjectContentOutput    added in  v1.14.0
type SelectObjectContentOutput struct { EventStream * SelectObjectContentEventStream   // contains filtered or unexported fields }

func (*SelectObjectContentOutput) GetEventStream    added in  v1.27.0

func (s * SelectObjectContentOutput ) GetEventStream() * SelectObjectContentEventStream

func (*SelectObjectContentOutput) GetStream    added in  v1.27.0

func (s * SelectObjectContentOutput ) GetStream() * SelectObjectContentEventStream
GetStream returns the type to interact with the event stream.

func (SelectObjectContentOutput) GoString    added in  v1.14.0

func (s SelectObjectContentOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SelectObjectContentOutput) SetEventStream    added in  v1.14.0

func (s * SelectObjectContentOutput ) SetEventStream(v * SelectObjectContentEventStream ) * SelectObjectContentOutput

func (SelectObjectContentOutput) String    added in  v1.14.0

func (s SelectObjectContentOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type SelectParameters    added in  v1.12.36
type SelectParameters struct {  // The expression that is used to query the object.   //  // Expression is a required field Expression * string `type:"string" required:"true"`  // The type of the provided expression (for example, SQL).   //  // ExpressionType is a required field ExpressionType * string `type:"string" required:"true" enum:"ExpressionType"`  // Describes the serialization format of the object.   //  // InputSerialization is a required field InputSerialization * InputSerialization `type:"structure" required:"true"`  // Describes how the results of the Select job are serialized.   //  // OutputSerialization is a required field OutputSerialization * OutputSerialization `type:"structure" required:"true"` // contains filtered or unexported fields }
Describes the parameters for Select job types.

func (SelectParameters) GoString    added in  v1.12.36

func (s SelectParameters ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SelectParameters) SetExpression    added in  v1.12.36

func (s * SelectParameters ) SetExpression(v string ) * SelectParameters
SetExpression sets the Expression field's value.

func (*SelectParameters) SetExpressionType    added in  v1.12.36

func (s * SelectParameters ) SetExpressionType(v string ) * SelectParameters
SetExpressionType sets the ExpressionType field's value.

func (*SelectParameters) SetInputSerialization    added in  v1.12.36

func (s * SelectParameters ) SetInputSerialization(v * InputSerialization ) * SelectParameters
SetInputSerialization sets the InputSerialization field's value.

func (*SelectParameters) SetOutputSerialization    added in  v1.12.36

func (s * SelectParameters ) SetOutputSerialization(v * OutputSerialization ) * SelectParameters
SetOutputSerialization sets the OutputSerialization field's value.

func (SelectParameters) String    added in  v1.12.36

func (s SelectParameters ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SelectParameters) Validate    added in  v1.12.36

func (s * SelectParameters ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ServerSideEncryptionByDefault    added in  v1.12.24
type ServerSideEncryptionByDefault struct {  // Amazon Web Services Key Management Service (KMS) customer Amazon Web Services   // KMS key ID to use for the default encryption. This parameter is allowed if  // and only if SSEAlgorithm is set to aws:kms.  //  // You can specify the key ID, key alias, or the Amazon Resource Name (ARN)  // of the KMS key.  //  //    * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab  //  //    * Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab  //  //    * Key Alias: alias/alias-name  //  // If you use a key ID, you can run into a LogDestination undeliverable error  // when creating a VPC flow log.  //  // If you are using encryption with cross-account or Amazon Web Services service  // operations you must use a fully qualified KMS key ARN. For more information,  // see Using encryption for cross-account operations ( https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy ).  //  // Amazon S3 only supports symmetric encryption KMS keys. For more information,  // see Asymmetric keys in Amazon Web Services KMS ( https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html )  // in the Amazon Web Services Key Management Service Developer Guide.  //  // KMSMasterKeyID is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by ServerSideEncryptionByDefault's  // String and GoString methods. KMSMasterKeyID * string `type:"string" sensitive:"true"`  // Server-side encryption algorithm to use for the default encryption.   //  // SSEAlgorithm is a required field SSEAlgorithm * string `type:"string" required:"true" enum:"ServerSideEncryption"` // contains filtered or unexported fields }
Describes the default server-side encryption to apply to new objects in the
bucket. If a PUT Object request doesn't specify any server-side encryption,
this default encryption will be applied. If you don't specify a customer
managed key at configuration, Amazon S3 automatically creates an Amazon Web
Services KMS key in your Amazon Web Services account the first time that
you add an object encrypted with SSE-KMS to a bucket. By default, Amazon
S3 uses this KMS key for SSE-KMS. For more information, see PUT Bucket encryption
( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html )
in the Amazon S3 API Reference.

func (ServerSideEncryptionByDefault) GoString    added in  v1.12.24

func (s ServerSideEncryptionByDefault ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ServerSideEncryptionByDefault) SetKMSMasterKeyID    added in  v1.12.24

func (s * ServerSideEncryptionByDefault ) SetKMSMasterKeyID(v string ) * ServerSideEncryptionByDefault
SetKMSMasterKeyID sets the KMSMasterKeyID field's value.

func (*ServerSideEncryptionByDefault) SetSSEAlgorithm    added in  v1.12.24

func (s * ServerSideEncryptionByDefault ) SetSSEAlgorithm(v string ) * ServerSideEncryptionByDefault
SetSSEAlgorithm sets the SSEAlgorithm field's value.

func (ServerSideEncryptionByDefault) String    added in  v1.12.24

func (s ServerSideEncryptionByDefault ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ServerSideEncryptionByDefault) Validate    added in  v1.12.24

func (s * ServerSideEncryptionByDefault ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ServerSideEncryptionConfiguration    added in  v1.12.24
type ServerSideEncryptionConfiguration struct {  // Container for information about a particular server-side encryption configuration   // rule.  //  // Rules is a required field Rules []* ServerSideEncryptionRule `locationName:"Rule" type:"list" flattened:"true" required:"true"` // contains filtered or unexported fields }
Specifies the default server-side-encryption configuration.

func (ServerSideEncryptionConfiguration) GoString    added in  v1.12.24

func (s ServerSideEncryptionConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ServerSideEncryptionConfiguration) SetRules    added in  v1.12.24

func (s * ServerSideEncryptionConfiguration ) SetRules(v []* ServerSideEncryptionRule ) * ServerSideEncryptionConfiguration
SetRules sets the Rules field's value.

func (ServerSideEncryptionConfiguration) String    added in  v1.12.24

func (s ServerSideEncryptionConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ServerSideEncryptionConfiguration) Validate    added in  v1.12.24

func (s * ServerSideEncryptionConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type ServerSideEncryptionRule    added in  v1.12.24
type ServerSideEncryptionRule struct {  // Specifies the default server-side encryption to apply to new objects in the   // bucket. If a PUT Object request doesn't specify any server-side encryption,  // this default encryption will be applied. ApplyServerSideEncryptionByDefault * ServerSideEncryptionByDefault `type:"structure"`  // Specifies whether Amazon S3 should use an S3 Bucket Key with server-side   // encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects  // are not affected. Setting the BucketKeyEnabled element to true causes Amazon  // S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.  //  // For more information, see Amazon S3 Bucket Keys ( https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html )  // in the Amazon S3 User Guide. BucketKeyEnabled * bool `type:"boolean"` // contains filtered or unexported fields }
Specifies the default server-side encryption configuration.

func (ServerSideEncryptionRule) GoString    added in  v1.12.24

func (s ServerSideEncryptionRule ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ServerSideEncryptionRule) SetApplyServerSideEncryptionByDefault    added in  v1.12.24

func (s * ServerSideEncryptionRule ) SetApplyServerSideEncryptionByDefault(v * ServerSideEncryptionByDefault ) * ServerSideEncryptionRule
SetApplyServerSideEncryptionByDefault sets the ApplyServerSideEncryptionByDefault field's value.

func (*ServerSideEncryptionRule) SetBucketKeyEnabled    added in  v1.35.37

func (s * ServerSideEncryptionRule ) SetBucketKeyEnabled(v bool ) * ServerSideEncryptionRule
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (ServerSideEncryptionRule) String    added in  v1.12.24

func (s ServerSideEncryptionRule ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*ServerSideEncryptionRule) Validate    added in  v1.12.24

func (s * ServerSideEncryptionRule ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type SourceSelectionCriteria    added in  v1.12.24
type SourceSelectionCriteria struct {  // A filter that you can specify for selections for modifications on replicas.   // Amazon S3 doesn't replicate replica modifications by default. In the latest  // version of replication configuration (when Filter is specified), you can  // specify this element and set the status to Enabled to replicate modifications  // on replicas.  //  // If you don't specify the Filter element, Amazon S3 assumes that the replication  // configuration is the earlier version, V1. In the earlier version, this element  // is not allowed ReplicaModifications * ReplicaModifications `type:"structure"`  // A container for filter information for the selection of Amazon S3 objects   // encrypted with Amazon Web Services KMS. If you include SourceSelectionCriteria  // in the replication configuration, this element is required. SseKmsEncryptedObjects * SseKmsEncryptedObjects `type:"structure"` // contains filtered or unexported fields }
A container that describes additional filters for identifying the source
objects that you want to replicate. You can choose to enable or disable the
replication of these objects. Currently, Amazon S3 supports only the filter
that you can specify for objects created with server-side encryption using
a customer managed key stored in Amazon Web Services Key Management Service
(SSE-KMS).

func (SourceSelectionCriteria) GoString    added in  v1.12.24

func (s SourceSelectionCriteria ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SourceSelectionCriteria) SetReplicaModifications    added in  v1.35.37

func (s * SourceSelectionCriteria ) SetReplicaModifications(v * ReplicaModifications ) * SourceSelectionCriteria
SetReplicaModifications sets the ReplicaModifications field's value.

func (*SourceSelectionCriteria) SetSseKmsEncryptedObjects    added in  v1.12.24

func (s * SourceSelectionCriteria ) SetSseKmsEncryptedObjects(v * SseKmsEncryptedObjects ) * SourceSelectionCriteria
SetSseKmsEncryptedObjects sets the SseKmsEncryptedObjects field's value.

func (SourceSelectionCriteria) String    added in  v1.12.24

func (s SourceSelectionCriteria ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SourceSelectionCriteria) Validate    added in  v1.12.24

func (s * SourceSelectionCriteria ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type SseKmsEncryptedObjects    added in  v1.12.24
type SseKmsEncryptedObjects struct {  // Specifies whether Amazon S3 replicates objects created with server-side encryption   // using an Amazon Web Services KMS key stored in Amazon Web Services Key Management  // Service.  //  // Status is a required field Status * string `type:"string" required:"true" enum:"SseKmsEncryptedObjectsStatus"` // contains filtered or unexported fields }
A container for filter information for the selection of S3 objects encrypted
with Amazon Web Services KMS.

func (SseKmsEncryptedObjects) GoString    added in  v1.12.24

func (s SseKmsEncryptedObjects ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SseKmsEncryptedObjects) SetStatus    added in  v1.12.24

func (s * SseKmsEncryptedObjects ) SetStatus(v string ) * SseKmsEncryptedObjects
SetStatus sets the Status field's value.

func (SseKmsEncryptedObjects) String    added in  v1.12.24

func (s SseKmsEncryptedObjects ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*SseKmsEncryptedObjects) Validate    added in  v1.12.24

func (s * SseKmsEncryptedObjects ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type Stats    added in  v1.14.0
type Stats struct {  // The total number of uncompressed object bytes processed.  BytesProcessed * int64 `type:"long"`  // The total number of bytes of records payload data returned.  BytesReturned * int64 `type:"long"`  // The total number of object bytes scanned.  BytesScanned * int64 `type:"long"` // contains filtered or unexported fields }
Container for the stats details.

func (Stats) GoString    added in  v1.14.0

func (s Stats ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Stats) SetBytesProcessed    added in  v1.14.0

func (s * Stats ) SetBytesProcessed(v int64 ) * Stats
SetBytesProcessed sets the BytesProcessed field's value.

func (*Stats) SetBytesReturned    added in  v1.14.0

func (s * Stats ) SetBytesReturned(v int64 ) * Stats
SetBytesReturned sets the BytesReturned field's value.

func (*Stats) SetBytesScanned    added in  v1.14.0

func (s * Stats ) SetBytesScanned(v int64 ) * Stats
SetBytesScanned sets the BytesScanned field's value.

func (Stats) String    added in  v1.14.0

func (s Stats ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type StatsEvent    added in  v1.14.0
type StatsEvent struct {  // The Stats event details.  Details * Stats `locationName:"Details" type:"structure"` // contains filtered or unexported fields }
Container for the Stats Event.

func (StatsEvent) GoString    added in  v1.14.0

func (s StatsEvent ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*StatsEvent) MarshalEvent    added in  v1.27.0

func (s * StatsEvent ) MarshalEvent(pm protocol . PayloadMarshaler ) (msg eventstream . Message , err error )
MarshalEvent marshals the type into an stream event value. This method
should only used internally within the SDK's EventStream handling.

func (*StatsEvent) SetDetails    added in  v1.14.0

func (s * StatsEvent ) SetDetails(v * Stats ) * StatsEvent
SetDetails sets the Details field's value.

func (StatsEvent) String    added in  v1.14.0

func (s StatsEvent ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*StatsEvent) UnmarshalEvent    added in  v1.14.0

func (s * StatsEvent ) UnmarshalEvent(
payloadUnmarshaler protocol . PayloadUnmarshaler ,
msg eventstream . Message ,
) error
UnmarshalEvent unmarshals the EventStream Message into the StatsEvent value.
This method is only used internally within the SDK's EventStream handling.
type StorageClassAnalysis    added in  v1.5.11
type StorageClassAnalysis struct {  // Specifies how data related to the storage class analysis for an Amazon S3   // bucket should be exported. DataExport * StorageClassAnalysisDataExport `type:"structure"` // contains filtered or unexported fields }
Specifies data related to access patterns to be collected and made available
to analyze the tradeoffs between different storage classes for an Amazon
S3 bucket.

func (StorageClassAnalysis) GoString    added in  v1.5.11

func (s StorageClassAnalysis ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*StorageClassAnalysis) SetDataExport    added in  v1.5.11

func (s * StorageClassAnalysis ) SetDataExport(v * StorageClassAnalysisDataExport ) * StorageClassAnalysis
SetDataExport sets the DataExport field's value.

func (StorageClassAnalysis) String    added in  v1.5.11

func (s StorageClassAnalysis ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*StorageClassAnalysis) Validate    added in  v1.5.11

func (s * StorageClassAnalysis ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type StorageClassAnalysisDataExport    added in  v1.5.11
type StorageClassAnalysisDataExport struct {  // The place to store the data for an analysis.   //  // Destination is a required field Destination * AnalyticsExportDestination `type:"structure" required:"true"`  // The version of the output schema to use when exporting data. Must be V_1.   //  // OutputSchemaVersion is a required field OutputSchemaVersion * string `type:"string" required:"true" enum:"StorageClassAnalysisSchemaVersion"` // contains filtered or unexported fields }
Container for data related to the storage class analysis for an Amazon S3
bucket for export.

func (StorageClassAnalysisDataExport) GoString    added in  v1.5.11

func (s StorageClassAnalysisDataExport ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*StorageClassAnalysisDataExport) SetDestination    added in  v1.5.11

func (s * StorageClassAnalysisDataExport ) SetDestination(v * AnalyticsExportDestination ) * StorageClassAnalysisDataExport
SetDestination sets the Destination field's value.

func (*StorageClassAnalysisDataExport) SetOutputSchemaVersion    added in  v1.5.11

func (s * StorageClassAnalysisDataExport ) SetOutputSchemaVersion(v string ) * StorageClassAnalysisDataExport
SetOutputSchemaVersion sets the OutputSchemaVersion field's value.

func (StorageClassAnalysisDataExport) String    added in  v1.5.11

func (s StorageClassAnalysisDataExport ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*StorageClassAnalysisDataExport) Validate    added in  v1.5.11

func (s * StorageClassAnalysisDataExport ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type Tag
type Tag struct {  // Name of the object key.   //  // Key is a required field Key * string `min:"1" type:"string" required:"true"`  // Value of the tag.   //  // Value is a required field Value * string `type:"string" required:"true"` // contains filtered or unexported fields }
A container of a key value name pair.

func (Tag) GoString    added in  v0.6.5

func (s Tag ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Tag) SetKey    added in  v1.5.0

func (s * Tag ) SetKey(v string ) * Tag
SetKey sets the Key field's value.

func (*Tag) SetValue    added in  v1.5.0

func (s * Tag ) SetValue(v string ) * Tag
SetValue sets the Value field's value.

func (Tag) String    added in  v0.6.5

func (s Tag ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Tag) Validate    added in  v1.1.21

func (s * Tag ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type Tagging
type Tagging struct {  // A collection for a set of tags   //  // TagSet is a required field TagSet []* Tag `locationNameList:"Tag" type:"list" required:"true"` // contains filtered or unexported fields }
Container for TagSet elements.

func (Tagging) GoString    added in  v0.6.5

func (s Tagging ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Tagging) SetTagSet    added in  v1.5.0

func (s * Tagging ) SetTagSet(v []* Tag ) * Tagging
SetTagSet sets the TagSet field's value.

func (Tagging) String    added in  v0.6.5

func (s Tagging ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Tagging) Validate    added in  v1.1.21

func (s * Tagging ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type TargetGrant
type TargetGrant struct {  // Container for the person being granted permissions.  Grantee * Grantee `type:"structure" xmlPrefix:"xsi" xmlURI:"http://www.w3.org/2001/XMLSchema-instance"`  // Logging permissions assigned to the grantee for the bucket.  Permission * string `type:"string" enum:"BucketLogsPermission"` // contains filtered or unexported fields }
Container for granting information.
Buckets that use the bucket owner enforced setting for Object Ownership don't
support target grants. For more information, see Permissions server access
log delivery ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html#grant-log-delivery-permissions-general )
in the Amazon S3 User Guide.

func (TargetGrant) GoString    added in  v0.6.5

func (s TargetGrant ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*TargetGrant) SetGrantee    added in  v1.5.0

func (s * TargetGrant ) SetGrantee(v * Grantee ) * TargetGrant
SetGrantee sets the Grantee field's value.

func (*TargetGrant) SetPermission    added in  v1.5.0

func (s * TargetGrant ) SetPermission(v string ) * TargetGrant
SetPermission sets the Permission field's value.

func (TargetGrant) String    added in  v0.6.5

func (s TargetGrant ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*TargetGrant) Validate    added in  v1.1.21

func (s * TargetGrant ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type Tiering    added in  v1.35.24
type Tiering struct {  // S3 Intelligent-Tiering access tier. See Storage class for automatically optimizing   // frequently and infrequently accessed objects ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access )  // for a list of access tiers in the S3 Intelligent-Tiering storage class.  //  // AccessTier is a required field AccessTier * string `type:"string" required:"true" enum:"IntelligentTieringAccessTier"`  // The number of consecutive days of no access after which an object will be   // eligible to be transitioned to the corresponding tier. The minimum number  // of days specified for Archive Access tier must be at least 90 days and Deep  // Archive Access tier must be at least 180 days. The maximum can be up to 2  // years (730 days).  //  // Days is a required field Days * int64 `type:"integer" required:"true"` // contains filtered or unexported fields }
The S3 Intelligent-Tiering storage class is designed to optimize storage
costs by automatically moving data to the most cost-effective storage access
tier, without additional operational overhead.

func (Tiering) GoString    added in  v1.35.24

func (s Tiering ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Tiering) SetAccessTier    added in  v1.35.24

func (s * Tiering ) SetAccessTier(v string ) * Tiering
SetAccessTier sets the AccessTier field's value.

func (*Tiering) SetDays    added in  v1.35.24

func (s * Tiering ) SetDays(v int64 ) * Tiering
SetDays sets the Days field's value.

func (Tiering) String    added in  v1.35.24

func (s Tiering ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Tiering) Validate    added in  v1.35.24

func (s * Tiering ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type TopicConfiguration
type TopicConfiguration struct {  // The Amazon S3 bucket event about which to send notifications. For more information,   // see Supported Event Types ( https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html )  // in the Amazon S3 User Guide.  //  // Events is a required field Events []* string `locationName:"Event" type:"list" flattened:"true" required:"true" enum:"Event"`  // Specifies object key name filtering rules. For information about key name   // filtering, see Configuring event notifications using object key name filtering  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html )  // in the Amazon S3 User Guide. Filter * NotificationConfigurationFilter `type:"structure"`  // An optional unique identifier for configurations in a notification configuration.   // If you don't provide one, Amazon S3 will assign an ID. Id * string `type:"string"`  // The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3   // publishes a message when it detects events of the specified type.  //  // TopicArn is a required field TopicArn * string `locationName:"Topic" type:"string" required:"true"` // contains filtered or unexported fields }
A container for specifying the configuration for publication of messages
to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3
detects specified events.

func (TopicConfiguration) GoString    added in  v0.6.5

func (s TopicConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*TopicConfiguration) SetEvents    added in  v1.5.0

func (s * TopicConfiguration ) SetEvents(v []* string ) * TopicConfiguration
SetEvents sets the Events field's value.

func (*TopicConfiguration) SetFilter    added in  v1.5.0

func (s * TopicConfiguration ) SetFilter(v * NotificationConfigurationFilter ) * TopicConfiguration
SetFilter sets the Filter field's value.

func (*TopicConfiguration) SetId    added in  v1.5.0

func (s * TopicConfiguration ) SetId(v string ) * TopicConfiguration
SetId sets the Id field's value.

func (*TopicConfiguration) SetTopicArn    added in  v1.5.0

func (s * TopicConfiguration ) SetTopicArn(v string ) * TopicConfiguration
SetTopicArn sets the TopicArn field's value.

func (TopicConfiguration) String    added in  v0.6.5

func (s TopicConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*TopicConfiguration) Validate    added in  v1.1.21

func (s * TopicConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type TopicConfigurationDeprecated
type TopicConfigurationDeprecated struct {  // Bucket event for which to send notifications.   //  // Deprecated: Event has been deprecated Event * string `deprecated:"true" type:"string" enum:"Event"`  // A collection of events related to objects  Events []* string `locationName:"Event" type:"list" flattened:"true" enum:"Event"`  // An optional unique identifier for configurations in a notification configuration.   // If you don't provide one, Amazon S3 will assign an ID. Id * string `type:"string"`  // Amazon SNS topic to which Amazon S3 will publish a message to report the   // specified events for the bucket. Topic * string `type:"string"` // contains filtered or unexported fields }
A container for specifying the configuration for publication of messages
to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3
detects specified events. This data type is deprecated. Use TopicConfiguration
( https://docs.aws.amazon.com/AmazonS3/latest/API/API_TopicConfiguration.html )
instead.

func (TopicConfigurationDeprecated) GoString    added in  v0.6.5

func (s TopicConfigurationDeprecated ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*TopicConfigurationDeprecated) SetEvent    added in  v1.5.0

func (s * TopicConfigurationDeprecated ) SetEvent(v string ) * TopicConfigurationDeprecated
SetEvent sets the Event field's value.

func (*TopicConfigurationDeprecated) SetEvents    added in  v1.5.0

func (s * TopicConfigurationDeprecated ) SetEvents(v []* string ) * TopicConfigurationDeprecated
SetEvents sets the Events field's value.

func (*TopicConfigurationDeprecated) SetId    added in  v1.5.0

func (s * TopicConfigurationDeprecated ) SetId(v string ) * TopicConfigurationDeprecated
SetId sets the Id field's value.

func (*TopicConfigurationDeprecated) SetTopic    added in  v1.5.0

func (s * TopicConfigurationDeprecated ) SetTopic(v string ) * TopicConfigurationDeprecated
SetTopic sets the Topic field's value.

func (TopicConfigurationDeprecated) String    added in  v0.6.5

func (s TopicConfigurationDeprecated ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type Transition
type Transition struct {  // Indicates when objects are transitioned to the specified storage class. The   // date value must be in ISO 8601 format. The time is always midnight UTC. Date * time . Time `type:"timestamp" timestampFormat:"iso8601"`  // Indicates the number of days after creation when objects are transitioned   // to the specified storage class. The value must be a positive integer. Days * int64 `type:"integer"`  // The storage class to which you want the object to transition.  StorageClass * string `type:"string" enum:"TransitionStorageClass"` // contains filtered or unexported fields }
Specifies when an object transitions to a specified storage class. For more
information about Amazon S3 lifecycle configuration rules, see Transitioning
Objects Using Amazon S3 Lifecycle ( https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html )
in the Amazon S3 User Guide.

func (Transition) GoString    added in  v0.6.5

func (s Transition ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*Transition) SetDate    added in  v1.5.0

func (s * Transition ) SetDate(v time . Time ) * Transition
SetDate sets the Date field's value.

func (*Transition) SetDays    added in  v1.5.0

func (s * Transition ) SetDays(v int64 ) * Transition
SetDays sets the Days field's value.

func (*Transition) SetStorageClass    added in  v1.5.0

func (s * Transition ) SetStorageClass(v string ) * Transition
SetStorageClass sets the StorageClass field's value.

func (Transition) String    added in  v0.6.5

func (s Transition ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type UploadPartCopyInput
type UploadPartCopyInput struct {  // The bucket name.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Specifies the source object for the copy operation. You specify the value   // in one of two formats, depending on whether you want to access the source  // object through an access point ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html ):  //  //    * For objects not accessed through an access point, specify the name of  //    the source bucket and key of the source object, separated by a slash (/).  //    For example, to copy the object reports/january.pdf from the bucket awsexamplebucket,  //    use awsexamplebucket/reports/january.pdf. The value must be URL-encoded.  //  //    * For objects accessed through access points, specify the Amazon Resource  //    Name (ARN) of the object as accessed through the access point, in the  //    format arn:aws:s3:<Region>:<account-id>:accesspoint/<access-point-name>/object/<key>.  //    For example, to copy the object reports/january.pdf through access point  //    my-access-point owned by account 123456789012 in Region us-west-2, use  //    the URL encoding of arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf.  //    The value must be URL encoded. Amazon S3 supports copy operations using  //    access points only when the source and destination buckets are in the  //    same Amazon Web Services Region. Alternatively, for objects accessed through  //    Amazon S3 on Outposts, specify the ARN of the object as accessed in the  //    format arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/object/<key>.  //    For example, to copy the object reports/january.pdf through outpost my-outpost  //    owned by account 123456789012 in Region us-west-2, use the URL encoding  //    of arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf.  //    The value must be URL-encoded.  //  // To copy a specific version of an object, append ?versionId=<version-id> to  // the value (for example, awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893).  // If you don't specify a version ID, Amazon S3 copies the latest version of  // the source object.  //  // CopySource is a required field CopySource * string `location:"header" locationName:"x-amz-copy-source" type:"string" required:"true"`  // Copies the object if its entity tag (ETag) matches the specified tag.  CopySourceIfMatch * string `location:"header" locationName:"x-amz-copy-source-if-match" type:"string"`  // Copies the object if it has been modified since the specified time.  CopySourceIfModifiedSince * time . Time `location:"header" locationName:"x-amz-copy-source-if-modified-since" type:"timestamp"`  // Copies the object if its entity tag (ETag) is different than the specified   // ETag. CopySourceIfNoneMatch * string `location:"header" locationName:"x-amz-copy-source-if-none-match" type:"string"`  // Copies the object if it hasn't been modified since the specified time.  CopySourceIfUnmodifiedSince * time . Time `location:"header" locationName:"x-amz-copy-source-if-unmodified-since" type:"timestamp"`  // The range of bytes to copy from the source object. The range value must use   // the form bytes=first-last, where the first and last are the zero-based byte  // offsets to copy. For example, bytes=0-9 indicates that you want to copy the  // first 10 bytes of the source. You can copy a range only if the source object  // is greater than 5 MB. CopySourceRange * string `location:"header" locationName:"x-amz-copy-source-range" type:"string"`  // Specifies the algorithm to use when decrypting the source object (for example,   // AES256). CopySourceSSECustomerAlgorithm * string `location:"header" locationName:"x-amz-copy-source-server-side-encryption-customer-algorithm" type:"string"`  // Specifies the customer-provided encryption key for Amazon S3 to use to decrypt   // the source object. The encryption key provided in this header must be one  // that was used when the source object was created.  //  // CopySourceSSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by UploadPartCopyInput's  // String and GoString methods. CopySourceSSECustomerKey * string `` /* 135-byte string literal not displayed */   // Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321 .   // Amazon S3 uses this header for a message integrity check to ensure that the  // encryption key was transmitted without error. CopySourceSSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-copy-source-server-side-encryption-customer-key-MD5" type:"string"`  // The account ID of the expected destination bucket owner. If the destination   // bucket is owned by a different account, the request fails with the HTTP status  // code 403 Forbidden (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // The account ID of the expected source bucket owner. If the source bucket   // is owned by a different account, the request fails with the HTTP status code  // 403 Forbidden (access denied). ExpectedSourceBucketOwner * string `location:"header" locationName:"x-amz-source-expected-bucket-owner" type:"string"`  // Object key for which the multipart upload was initiated.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Part number of part being copied. This is a positive integer between 1 and   // 10,000.  //  // PartNumber is a required field PartNumber * int64 `location:"querystring" locationName:"partNumber" type:"integer" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Specifies the algorithm to use to when encrypting the object (for example,   // AES256). SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // Specifies the customer-provided encryption key for Amazon S3 to use in encrypting   // data. This value is used to store the object and then it is discarded; Amazon  // S3 does not store the encryption key. The key must be appropriate for use  // with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm  // header. This must be the same encryption key specified in the initiate multipart  // upload request.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by UploadPartCopyInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321 .   // Amazon S3 uses this header for a message integrity check to ensure that the  // encryption key was transmitted without error. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // Upload ID identifying the multipart upload whose part is being copied.   //  // UploadId is a required field UploadId * string `location:"querystring" locationName:"uploadId" type:"string" required:"true"` // contains filtered or unexported fields }

func (UploadPartCopyInput) GoString    added in  v0.6.5

func (s UploadPartCopyInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*UploadPartCopyInput) SetBucket    added in  v1.5.0

func (s * UploadPartCopyInput ) SetBucket(v string ) * UploadPartCopyInput
SetBucket sets the Bucket field's value.

func (*UploadPartCopyInput) SetCopySource    added in  v1.5.0

func (s * UploadPartCopyInput ) SetCopySource(v string ) * UploadPartCopyInput
SetCopySource sets the CopySource field's value.

func (*UploadPartCopyInput) SetCopySourceIfMatch    added in  v1.5.0

func (s * UploadPartCopyInput ) SetCopySourceIfMatch(v string ) * UploadPartCopyInput
SetCopySourceIfMatch sets the CopySourceIfMatch field's value.

func (*UploadPartCopyInput) SetCopySourceIfModifiedSince    added in  v1.5.0

func (s * UploadPartCopyInput ) SetCopySourceIfModifiedSince(v time . Time ) * UploadPartCopyInput
SetCopySourceIfModifiedSince sets the CopySourceIfModifiedSince field's value.

func (*UploadPartCopyInput) SetCopySourceIfNoneMatch    added in  v1.5.0

func (s * UploadPartCopyInput ) SetCopySourceIfNoneMatch(v string ) * UploadPartCopyInput
SetCopySourceIfNoneMatch sets the CopySourceIfNoneMatch field's value.

func (*UploadPartCopyInput) SetCopySourceIfUnmodifiedSince    added in  v1.5.0

func (s * UploadPartCopyInput ) SetCopySourceIfUnmodifiedSince(v time . Time ) * UploadPartCopyInput
SetCopySourceIfUnmodifiedSince sets the CopySourceIfUnmodifiedSince field's value.

func (*UploadPartCopyInput) SetCopySourceRange    added in  v1.5.0

func (s * UploadPartCopyInput ) SetCopySourceRange(v string ) * UploadPartCopyInput
SetCopySourceRange sets the CopySourceRange field's value.

func (*UploadPartCopyInput) SetCopySourceSSECustomerAlgorithm    added in  v1.5.0

func (s * UploadPartCopyInput ) SetCopySourceSSECustomerAlgorithm(v string ) * UploadPartCopyInput
SetCopySourceSSECustomerAlgorithm sets the CopySourceSSECustomerAlgorithm field's value.

func (*UploadPartCopyInput) SetCopySourceSSECustomerKey    added in  v1.5.0

func (s * UploadPartCopyInput ) SetCopySourceSSECustomerKey(v string ) * UploadPartCopyInput
SetCopySourceSSECustomerKey sets the CopySourceSSECustomerKey field's value.

func (*UploadPartCopyInput) SetCopySourceSSECustomerKeyMD5    added in  v1.5.0

func (s * UploadPartCopyInput ) SetCopySourceSSECustomerKeyMD5(v string ) * UploadPartCopyInput
SetCopySourceSSECustomerKeyMD5 sets the CopySourceSSECustomerKeyMD5 field's value.

func (*UploadPartCopyInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * UploadPartCopyInput ) SetExpectedBucketOwner(v string ) * UploadPartCopyInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*UploadPartCopyInput) SetExpectedSourceBucketOwner    added in  v1.34.21

func (s * UploadPartCopyInput ) SetExpectedSourceBucketOwner(v string ) * UploadPartCopyInput
SetExpectedSourceBucketOwner sets the ExpectedSourceBucketOwner field's value.

func (*UploadPartCopyInput) SetKey    added in  v1.5.0

func (s * UploadPartCopyInput ) SetKey(v string ) * UploadPartCopyInput
SetKey sets the Key field's value.

func (*UploadPartCopyInput) SetPartNumber    added in  v1.5.0

func (s * UploadPartCopyInput ) SetPartNumber(v int64 ) * UploadPartCopyInput
SetPartNumber sets the PartNumber field's value.

func (*UploadPartCopyInput) SetRequestPayer    added in  v1.5.0

func (s * UploadPartCopyInput ) SetRequestPayer(v string ) * UploadPartCopyInput
SetRequestPayer sets the RequestPayer field's value.

func (*UploadPartCopyInput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * UploadPartCopyInput ) SetSSECustomerAlgorithm(v string ) * UploadPartCopyInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*UploadPartCopyInput) SetSSECustomerKey    added in  v1.5.0

func (s * UploadPartCopyInput ) SetSSECustomerKey(v string ) * UploadPartCopyInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*UploadPartCopyInput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * UploadPartCopyInput ) SetSSECustomerKeyMD5(v string ) * UploadPartCopyInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*UploadPartCopyInput) SetUploadId    added in  v1.5.0

func (s * UploadPartCopyInput ) SetUploadId(v string ) * UploadPartCopyInput
SetUploadId sets the UploadId field's value.

func (UploadPartCopyInput) String    added in  v0.6.5

func (s UploadPartCopyInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*UploadPartCopyInput) Validate    added in  v1.1.21

func (s * UploadPartCopyInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type UploadPartCopyOutput
type UploadPartCopyOutput struct {  // Indicates whether the multipart upload uses an S3 Bucket Key for server-side   // encryption with Key Management Service (KMS) keys (SSE-KMS). BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // Container for all response elements.  CopyPartResult * CopyPartResult `type:"structure"`  // The version of the source object that was copied, if you have enabled versioning   // on the source bucket. CopySourceVersionId * string `location:"header" locationName:"x-amz-copy-source-version-id" type:"string"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header confirming the encryption algorithm  // used. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header to provide round-trip message integrity  // verification of the customer-provided encryption key. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // If present, specifies the ID of the Key Management Service (KMS) symmetric   // encryption customer managed key that was used for the object.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by UploadPartCopyOutput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"` // contains filtered or unexported fields }

func (UploadPartCopyOutput) GoString    added in  v0.6.5

func (s UploadPartCopyOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*UploadPartCopyOutput) SetBucketKeyEnabled    added in  v1.35.37

func (s * UploadPartCopyOutput ) SetBucketKeyEnabled(v bool ) * UploadPartCopyOutput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*UploadPartCopyOutput) SetCopyPartResult    added in  v1.5.0

func (s * UploadPartCopyOutput ) SetCopyPartResult(v * CopyPartResult ) * UploadPartCopyOutput
SetCopyPartResult sets the CopyPartResult field's value.

func (*UploadPartCopyOutput) SetCopySourceVersionId    added in  v1.5.0

func (s * UploadPartCopyOutput ) SetCopySourceVersionId(v string ) * UploadPartCopyOutput
SetCopySourceVersionId sets the CopySourceVersionId field's value.

func (*UploadPartCopyOutput) SetRequestCharged    added in  v1.5.0

func (s * UploadPartCopyOutput ) SetRequestCharged(v string ) * UploadPartCopyOutput
SetRequestCharged sets the RequestCharged field's value.

func (*UploadPartCopyOutput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * UploadPartCopyOutput ) SetSSECustomerAlgorithm(v string ) * UploadPartCopyOutput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*UploadPartCopyOutput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * UploadPartCopyOutput ) SetSSECustomerKeyMD5(v string ) * UploadPartCopyOutput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*UploadPartCopyOutput) SetSSEKMSKeyId    added in  v1.5.0

func (s * UploadPartCopyOutput ) SetSSEKMSKeyId(v string ) * UploadPartCopyOutput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*UploadPartCopyOutput) SetServerSideEncryption    added in  v1.5.0

func (s * UploadPartCopyOutput ) SetServerSideEncryption(v string ) * UploadPartCopyOutput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (UploadPartCopyOutput) String    added in  v0.6.5

func (s UploadPartCopyOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type UploadPartInput
type UploadPartInput struct {  // Object data.  Body io . ReadSeeker `type:"blob"`  // The name of the bucket to which the multipart upload was initiated.   //  // When using this action with an access point, you must direct requests to  // the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com.  // When using this action with an access point through the Amazon Web Services  // SDKs, you provide the access point ARN in place of the bucket name. For more  // information about access point ARNs, see Using access points ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html )  // in the Amazon S3 User Guide.  //  // When you use this action with Amazon S3 on Outposts, you must direct requests  // to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  // AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When  // you use this action with S3 on Outposts through the Amazon Web Services SDKs,  // you provide the Outposts access point ARN in place of the bucket name. For  // more information about S3 on Outposts ARNs, see What is S3 on Outposts? ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html )  // in the Amazon S3 User Guide.  //  // Bucket is a required field Bucket * string `location:"uri" locationName:"Bucket" type:"string" required:"true"`  // Indicates the algorithm used to create the checksum for the object when using   // the SDK. This header will not provide any additional functionality if not  // using the SDK. When sending this header, there must be a corresponding x-amz-checksum  // or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with  // the HTTP status code 400 Bad Request. For more information, see Checking  // object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm  // parameter.  //  // This checksum algorithm must be the same for all parts and it match the checksum  // value supplied in the CreateMultipartUpload request.  //  // The AWS SDK for Go v1 does not support automatic computing request payload  // checksum. This feature is available in the AWS SDK for Go v2. If a value  // is specified for this parameter, the matching algorithm's checksum member  // must be populated with the algorithm's checksum of the request payload. ChecksumAlgorithm * string `location:"header" locationName:"x-amz-sdk-checksum-algorithm" type:"string" enum:"ChecksumAlgorithm"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 32-bit CRC32 checksum of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `location:"header" locationName:"x-amz-checksum-crc32" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 32-bit CRC32C checksum of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `location:"header" locationName:"x-amz-checksum-crc32c" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 160-bit SHA-1 digest of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `location:"header" locationName:"x-amz-checksum-sha1" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This header specifies  // the base64-encoded, 256-bit SHA-256 digest of the object. For more information,  // see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `location:"header" locationName:"x-amz-checksum-sha256" type:"string"`  // Size of the body in bytes. This parameter is useful when the size of the   // body cannot be determined automatically. ContentLength * int64 `location:"header" locationName:"Content-Length" type:"long"`  // The base64-encoded 128-bit MD5 digest of the part data. This parameter is   // auto-populated when using the command from the CLI. This parameter is required  // if object lock parameters are specified. ContentMD5 * string `location:"header" locationName:"Content-MD5" type:"string"`  // The account ID of the expected bucket owner. If the bucket is owned by a   // different account, the request fails with the HTTP status code 403 Forbidden  // (access denied). ExpectedBucketOwner * string `location:"header" locationName:"x-amz-expected-bucket-owner" type:"string"`  // Object key for which the multipart upload was initiated.   //  // Key is a required field Key * string `location:"uri" locationName:"Key" min:"1" type:"string" required:"true"`  // Part number of part being uploaded. This is a positive integer between 1   // and 10,000.  //  // PartNumber is a required field PartNumber * int64 `location:"querystring" locationName:"partNumber" type:"integer" required:"true"`  // Confirms that the requester knows that they will be charged for the request.   // Bucket owners need not specify this parameter in their requests. If either  // the source or destination Amazon S3 bucket has Requester Pays enabled, the  // requester will pay for corresponding charges to copy the object. For information  // about downloading objects from Requester Pays buckets, see Downloading Objects  // in Requester Pays Buckets ( https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html )  // in the Amazon S3 User Guide. RequestPayer * string `location:"header" locationName:"x-amz-request-payer" type:"string" enum:"RequestPayer"`  // Specifies the algorithm to use to when encrypting the object (for example,   // AES256). SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // Specifies the customer-provided encryption key for Amazon S3 to use in encrypting   // data. This value is used to store the object and then it is discarded; Amazon  // S3 does not store the encryption key. The key must be appropriate for use  // with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm  // header. This must be the same encryption key specified in the initiate multipart  // upload request.  //  // SSECustomerKey is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by UploadPartInput's  // String and GoString methods. SSECustomerKey * string `marshal-as:"blob" location:"header" locationName:"x-amz-server-side-encryption-customer-key" type:"string" sensitive:"true"`  // Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321 .   // Amazon S3 uses this header for a message integrity check to ensure that the  // encryption key was transmitted without error. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // Upload ID identifying the multipart upload whose part is being uploaded.   //  // UploadId is a required field UploadId * string `location:"querystring" locationName:"uploadId" type:"string" required:"true"` // contains filtered or unexported fields }

func (UploadPartInput) GoString    added in  v0.6.5

func (s UploadPartInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*UploadPartInput) SetBody    added in  v1.5.0

func (s * UploadPartInput ) SetBody(v io . ReadSeeker ) * UploadPartInput
SetBody sets the Body field's value.

func (*UploadPartInput) SetBucket    added in  v1.5.0

func (s * UploadPartInput ) SetBucket(v string ) * UploadPartInput
SetBucket sets the Bucket field's value.

func (*UploadPartInput) SetChecksumAlgorithm    added in  v1.43.6

func (s * UploadPartInput ) SetChecksumAlgorithm(v string ) * UploadPartInput
SetChecksumAlgorithm sets the ChecksumAlgorithm field's value.

func (*UploadPartInput) SetChecksumCRC32    added in  v1.43.6

func (s * UploadPartInput ) SetChecksumCRC32(v string ) * UploadPartInput
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*UploadPartInput) SetChecksumCRC32C    added in  v1.43.6

func (s * UploadPartInput ) SetChecksumCRC32C(v string ) * UploadPartInput
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*UploadPartInput) SetChecksumSHA1    added in  v1.43.6

func (s * UploadPartInput ) SetChecksumSHA1(v string ) * UploadPartInput
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*UploadPartInput) SetChecksumSHA256    added in  v1.43.6

func (s * UploadPartInput ) SetChecksumSHA256(v string ) * UploadPartInput
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*UploadPartInput) SetContentLength    added in  v1.5.0

func (s * UploadPartInput ) SetContentLength(v int64 ) * UploadPartInput
SetContentLength sets the ContentLength field's value.

func (*UploadPartInput) SetContentMD5    added in  v1.12.2

func (s * UploadPartInput ) SetContentMD5(v string ) * UploadPartInput
SetContentMD5 sets the ContentMD5 field's value.

func (*UploadPartInput) SetExpectedBucketOwner    added in  v1.34.21

func (s * UploadPartInput ) SetExpectedBucketOwner(v string ) * UploadPartInput
SetExpectedBucketOwner sets the ExpectedBucketOwner field's value.

func (*UploadPartInput) SetKey    added in  v1.5.0

func (s * UploadPartInput ) SetKey(v string ) * UploadPartInput
SetKey sets the Key field's value.

func (*UploadPartInput) SetPartNumber    added in  v1.5.0

func (s * UploadPartInput ) SetPartNumber(v int64 ) * UploadPartInput
SetPartNumber sets the PartNumber field's value.

func (*UploadPartInput) SetRequestPayer    added in  v1.5.0

func (s * UploadPartInput ) SetRequestPayer(v string ) * UploadPartInput
SetRequestPayer sets the RequestPayer field's value.

func (*UploadPartInput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * UploadPartInput ) SetSSECustomerAlgorithm(v string ) * UploadPartInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*UploadPartInput) SetSSECustomerKey    added in  v1.5.0

func (s * UploadPartInput ) SetSSECustomerKey(v string ) * UploadPartInput
SetSSECustomerKey sets the SSECustomerKey field's value.

func (*UploadPartInput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * UploadPartInput ) SetSSECustomerKeyMD5(v string ) * UploadPartInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*UploadPartInput) SetUploadId    added in  v1.5.0

func (s * UploadPartInput ) SetUploadId(v string ) * UploadPartInput
SetUploadId sets the UploadId field's value.

func (UploadPartInput) String    added in  v0.6.5

func (s UploadPartInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*UploadPartInput) Validate    added in  v1.1.21

func (s * UploadPartInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type UploadPartOutput
type UploadPartOutput struct {  // Indicates whether the multipart upload uses an S3 Bucket Key for server-side   // encryption with Key Management Service (KMS) keys (SSE-KMS). BucketKeyEnabled * bool `location:"header" locationName:"x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // The base64-encoded, 32-bit CRC32 checksum of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32 * string `location:"header" locationName:"x-amz-checksum-crc32" type:"string"`  // The base64-encoded, 32-bit CRC32C checksum of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumCRC32C * string `location:"header" locationName:"x-amz-checksum-crc32c" type:"string"`  // The base64-encoded, 160-bit SHA-1 digest of the object. This will only be   // present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA1 * string `location:"header" locationName:"x-amz-checksum-sha1" type:"string"`  // The base64-encoded, 256-bit SHA-256 digest of the object. This will only   // be present if it was uploaded with the object. With multipart uploads, this  // may not be a checksum value of the object. For more information about how  // checksums are calculated with multipart uploads, see Checking object integrity  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums )  // in the Amazon S3 User Guide. ChecksumSHA256 * string `location:"header" locationName:"x-amz-checksum-sha256" type:"string"`  // Entity tag for the uploaded object.  ETag * string `location:"header" locationName:"ETag" type:"string"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-request-charged" type:"string" enum:"RequestCharged"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header confirming the encryption algorithm  // used. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-server-side-encryption-customer-algorithm" type:"string"`  // If server-side encryption with a customer-provided encryption key was requested,   // the response will include this header to provide round-trip message integrity  // verification of the customer-provided encryption key. SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // If present, specifies the ID of the Key Management Service (KMS) symmetric   // encryption customer managed key was used for the object.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by UploadPartOutput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing this object in Amazon   // S3 (for example, AES256, aws:kms). ServerSideEncryption * string `location:"header" locationName:"x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"` // contains filtered or unexported fields }

func (UploadPartOutput) GoString    added in  v0.6.5

func (s UploadPartOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*UploadPartOutput) SetBucketKeyEnabled    added in  v1.35.37

func (s * UploadPartOutput ) SetBucketKeyEnabled(v bool ) * UploadPartOutput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*UploadPartOutput) SetChecksumCRC32    added in  v1.43.6

func (s * UploadPartOutput ) SetChecksumCRC32(v string ) * UploadPartOutput
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*UploadPartOutput) SetChecksumCRC32C    added in  v1.43.6

func (s * UploadPartOutput ) SetChecksumCRC32C(v string ) * UploadPartOutput
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*UploadPartOutput) SetChecksumSHA1    added in  v1.43.6

func (s * UploadPartOutput ) SetChecksumSHA1(v string ) * UploadPartOutput
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*UploadPartOutput) SetChecksumSHA256    added in  v1.43.6

func (s * UploadPartOutput ) SetChecksumSHA256(v string ) * UploadPartOutput
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*UploadPartOutput) SetETag    added in  v1.5.0

func (s * UploadPartOutput ) SetETag(v string ) * UploadPartOutput
SetETag sets the ETag field's value.

func (*UploadPartOutput) SetRequestCharged    added in  v1.5.0

func (s * UploadPartOutput ) SetRequestCharged(v string ) * UploadPartOutput
SetRequestCharged sets the RequestCharged field's value.

func (*UploadPartOutput) SetSSECustomerAlgorithm    added in  v1.5.0

func (s * UploadPartOutput ) SetSSECustomerAlgorithm(v string ) * UploadPartOutput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*UploadPartOutput) SetSSECustomerKeyMD5    added in  v1.5.0

func (s * UploadPartOutput ) SetSSECustomerKeyMD5(v string ) * UploadPartOutput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*UploadPartOutput) SetSSEKMSKeyId    added in  v1.5.0

func (s * UploadPartOutput ) SetSSEKMSKeyId(v string ) * UploadPartOutput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*UploadPartOutput) SetServerSideEncryption    added in  v1.5.0

func (s * UploadPartOutput ) SetServerSideEncryption(v string ) * UploadPartOutput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (UploadPartOutput) String    added in  v0.6.5

func (s UploadPartOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type VersioningConfiguration
type VersioningConfiguration struct {  // Specifies whether MFA delete is enabled in the bucket versioning configuration.   // This element is only returned if the bucket has been configured with MFA  // delete. If the bucket has never been so configured, this element is not returned. MFADelete * string `locationName:"MfaDelete" type:"string" enum:"MFADelete"`  // The versioning state of the bucket.  Status * string `type:"string" enum:"BucketVersioningStatus"` // contains filtered or unexported fields }
Describes the versioning state of an Amazon S3 bucket. For more information,
see PUT Bucket versioning ( https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html )
in the Amazon S3 API Reference.

func (VersioningConfiguration) GoString    added in  v0.6.5

func (s VersioningConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*VersioningConfiguration) SetMFADelete    added in  v1.5.0

func (s * VersioningConfiguration ) SetMFADelete(v string ) * VersioningConfiguration
SetMFADelete sets the MFADelete field's value.

func (*VersioningConfiguration) SetStatus    added in  v1.5.0

func (s * VersioningConfiguration ) SetStatus(v string ) * VersioningConfiguration
SetStatus sets the Status field's value.

func (VersioningConfiguration) String    added in  v0.6.5

func (s VersioningConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
type WebsiteConfiguration
type WebsiteConfiguration struct {  // The name of the error document for the website.  ErrorDocument * ErrorDocument `type:"structure"`  // The name of the index document for the website.  IndexDocument * IndexDocument `type:"structure"`  // The redirect behavior for every request to this bucket's website endpoint.   //  // If you specify this property, you can't specify any other property. RedirectAllRequestsTo * RedirectAllRequestsTo `type:"structure"`  // Rules that define when a redirect is applied and the redirect behavior.  RoutingRules []* RoutingRule `locationNameList:"RoutingRule" type:"list"` // contains filtered or unexported fields }
Specifies website configuration parameters for an Amazon S3 bucket.

func (WebsiteConfiguration) GoString    added in  v0.6.5

func (s WebsiteConfiguration ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*WebsiteConfiguration) SetErrorDocument    added in  v1.5.0

func (s * WebsiteConfiguration ) SetErrorDocument(v * ErrorDocument ) * WebsiteConfiguration
SetErrorDocument sets the ErrorDocument field's value.

func (*WebsiteConfiguration) SetIndexDocument    added in  v1.5.0

func (s * WebsiteConfiguration ) SetIndexDocument(v * IndexDocument ) * WebsiteConfiguration
SetIndexDocument sets the IndexDocument field's value.

func (*WebsiteConfiguration) SetRedirectAllRequestsTo    added in  v1.5.0

func (s * WebsiteConfiguration ) SetRedirectAllRequestsTo(v * RedirectAllRequestsTo ) * WebsiteConfiguration
SetRedirectAllRequestsTo sets the RedirectAllRequestsTo field's value.

func (*WebsiteConfiguration) SetRoutingRules    added in  v1.5.0

func (s * WebsiteConfiguration ) SetRoutingRules(v []* RoutingRule ) * WebsiteConfiguration
SetRoutingRules sets the RoutingRules field's value.

func (WebsiteConfiguration) String    added in  v0.6.5

func (s WebsiteConfiguration ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*WebsiteConfiguration) Validate    added in  v1.1.21

func (s * WebsiteConfiguration ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type WriteGetObjectResponseInput    added in  v1.38.0
type WriteGetObjectResponseInput struct {  // Indicates that a range of bytes was specified.  AcceptRanges * string `location:"header" locationName:"x-amz-fwd-header-accept-ranges" type:"string"`  // The object data.   //  // To use an non-seekable io.Reader for this request wrap the io.Reader with  // "aws.ReadSeekCloser". The SDK will not retry request errors for non-seekable  // readers. This will allow the SDK to send the reader's payload as chunked  // transfer encoding. Body io . ReadSeeker `type:"blob"`  // Indicates whether the object stored in Amazon S3 uses an S3 bucket key for   // server-side encryption with Amazon Web Services KMS (SSE-KMS). BucketKeyEnabled * bool `location:"header" locationName:"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled" type:"boolean"`  // Specifies caching behavior along the request/reply chain.  CacheControl * string `location:"header" locationName:"x-amz-fwd-header-Cache-Control" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This specifies the base64-encoded,  // 32-bit CRC32 checksum of the object returned by the Object Lambda function.  // This may not match the checksum for the object stored in Amazon S3. Amazon  // S3 will perform validation of the checksum values only when the original  // GetObject request required checksum validation. For more information about  // checksums, see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // Only one checksum header can be specified at a time. If you supply multiple  // checksum headers, this request will fail. ChecksumCRC32 * string `location:"header" locationName:"x-amz-fwd-header-x-amz-checksum-crc32" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This specifies the base64-encoded,  // 32-bit CRC32C checksum of the object returned by the Object Lambda function.  // This may not match the checksum for the object stored in Amazon S3. Amazon  // S3 will perform validation of the checksum values only when the original  // GetObject request required checksum validation. For more information about  // checksums, see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // Only one checksum header can be specified at a time. If you supply multiple  // checksum headers, this request will fail. ChecksumCRC32C * string `location:"header" locationName:"x-amz-fwd-header-x-amz-checksum-crc32c" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This specifies the base64-encoded,  // 160-bit SHA-1 digest of the object returned by the Object Lambda function.  // This may not match the checksum for the object stored in Amazon S3. Amazon  // S3 will perform validation of the checksum values only when the original  // GetObject request required checksum validation. For more information about  // checksums, see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // Only one checksum header can be specified at a time. If you supply multiple  // checksum headers, this request will fail. ChecksumSHA1 * string `location:"header" locationName:"x-amz-fwd-header-x-amz-checksum-sha1" type:"string"`  // This header can be used as a data integrity check to verify that the data   // received is the same data that was originally sent. This specifies the base64-encoded,  // 256-bit SHA-256 digest of the object returned by the Object Lambda function.  // This may not match the checksum for the object stored in Amazon S3. Amazon  // S3 will perform validation of the checksum values only when the original  // GetObject request required checksum validation. For more information about  // checksums, see Checking object integrity ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html )  // in the Amazon S3 User Guide.  //  // Only one checksum header can be specified at a time. If you supply multiple  // checksum headers, this request will fail. ChecksumSHA256 * string `location:"header" locationName:"x-amz-fwd-header-x-amz-checksum-sha256" type:"string"`  // Specifies presentational information for the object.  ContentDisposition * string `location:"header" locationName:"x-amz-fwd-header-Content-Disposition" type:"string"`  // Specifies what content encodings have been applied to the object and thus   // what decoding mechanisms must be applied to obtain the media-type referenced  // by the Content-Type header field. ContentEncoding * string `location:"header" locationName:"x-amz-fwd-header-Content-Encoding" type:"string"`  // The language the content is in.  ContentLanguage * string `location:"header" locationName:"x-amz-fwd-header-Content-Language" type:"string"`  // The size of the content body in bytes.  ContentLength * int64 `location:"header" locationName:"Content-Length" type:"long"`  // The portion of the object returned in the response.  ContentRange * string `location:"header" locationName:"x-amz-fwd-header-Content-Range" type:"string"`  // A standard MIME type describing the format of the object data.  ContentType * string `location:"header" locationName:"x-amz-fwd-header-Content-Type" type:"string"`  // Specifies whether an object stored in Amazon S3 is (true) or is not (false)   // a delete marker. DeleteMarker * bool `location:"header" locationName:"x-amz-fwd-header-x-amz-delete-marker" type:"boolean"`  // An opaque identifier assigned by a web server to a specific version of a   // resource found at a URL. ETag * string `location:"header" locationName:"x-amz-fwd-header-ETag" type:"string"`  // A string that uniquely identifies an error condition. Returned in the <Code>   // tag of the error XML response for a corresponding GetObject call. Cannot  // be used with a successful StatusCode header or when the transformed object  // is provided in the body. All error codes from S3 are sentence-cased. The  // regular expression (regex) value is "^[A-Z][a-zA-Z]+$". ErrorCode * string `location:"header" locationName:"x-amz-fwd-error-code" type:"string"`  // Contains a generic description of the error condition. Returned in the <Message>   // tag of the error XML response for a corresponding GetObject call. Cannot  // be used with a successful StatusCode header or when the transformed object  // is provided in body. ErrorMessage * string `location:"header" locationName:"x-amz-fwd-error-message" type:"string"`  // If the object expiration is configured (see PUT Bucket lifecycle), the response   // includes this header. It includes the expiry-date and rule-id key-value pairs  // that provide the object expiration information. The value of the rule-id  // is URL-encoded. Expiration * string `location:"header" locationName:"x-amz-fwd-header-x-amz-expiration" type:"string"`  // The date and time at which the object is no longer cacheable.  Expires * time . Time `location:"header" locationName:"x-amz-fwd-header-Expires" type:"timestamp"`  // The date and time that the object was last modified.  LastModified * time . Time `location:"header" locationName:"x-amz-fwd-header-Last-Modified" type:"timestamp"`  // A map of metadata to store with the object in S3.  Metadata map[ string ]* string `location:"headers" locationName:"x-amz-meta-" type:"map"`  // Set to the number of metadata entries not returned in x-amz-meta headers.   // This can happen if you create metadata using an API like SOAP that supports  // more flexible metadata than the REST API. For example, using SOAP, you can  // create metadata whose values are not legal HTTP headers. MissingMeta * int64 `location:"header" locationName:"x-amz-fwd-header-x-amz-missing-meta" type:"integer"`  // Indicates whether an object stored in Amazon S3 has an active legal hold.  ObjectLockLegalHoldStatus * string `location:"header" locationName:"x-amz-fwd-header-x-amz-object-lock-legal-hold" type:"string" enum:"ObjectLockLegalHoldStatus"`  // Indicates whether an object stored in Amazon S3 has Object Lock enabled.   // For more information about S3 Object Lock, see Object Lock ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock.html ). ObjectLockMode * string `location:"header" locationName:"x-amz-fwd-header-x-amz-object-lock-mode" type:"string" enum:"ObjectLockMode"`  // The date and time when Object Lock is configured to expire.  ObjectLockRetainUntilDate * time . Time `` /* 128-byte string literal not displayed */   // The count of parts this object has.  PartsCount * int64 `location:"header" locationName:"x-amz-fwd-header-x-amz-mp-parts-count" type:"integer"`  // Indicates if request involves bucket that is either a source or destination   // in a Replication rule. For more information about S3 Replication, see Replication  // ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication.html ). ReplicationStatus * string `location:"header" locationName:"x-amz-fwd-header-x-amz-replication-status" type:"string" enum:"ReplicationStatus"`  // If present, indicates that the requester was successfully charged for the   // request. RequestCharged * string `location:"header" locationName:"x-amz-fwd-header-x-amz-request-charged" type:"string" enum:"RequestCharged"`  // Route prefix to the HTTP URL generated.   //  // RequestRoute is a required field RequestRoute * string `location:"header" locationName:"x-amz-request-route" type:"string" required:"true"`  // A single use encrypted token that maps WriteGetObjectResponse to the end   // user GetObject request.  //  // RequestToken is a required field RequestToken * string `location:"header" locationName:"x-amz-request-token" type:"string" required:"true"`  // Provides information about object restoration operation and expiration time   // of the restored object copy. Restore * string `location:"header" locationName:"x-amz-fwd-header-x-amz-restore" type:"string"`  // Encryption algorithm used if server-side encryption with a customer-provided   // encryption key was specified for object stored in Amazon S3. SSECustomerAlgorithm * string `location:"header" locationName:"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm" type:"string"`  // 128-bit MD5 digest of customer-provided encryption key used in Amazon S3   // to encrypt data stored in S3. For more information, see Protecting data using  // server-side encryption with customer-provided encryption keys (SSE-C) ( https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html ). SSECustomerKeyMD5 * string `location:"header" locationName:"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-MD5" type:"string"`  // If present, specifies the ID (Key ID, Key ARN, or Key Alias) of the Amazon   // Web Services Key Management Service (Amazon Web Services KMS) symmetric encryption  // customer managed key that was used for stored in Amazon S3 object.  //  // SSEKMSKeyId is a sensitive parameter and its value will be  // replaced with "sensitive" in string returned by WriteGetObjectResponseInput's  // String and GoString methods. SSEKMSKeyId * string `location:"header" locationName:"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id" type:"string" sensitive:"true"`  // The server-side encryption algorithm used when storing requested object in   // Amazon S3 (for example, AES256, aws:kms). ServerSideEncryption * string `location:"header" locationName:"x-amz-fwd-header-x-amz-server-side-encryption" type:"string" enum:"ServerSideEncryption"`  // The integer status code for an HTTP response of a corresponding GetObject   // request. The following is a list of status codes.  //  //    * 200 - OK  //  //    * 206 - Partial Content  //  //    * 304 - Not Modified  //  //    * 400 - Bad Request  //  //    * 401 - Unauthorized  //  //    * 403 - Forbidden  //  //    * 404 - Not Found  //  //    * 405 - Method Not Allowed  //  //    * 409 - Conflict  //  //    * 411 - Length Required  //  //    * 412 - Precondition Failed  //  //    * 416 - Range Not Satisfiable  //  //    * 500 - Internal Server Error  //  //    * 503 - Service Unavailable StatusCode * int64 `location:"header" locationName:"x-amz-fwd-status" type:"integer"`  // Provides storage class information of the object. Amazon S3 returns this   // header for all objects except for S3 Standard storage class objects.  //  // For more information, see Storage Classes ( https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html ). StorageClass * string `location:"header" locationName:"x-amz-fwd-header-x-amz-storage-class" type:"string" enum:"StorageClass"`  // The number of tags, if any, on the object.  TagCount * int64 `location:"header" locationName:"x-amz-fwd-header-x-amz-tagging-count" type:"integer"`  // An ID used to reference a specific version of the object.  VersionId * string `location:"header" locationName:"x-amz-fwd-header-x-amz-version-id" type:"string"` // contains filtered or unexported fields }

func (WriteGetObjectResponseInput) GoString    added in  v1.38.0

func (s WriteGetObjectResponseInput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*WriteGetObjectResponseInput) SetAcceptRanges    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetAcceptRanges(v string ) * WriteGetObjectResponseInput
SetAcceptRanges sets the AcceptRanges field's value.

func (*WriteGetObjectResponseInput) SetBody    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetBody(v io . ReadSeeker ) * WriteGetObjectResponseInput
SetBody sets the Body field's value.

func (*WriteGetObjectResponseInput) SetBucketKeyEnabled    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetBucketKeyEnabled(v bool ) * WriteGetObjectResponseInput
SetBucketKeyEnabled sets the BucketKeyEnabled field's value.

func (*WriteGetObjectResponseInput) SetCacheControl    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetCacheControl(v string ) * WriteGetObjectResponseInput
SetCacheControl sets the CacheControl field's value.

func (*WriteGetObjectResponseInput) SetChecksumCRC32    added in  v1.43.6

func (s * WriteGetObjectResponseInput ) SetChecksumCRC32(v string ) * WriteGetObjectResponseInput
SetChecksumCRC32 sets the ChecksumCRC32 field's value.

func (*WriteGetObjectResponseInput) SetChecksumCRC32C    added in  v1.43.6

func (s * WriteGetObjectResponseInput ) SetChecksumCRC32C(v string ) * WriteGetObjectResponseInput
SetChecksumCRC32C sets the ChecksumCRC32C field's value.

func (*WriteGetObjectResponseInput) SetChecksumSHA1    added in  v1.43.6

func (s * WriteGetObjectResponseInput ) SetChecksumSHA1(v string ) * WriteGetObjectResponseInput
SetChecksumSHA1 sets the ChecksumSHA1 field's value.

func (*WriteGetObjectResponseInput) SetChecksumSHA256    added in  v1.43.6

func (s * WriteGetObjectResponseInput ) SetChecksumSHA256(v string ) * WriteGetObjectResponseInput
SetChecksumSHA256 sets the ChecksumSHA256 field's value.

func (*WriteGetObjectResponseInput) SetContentDisposition    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetContentDisposition(v string ) * WriteGetObjectResponseInput
SetContentDisposition sets the ContentDisposition field's value.

func (*WriteGetObjectResponseInput) SetContentEncoding    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetContentEncoding(v string ) * WriteGetObjectResponseInput
SetContentEncoding sets the ContentEncoding field's value.

func (*WriteGetObjectResponseInput) SetContentLanguage    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetContentLanguage(v string ) * WriteGetObjectResponseInput
SetContentLanguage sets the ContentLanguage field's value.

func (*WriteGetObjectResponseInput) SetContentLength    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetContentLength(v int64 ) * WriteGetObjectResponseInput
SetContentLength sets the ContentLength field's value.

func (*WriteGetObjectResponseInput) SetContentRange    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetContentRange(v string ) * WriteGetObjectResponseInput
SetContentRange sets the ContentRange field's value.

func (*WriteGetObjectResponseInput) SetContentType    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetContentType(v string ) * WriteGetObjectResponseInput
SetContentType sets the ContentType field's value.

func (*WriteGetObjectResponseInput) SetDeleteMarker    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetDeleteMarker(v bool ) * WriteGetObjectResponseInput
SetDeleteMarker sets the DeleteMarker field's value.

func (*WriteGetObjectResponseInput) SetETag    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetETag(v string ) * WriteGetObjectResponseInput
SetETag sets the ETag field's value.

func (*WriteGetObjectResponseInput) SetErrorCode    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetErrorCode(v string ) * WriteGetObjectResponseInput
SetErrorCode sets the ErrorCode field's value.

func (*WriteGetObjectResponseInput) SetErrorMessage    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetErrorMessage(v string ) * WriteGetObjectResponseInput
SetErrorMessage sets the ErrorMessage field's value.

func (*WriteGetObjectResponseInput) SetExpiration    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetExpiration(v string ) * WriteGetObjectResponseInput
SetExpiration sets the Expiration field's value.

func (*WriteGetObjectResponseInput) SetExpires    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetExpires(v time . Time ) * WriteGetObjectResponseInput
SetExpires sets the Expires field's value.

func (*WriteGetObjectResponseInput) SetLastModified    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetLastModified(v time . Time ) * WriteGetObjectResponseInput
SetLastModified sets the LastModified field's value.

func (*WriteGetObjectResponseInput) SetMetadata    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetMetadata(v map[ string ]* string ) * WriteGetObjectResponseInput
SetMetadata sets the Metadata field's value.

func (*WriteGetObjectResponseInput) SetMissingMeta    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetMissingMeta(v int64 ) * WriteGetObjectResponseInput
SetMissingMeta sets the MissingMeta field's value.

func (*WriteGetObjectResponseInput) SetObjectLockLegalHoldStatus    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetObjectLockLegalHoldStatus(v string ) * WriteGetObjectResponseInput
SetObjectLockLegalHoldStatus sets the ObjectLockLegalHoldStatus field's value.

func (*WriteGetObjectResponseInput) SetObjectLockMode    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetObjectLockMode(v string ) * WriteGetObjectResponseInput
SetObjectLockMode sets the ObjectLockMode field's value.

func (*WriteGetObjectResponseInput) SetObjectLockRetainUntilDate    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetObjectLockRetainUntilDate(v time . Time ) * WriteGetObjectResponseInput
SetObjectLockRetainUntilDate sets the ObjectLockRetainUntilDate field's value.

func (*WriteGetObjectResponseInput) SetPartsCount    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetPartsCount(v int64 ) * WriteGetObjectResponseInput
SetPartsCount sets the PartsCount field's value.

func (*WriteGetObjectResponseInput) SetReplicationStatus    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetReplicationStatus(v string ) * WriteGetObjectResponseInput
SetReplicationStatus sets the ReplicationStatus field's value.

func (*WriteGetObjectResponseInput) SetRequestCharged    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetRequestCharged(v string ) * WriteGetObjectResponseInput
SetRequestCharged sets the RequestCharged field's value.

func (*WriteGetObjectResponseInput) SetRequestRoute    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetRequestRoute(v string ) * WriteGetObjectResponseInput
SetRequestRoute sets the RequestRoute field's value.

func (*WriteGetObjectResponseInput) SetRequestToken    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetRequestToken(v string ) * WriteGetObjectResponseInput
SetRequestToken sets the RequestToken field's value.

func (*WriteGetObjectResponseInput) SetRestore    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetRestore(v string ) * WriteGetObjectResponseInput
SetRestore sets the Restore field's value.

func (*WriteGetObjectResponseInput) SetSSECustomerAlgorithm    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetSSECustomerAlgorithm(v string ) * WriteGetObjectResponseInput
SetSSECustomerAlgorithm sets the SSECustomerAlgorithm field's value.

func (*WriteGetObjectResponseInput) SetSSECustomerKeyMD5    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetSSECustomerKeyMD5(v string ) * WriteGetObjectResponseInput
SetSSECustomerKeyMD5 sets the SSECustomerKeyMD5 field's value.

func (*WriteGetObjectResponseInput) SetSSEKMSKeyId    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetSSEKMSKeyId(v string ) * WriteGetObjectResponseInput
SetSSEKMSKeyId sets the SSEKMSKeyId field's value.

func (*WriteGetObjectResponseInput) SetServerSideEncryption    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetServerSideEncryption(v string ) * WriteGetObjectResponseInput
SetServerSideEncryption sets the ServerSideEncryption field's value.

func (*WriteGetObjectResponseInput) SetStatusCode    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetStatusCode(v int64 ) * WriteGetObjectResponseInput
SetStatusCode sets the StatusCode field's value.

func (*WriteGetObjectResponseInput) SetStorageClass    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetStorageClass(v string ) * WriteGetObjectResponseInput
SetStorageClass sets the StorageClass field's value.

func (*WriteGetObjectResponseInput) SetTagCount    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetTagCount(v int64 ) * WriteGetObjectResponseInput
SetTagCount sets the TagCount field's value.

func (*WriteGetObjectResponseInput) SetVersionId    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) SetVersionId(v string ) * WriteGetObjectResponseInput
SetVersionId sets the VersionId field's value.

func (WriteGetObjectResponseInput) String    added in  v1.38.0

func (s WriteGetObjectResponseInput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (*WriteGetObjectResponseInput) Validate    added in  v1.38.0

func (s * WriteGetObjectResponseInput ) Validate() error
Validate inspects the fields of the type to determine if they are valid.
type WriteGetObjectResponseOutput    added in  v1.38.0
type WriteGetObjectResponseOutput struct { // contains filtered or unexported fields }

func (WriteGetObjectResponseOutput) GoString    added in  v1.38.0

func (s WriteGetObjectResponseOutput ) GoString() string
GoString returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".

func (WriteGetObjectResponseOutput) String    added in  v1.38.0

func (s WriteGetObjectResponseOutput ) String() string
String returns the string representation.
API parameter values that are decorated as "sensitive" in the API will not
be included in the string output. The member name will be present, but the
value will be replaced with "sensitive".
Source Files
View all Source files
api.go   body_hash.go   bucket_location.go   customizations.go   doc.go   doc_custom.go   endpoint.go   endpoint_builder.go   errors.go   host_style_bucket.go   platform_handlers_go1.6.go   service.go   sse.go   statusok_error.go   unmarshal_error.go   waiters.go
Directories

Show internal  Expand all      Path  Synopsis

internal
s3testing


s3crypto
Package s3crypto provides encryption to S3 using KMS and AES GCM.    Package s3crypto provides encryption to S3 using KMS and AES GCM.

s3iface
Package s3iface provides an interface to enable mocking the Amazon Simple Storage Service service client for testing your code.    Package s3iface provides an interface to enable mocking the Amazon Simple Storage Service service client for testing your code.

s3manager
Package s3manager provides utilities to upload and download objects from S3 concurrently.    Package s3manager provides utilities to upload and download objects from S3 concurrently.
s3manageriface
Package s3manageriface provides an interface for the s3manager package    Package s3manageriface provides an interface for the s3manager package
Click to show internal directories.
Click to hide internal directories.

Why Go  Use Cases  Case Studies
Get Started  Playground  Tour  Stack Overflow  Help
Packages  Standard Library  Sub-repositories  About Go Packages
About  Download  Blog  Issue Tracker  Release Notes  Brand Guidelines  Code of Conduct
Connect  Twitter  GitHub  Slack  r/golang  Meetup  Golang Weekly
Copyright    Terms of Service    Privacy Policy    Report an Issue
Jump to



Close
Keyboard shortcuts
? : This menu    / : Search site    f or F : Jump to    y or Y  : Canonical URL
Close
go.dev uses cookies from Google to deliver and enhance the quality of its services and to
analyze traffic. Learn more.
Okay   // this will throw if the querySelector can’t find the element
const gtmId = document.querySelector('.js-gtmID').dataset.gtmid;
if (!gtmId) {
throw new Error('Google Tag Manager ID not found');
}
loadScript(`https://www.googletagmanager.com/gtm.js?id=${gtmId}`);

loadScript('/static/frontend/unit/main/main.js')  loadScript('/static/frontend/unit/unit.js')